<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models;

use stdClass;

/**
 * You can use any `field_name` from this endpoint results, and you can combine more than one field for
 * more complex sorting. You can use one of the following methods:
 * >/endpoint?sort={ "field_name": "asc", "field_name2": "desc" }
 * >
 * >/endpoint?sort[field_name]=asc&sort[field_name2]=desc
 * >
 */
class Sort27 implements \JsonSerializable
{
    /**
     * @var array|null
     */
    private $accountHolderName;

    /**
     * @var array|null
     */
    private $expDate;

    /**
     * @var array|null
     */
    private $cvv;

    /**
     * @var array|null
     */
    private $accountNumber;

    /**
     * @var array|null
     */
    private $billingAddress;

    /**
     * @var array|null
     */
    private $contactId;

    /**
     * @var array|null
     */
    private $contactApiId;

    /**
     * @var array|null
     */
    private $locationId;

    /**
     * @var array|null
     */
    private $locationApiId;

    /**
     * @var array|null
     */
    private $id;

    /**
     * @var array|null
     */
    private $createdTs;

    /**
     * @var array|null
     */
    private $createdUserId;

    /**
     * Returns Account Holder Name.
     */
    public function getAccountHolderName(): ?array
    {
        return $this->accountHolderName;
    }

    /**
     * Sets Account Holder Name.
     *
     * @maps account_holder_name
     */
    public function setAccountHolderName(?array $accountHolderName): void
    {
        $this->accountHolderName = $accountHolderName;
    }

    /**
     * Returns Exp Date.
     */
    public function getExpDate(): ?array
    {
        return $this->expDate;
    }

    /**
     * Sets Exp Date.
     *
     * @maps exp_date
     */
    public function setExpDate(?array $expDate): void
    {
        $this->expDate = $expDate;
    }

    /**
     * Returns Cvv.
     */
    public function getCvv(): ?array
    {
        return $this->cvv;
    }

    /**
     * Sets Cvv.
     *
     * @maps cvv
     */
    public function setCvv(?array $cvv): void
    {
        $this->cvv = $cvv;
    }

    /**
     * Returns Account Number.
     */
    public function getAccountNumber(): ?array
    {
        return $this->accountNumber;
    }

    /**
     * Sets Account Number.
     *
     * @maps account_number
     */
    public function setAccountNumber(?array $accountNumber): void
    {
        $this->accountNumber = $accountNumber;
    }

    /**
     * Returns Billing Address.
     */
    public function getBillingAddress(): ?array
    {
        return $this->billingAddress;
    }

    /**
     * Sets Billing Address.
     *
     * @maps billing_address
     */
    public function setBillingAddress(?array $billingAddress): void
    {
        $this->billingAddress = $billingAddress;
    }

    /**
     * Returns Contact Id.
     */
    public function getContactId(): ?array
    {
        return $this->contactId;
    }

    /**
     * Sets Contact Id.
     *
     * @maps contact_id
     */
    public function setContactId(?array $contactId): void
    {
        $this->contactId = $contactId;
    }

    /**
     * Returns Contact Api Id.
     */
    public function getContactApiId(): ?array
    {
        return $this->contactApiId;
    }

    /**
     * Sets Contact Api Id.
     *
     * @maps contact_api_id
     */
    public function setContactApiId(?array $contactApiId): void
    {
        $this->contactApiId = $contactApiId;
    }

    /**
     * Returns Location Id.
     */
    public function getLocationId(): ?array
    {
        return $this->locationId;
    }

    /**
     * Sets Location Id.
     *
     * @maps location_id
     */
    public function setLocationId(?array $locationId): void
    {
        $this->locationId = $locationId;
    }

    /**
     * Returns Location Api Id.
     */
    public function getLocationApiId(): ?array
    {
        return $this->locationApiId;
    }

    /**
     * Sets Location Api Id.
     *
     * @maps location_api_id
     */
    public function setLocationApiId(?array $locationApiId): void
    {
        $this->locationApiId = $locationApiId;
    }

    /**
     * Returns Id.
     */
    public function getId(): ?array
    {
        return $this->id;
    }

    /**
     * Sets Id.
     *
     * @maps id
     */
    public function setId(?array $id): void
    {
        $this->id = $id;
    }

    /**
     * Returns Created Ts.
     */
    public function getCreatedTs(): ?array
    {
        return $this->createdTs;
    }

    /**
     * Sets Created Ts.
     *
     * @maps created_ts
     */
    public function setCreatedTs(?array $createdTs): void
    {
        $this->createdTs = $createdTs;
    }

    /**
     * Returns Created User Id.
     */
    public function getCreatedUserId(): ?array
    {
        return $this->createdUserId;
    }

    /**
     * Sets Created User Id.
     *
     * @maps created_user_id
     */
    public function setCreatedUserId(?array $createdUserId): void
    {
        $this->createdUserId = $createdUserId;
    }

    private $additionalProperties = [];

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property
     * @param mixed $value Value of property
     */
    public function addAdditionalProperty(string $name, $value)
    {
        $this->additionalProperties[$name] = $value;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->accountHolderName)) {
            $json['account_holder_name'] = $this->accountHolderName;
        }
        if (isset($this->expDate)) {
            $json['exp_date']            = $this->expDate;
        }
        if (isset($this->cvv)) {
            $json['cvv']                 = $this->cvv;
        }
        if (isset($this->accountNumber)) {
            $json['account_number']      = $this->accountNumber;
        }
        if (isset($this->billingAddress)) {
            $json['billing_address']     = $this->billingAddress;
        }
        if (isset($this->contactId)) {
            $json['contact_id']          = $this->contactId;
        }
        if (isset($this->contactApiId)) {
            $json['contact_api_id']      = $this->contactApiId;
        }
        if (isset($this->locationId)) {
            $json['location_id']         = $this->locationId;
        }
        if (isset($this->locationApiId)) {
            $json['location_api_id']     = $this->locationApiId;
        }
        if (isset($this->id)) {
            $json['id']                  = $this->id;
        }
        if (isset($this->createdTs)) {
            $json['created_ts']          = $this->createdTs;
        }
        if (isset($this->createdUserId)) {
            $json['created_user_id']     = $this->createdUserId;
        }
        $json = array_merge($json, $this->additionalProperties);

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
