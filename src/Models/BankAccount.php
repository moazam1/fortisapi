<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models;

use stdClass;

/**
 * The Bank Account.
 */
class BankAccount implements \JsonSerializable
{
    /**
     * @var array
     */
    private $routingNumber = [];

    /**
     * @var array
     */
    private $accountNumber = [];

    /**
     * @var array
     */
    private $accountHolderName = [];

    /**
     * Returns Routing Number.
     * Nine-digit Bank routing number.
     */
    public function getRoutingNumber(): ?string
    {
        if (count($this->routingNumber) == 0) {
            return null;
        }
        return $this->routingNumber['value'];
    }

    /**
     * Sets Routing Number.
     * Nine-digit Bank routing number.
     *
     * @maps routing_number
     */
    public function setRoutingNumber(?string $routingNumber): void
    {
        $this->routingNumber['value'] = $routingNumber;
    }

    /**
     * Unsets Routing Number.
     * Nine-digit Bank routing number.
     */
    public function unsetRoutingNumber(): void
    {
        $this->routingNumber = [];
    }

    /**
     * Returns Account Number.
     * Bank account number.
     */
    public function getAccountNumber(): ?string
    {
        if (count($this->accountNumber) == 0) {
            return null;
        }
        return $this->accountNumber['value'];
    }

    /**
     * Sets Account Number.
     * Bank account number.
     *
     * @maps account_number
     */
    public function setAccountNumber(?string $accountNumber): void
    {
        $this->accountNumber['value'] = $accountNumber;
    }

    /**
     * Unsets Account Number.
     * Bank account number.
     */
    public function unsetAccountNumber(): void
    {
        $this->accountNumber = [];
    }

    /**
     * Returns Account Holder Name.
     * Name on bank account.
     */
    public function getAccountHolderName(): ?string
    {
        if (count($this->accountHolderName) == 0) {
            return null;
        }
        return $this->accountHolderName['value'];
    }

    /**
     * Sets Account Holder Name.
     * Name on bank account.
     *
     * @maps account_holder_name
     */
    public function setAccountHolderName(?string $accountHolderName): void
    {
        $this->accountHolderName['value'] = $accountHolderName;
    }

    /**
     * Unsets Account Holder Name.
     * Name on bank account.
     */
    public function unsetAccountHolderName(): void
    {
        $this->accountHolderName = [];
    }

    private $additionalProperties = [];

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property
     * @param mixed $value Value of property
     */
    public function addAdditionalProperty(string $name, $value)
    {
        $this->additionalProperties[$name] = $value;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (!empty($this->routingNumber)) {
            $json['routing_number']      = $this->routingNumber['value'];
        }
        if (!empty($this->accountNumber)) {
            $json['account_number']      = $this->accountNumber['value'];
        }
        if (!empty($this->accountHolderName)) {
            $json['account_holder_name'] = $this->accountHolderName['value'];
        }
        $json = array_merge($json, $this->additionalProperties);

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
