<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models;

use stdClass;

/**
 * Ui Prefs
 */
class UiPrefs implements \JsonSerializable
{
    /**
     * @var array
     */
    private $entryPage = [];

    /**
     * @var array
     */
    private $pageSize = [];

    /**
     * @var array
     */
    private $reportExportType = [];

    /**
     * @var array
     */
    private $processMethod = [];

    /**
     * @var array
     */
    private $defaultTerminal = [];

    /**
     * Returns Entry Page.
     * Ui Prefs Entry Page
     */
    public function getEntryPage(): ?string
    {
        if (count($this->entryPage) == 0) {
            return null;
        }
        return $this->entryPage['value'];
    }

    /**
     * Sets Entry Page.
     * Ui Prefs Entry Page
     *
     * @maps entry_page
     */
    public function setEntryPage(?string $entryPage): void
    {
        $this->entryPage['value'] = $entryPage;
    }

    /**
     * Unsets Entry Page.
     * Ui Prefs Entry Page
     */
    public function unsetEntryPage(): void
    {
        $this->entryPage = [];
    }

    /**
     * Returns Page Size.
     * Ui Prefs Page Size
     */
    public function getPageSize(): ?int
    {
        if (count($this->pageSize) == 0) {
            return null;
        }
        return $this->pageSize['value'];
    }

    /**
     * Sets Page Size.
     * Ui Prefs Page Size
     *
     * @maps page_size
     */
    public function setPageSize(?int $pageSize): void
    {
        $this->pageSize['value'] = $pageSize;
    }

    /**
     * Unsets Page Size.
     * Ui Prefs Page Size
     */
    public function unsetPageSize(): void
    {
        $this->pageSize = [];
    }

    /**
     * Returns Report Export Type.
     * Ui Prefs Export Type
     */
    public function getReportExportType(): ?string
    {
        if (count($this->reportExportType) == 0) {
            return null;
        }
        return $this->reportExportType['value'];
    }

    /**
     * Sets Report Export Type.
     * Ui Prefs Export Type
     *
     * @maps report_export_type
     * @factory \FortisAPILib\Models\ReportExportTypeEnum::checkValue
     */
    public function setReportExportType(?string $reportExportType): void
    {
        $this->reportExportType['value'] = $reportExportType;
    }

    /**
     * Unsets Report Export Type.
     * Ui Prefs Export Type
     */
    public function unsetReportExportType(): void
    {
        $this->reportExportType = [];
    }

    /**
     * Returns Process Method.
     * Ui Prefs Process Method
     */
    public function getProcessMethod(): ?string
    {
        if (count($this->processMethod) == 0) {
            return null;
        }
        return $this->processMethod['value'];
    }

    /**
     * Sets Process Method.
     * Ui Prefs Process Method
     *
     * @maps process_method
     * @factory \FortisAPILib\Models\ProcessMethodEnum::checkValue
     */
    public function setProcessMethod(?string $processMethod): void
    {
        $this->processMethod['value'] = $processMethod;
    }

    /**
     * Unsets Process Method.
     * Ui Prefs Process Method
     */
    public function unsetProcessMethod(): void
    {
        $this->processMethod = [];
    }

    /**
     * Returns Default Terminal.
     * Ui Prefs Default Termianl
     */
    public function getDefaultTerminal(): ?string
    {
        if (count($this->defaultTerminal) == 0) {
            return null;
        }
        return $this->defaultTerminal['value'];
    }

    /**
     * Sets Default Terminal.
     * Ui Prefs Default Termianl
     *
     * @maps default_terminal
     */
    public function setDefaultTerminal(?string $defaultTerminal): void
    {
        $this->defaultTerminal['value'] = $defaultTerminal;
    }

    /**
     * Unsets Default Terminal.
     * Ui Prefs Default Termianl
     */
    public function unsetDefaultTerminal(): void
    {
        $this->defaultTerminal = [];
    }

    private $additionalProperties = [];

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property
     * @param mixed $value Value of property
     */
    public function addAdditionalProperty(string $name, $value)
    {
        $this->additionalProperties[$name] = $value;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (!empty($this->entryPage)) {
            $json['entry_page']         = $this->entryPage['value'];
        }
        if (!empty($this->pageSize)) {
            $json['page_size']          = $this->pageSize['value'];
        }
        if (!empty($this->reportExportType)) {
            $json['report_export_type'] = ReportExportTypeEnum::checkValue($this->reportExportType['value']);
        }
        if (!empty($this->processMethod)) {
            $json['process_method']     = ProcessMethodEnum::checkValue($this->processMethod['value']);
        }
        if (!empty($this->defaultTerminal)) {
            $json['default_terminal']   = $this->defaultTerminal['value'];
        }
        $json = array_merge($json, $this->additionalProperties);

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
