<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models;

use FortisAPILib\ApiHelper;
use stdClass;

/**
 * You can use any `field_name` from this endpoint results as a filter, and you can also use more than
 * one field to create AND conditions. For date fields (ended with `_ts`), you can also search for
 * ranges using the `$gte` (Greater than or equal to) and/or  `$lte` (Lower than or equal to). You can
 * use one of the following methods:
 * >/endpoint?filter={ "field_name": "Value" }
 * >
 * >/endpoint?filter[field_name]=Value
 * >
 * >/endpoint?filter={ "created_ts": "today" }
 * >
 * >/endpoint?filter[created_ts]=today
 * >
 * >/endpoint?filter={ "created_ts": { "$gte": "yesterday", "$lte": "today" } }
 * >
 * >/endpoint?filter[created_ts][$gte]=yesterday&filter[created_ts][$lte]=today
 * >
 * >/endpoint?filter[address][city]=memphis
 * >
 * >/endpoint?filter={ "address": { "city" : "memphis" } }
 * >
 */
class Filter6 implements \JsonSerializable
{
    /**
     * @var array|null
     */
    private $locationId;

    /**
     * @var array|null
     */
    private $title;

    /**
     * @var array|null
     */
    private $ccProductTransactionId;

    /**
     * @var array|null
     */
    private $achProductTransactionId;

    /**
     * @var array|null
     */
    private $dueDate;

    /**
     * @var array|null
     */
    private $itemList;

    /**
     * @var array|null
     */
    private $allowOverpayment;

    /**
     * @var array|null
     */
    private $bankFundedOnlyOverride;

    /**
     * @var array|null
     */
    private $email;

    /**
     * @var array|null
     */
    private $contactId;

    /**
     * @var array|null
     */
    private $contactApiId;

    /**
     * @var array|null
     */
    private $quickInvoiceApiId;

    /**
     * @var array|null
     */
    private $customerId;

    /**
     * @var array|null
     */
    private $expireDate;

    /**
     * @var array|null
     */
    private $allowPartialPay;

    /**
     * @var array|null
     */
    private $attachFilesToEmail;

    /**
     * @var array|null
     */
    private $sendEmail;

    /**
     * @var array|null
     */
    private $invoiceNumber;

    /**
     * @var array|null
     */
    private $itemHeader;

    /**
     * @var array|null
     */
    private $itemFooter;

    /**
     * @var array|null
     */
    private $amountDue;

    /**
     * @var array|null
     */
    private $notificationEmail;

    /**
     * @var array|null
     */
    private $statusId;

    /**
     * @var array|null
     */
    private $statusCode;

    /**
     * @var array|null
     */
    private $note;

    /**
     * @var array|null
     */
    private $notificationDaysBeforeDueDate;

    /**
     * @var array|null
     */
    private $notificationDaysAfterDueDate;

    /**
     * @var array|null
     */
    private $notificationOnDueDate;

    /**
     * @var array|null
     */
    private $sendTextToPay;

    /**
     * @var array|null
     */
    private $files;

    /**
     * @var array|null
     */
    private $remainingBalance;

    /**
     * @var array|null
     */
    private $singlePaymentMinAmount;

    /**
     * @var array|null
     */
    private $singlePaymentMaxAmount;

    /**
     * @var array|null
     */
    private $cellPhone;

    /**
     * @var array|null
     */
    private $id;

    /**
     * @var string|null|CreatedTs1
     */
    private $createdTs;

    /**
     * @var string|null|ModifiedTs1
     */
    private $modifiedTs;

    /**
     * @var array|null
     */
    private $createdUserId;

    /**
     * @var array|null
     */
    private $modifiedUserId;

    /**
     * @var array|null
     */
    private $active;

    /**
     * @var array|null
     */
    private $paymentStatusId;

    /**
     * @var array|null
     */
    private $isActive;

    /**
     * @var array|null
     */
    private $quickInvoiceSetting;

    /**
     * @var array|null
     */
    private $tags;

    /**
     * @var array|null
     */
    private $quickInvoiceViews;

    /**
     * @var array|null
     */
    private $location;

    /**
     * @var array|null
     */
    private $createdUser;

    /**
     * @var array|null
     */
    private $modifiedUser;

    /**
     * @var array|null
     */
    private $changelogs;

    /**
     * @var array|null
     */
    private $contact;

    /**
     * @var array|null
     */
    private $logEmails;

    /**
     * @var array|null
     */
    private $logSms;

    /**
     * @var array|null
     */
    private $transactions;

    /**
     * @var array|null
     */
    private $ccProductTransaction;

    /**
     * @var array|null
     */
    private $achProductTransaction;

    /**
     * @var array|null
     */
    private $emailBlacklist;

    /**
     * @var array|null
     */
    private $smsBlacklist;

    /**
     * @var array|null
     */
    private $paymentUrl;

    /**
     * Returns Location Id.
     */
    public function getLocationId(): ?array
    {
        return $this->locationId;
    }

    /**
     * Sets Location Id.
     *
     * @maps location_id
     */
    public function setLocationId(?array $locationId): void
    {
        $this->locationId = $locationId;
    }

    /**
     * Returns Title.
     */
    public function getTitle(): ?array
    {
        return $this->title;
    }

    /**
     * Sets Title.
     *
     * @maps title
     */
    public function setTitle(?array $title): void
    {
        $this->title = $title;
    }

    /**
     * Returns Cc Product Transaction Id.
     */
    public function getCcProductTransactionId(): ?array
    {
        return $this->ccProductTransactionId;
    }

    /**
     * Sets Cc Product Transaction Id.
     *
     * @maps cc_product_transaction_id
     */
    public function setCcProductTransactionId(?array $ccProductTransactionId): void
    {
        $this->ccProductTransactionId = $ccProductTransactionId;
    }

    /**
     * Returns Ach Product Transaction Id.
     */
    public function getAchProductTransactionId(): ?array
    {
        return $this->achProductTransactionId;
    }

    /**
     * Sets Ach Product Transaction Id.
     *
     * @maps ach_product_transaction_id
     */
    public function setAchProductTransactionId(?array $achProductTransactionId): void
    {
        $this->achProductTransactionId = $achProductTransactionId;
    }

    /**
     * Returns Due Date.
     */
    public function getDueDate(): ?array
    {
        return $this->dueDate;
    }

    /**
     * Sets Due Date.
     *
     * @maps due_date
     */
    public function setDueDate(?array $dueDate): void
    {
        $this->dueDate = $dueDate;
    }

    /**
     * Returns Item List.
     */
    public function getItemList(): ?array
    {
        return $this->itemList;
    }

    /**
     * Sets Item List.
     *
     * @maps item_list
     */
    public function setItemList(?array $itemList): void
    {
        $this->itemList = $itemList;
    }

    /**
     * Returns Allow Overpayment.
     */
    public function getAllowOverpayment(): ?array
    {
        return $this->allowOverpayment;
    }

    /**
     * Sets Allow Overpayment.
     *
     * @maps allow_overpayment
     */
    public function setAllowOverpayment(?array $allowOverpayment): void
    {
        $this->allowOverpayment = $allowOverpayment;
    }

    /**
     * Returns Bank Funded Only Override.
     */
    public function getBankFundedOnlyOverride(): ?array
    {
        return $this->bankFundedOnlyOverride;
    }

    /**
     * Sets Bank Funded Only Override.
     *
     * @maps bank_funded_only_override
     */
    public function setBankFundedOnlyOverride(?array $bankFundedOnlyOverride): void
    {
        $this->bankFundedOnlyOverride = $bankFundedOnlyOverride;
    }

    /**
     * Returns Email.
     */
    public function getEmail(): ?array
    {
        return $this->email;
    }

    /**
     * Sets Email.
     *
     * @maps email
     */
    public function setEmail(?array $email): void
    {
        $this->email = $email;
    }

    /**
     * Returns Contact Id.
     */
    public function getContactId(): ?array
    {
        return $this->contactId;
    }

    /**
     * Sets Contact Id.
     *
     * @maps contact_id
     */
    public function setContactId(?array $contactId): void
    {
        $this->contactId = $contactId;
    }

    /**
     * Returns Contact Api Id.
     */
    public function getContactApiId(): ?array
    {
        return $this->contactApiId;
    }

    /**
     * Sets Contact Api Id.
     *
     * @maps contact_api_id
     */
    public function setContactApiId(?array $contactApiId): void
    {
        $this->contactApiId = $contactApiId;
    }

    /**
     * Returns Quick Invoice Api Id.
     */
    public function getQuickInvoiceApiId(): ?array
    {
        return $this->quickInvoiceApiId;
    }

    /**
     * Sets Quick Invoice Api Id.
     *
     * @maps quick_invoice_api_id
     */
    public function setQuickInvoiceApiId(?array $quickInvoiceApiId): void
    {
        $this->quickInvoiceApiId = $quickInvoiceApiId;
    }

    /**
     * Returns Customer Id.
     */
    public function getCustomerId(): ?array
    {
        return $this->customerId;
    }

    /**
     * Sets Customer Id.
     *
     * @maps customer_id
     */
    public function setCustomerId(?array $customerId): void
    {
        $this->customerId = $customerId;
    }

    /**
     * Returns Expire Date.
     */
    public function getExpireDate(): ?array
    {
        return $this->expireDate;
    }

    /**
     * Sets Expire Date.
     *
     * @maps expire_date
     */
    public function setExpireDate(?array $expireDate): void
    {
        $this->expireDate = $expireDate;
    }

    /**
     * Returns Allow Partial Pay.
     */
    public function getAllowPartialPay(): ?array
    {
        return $this->allowPartialPay;
    }

    /**
     * Sets Allow Partial Pay.
     *
     * @maps allow_partial_pay
     */
    public function setAllowPartialPay(?array $allowPartialPay): void
    {
        $this->allowPartialPay = $allowPartialPay;
    }

    /**
     * Returns Attach Files to Email.
     */
    public function getAttachFilesToEmail(): ?array
    {
        return $this->attachFilesToEmail;
    }

    /**
     * Sets Attach Files to Email.
     *
     * @maps attach_files_to_email
     */
    public function setAttachFilesToEmail(?array $attachFilesToEmail): void
    {
        $this->attachFilesToEmail = $attachFilesToEmail;
    }

    /**
     * Returns Send Email.
     */
    public function getSendEmail(): ?array
    {
        return $this->sendEmail;
    }

    /**
     * Sets Send Email.
     *
     * @maps send_email
     */
    public function setSendEmail(?array $sendEmail): void
    {
        $this->sendEmail = $sendEmail;
    }

    /**
     * Returns Invoice Number.
     */
    public function getInvoiceNumber(): ?array
    {
        return $this->invoiceNumber;
    }

    /**
     * Sets Invoice Number.
     *
     * @maps invoice_number
     */
    public function setInvoiceNumber(?array $invoiceNumber): void
    {
        $this->invoiceNumber = $invoiceNumber;
    }

    /**
     * Returns Item Header.
     */
    public function getItemHeader(): ?array
    {
        return $this->itemHeader;
    }

    /**
     * Sets Item Header.
     *
     * @maps item_header
     */
    public function setItemHeader(?array $itemHeader): void
    {
        $this->itemHeader = $itemHeader;
    }

    /**
     * Returns Item Footer.
     */
    public function getItemFooter(): ?array
    {
        return $this->itemFooter;
    }

    /**
     * Sets Item Footer.
     *
     * @maps item_footer
     */
    public function setItemFooter(?array $itemFooter): void
    {
        $this->itemFooter = $itemFooter;
    }

    /**
     * Returns Amount Due.
     */
    public function getAmountDue(): ?array
    {
        return $this->amountDue;
    }

    /**
     * Sets Amount Due.
     *
     * @maps amount_due
     */
    public function setAmountDue(?array $amountDue): void
    {
        $this->amountDue = $amountDue;
    }

    /**
     * Returns Notification Email.
     */
    public function getNotificationEmail(): ?array
    {
        return $this->notificationEmail;
    }

    /**
     * Sets Notification Email.
     *
     * @maps notification_email
     */
    public function setNotificationEmail(?array $notificationEmail): void
    {
        $this->notificationEmail = $notificationEmail;
    }

    /**
     * Returns Status Id.
     */
    public function getStatusId(): ?array
    {
        return $this->statusId;
    }

    /**
     * Sets Status Id.
     *
     * @maps status_id
     */
    public function setStatusId(?array $statusId): void
    {
        $this->statusId = $statusId;
    }

    /**
     * Returns Status Code.
     */
    public function getStatusCode(): ?array
    {
        return $this->statusCode;
    }

    /**
     * Sets Status Code.
     *
     * @maps status_code
     */
    public function setStatusCode(?array $statusCode): void
    {
        $this->statusCode = $statusCode;
    }

    /**
     * Returns Note.
     */
    public function getNote(): ?array
    {
        return $this->note;
    }

    /**
     * Sets Note.
     *
     * @maps note
     */
    public function setNote(?array $note): void
    {
        $this->note = $note;
    }

    /**
     * Returns Notification Days Before Due Date.
     */
    public function getNotificationDaysBeforeDueDate(): ?array
    {
        return $this->notificationDaysBeforeDueDate;
    }

    /**
     * Sets Notification Days Before Due Date.
     *
     * @maps notification_days_before_due_date
     */
    public function setNotificationDaysBeforeDueDate(?array $notificationDaysBeforeDueDate): void
    {
        $this->notificationDaysBeforeDueDate = $notificationDaysBeforeDueDate;
    }

    /**
     * Returns Notification Days After Due Date.
     */
    public function getNotificationDaysAfterDueDate(): ?array
    {
        return $this->notificationDaysAfterDueDate;
    }

    /**
     * Sets Notification Days After Due Date.
     *
     * @maps notification_days_after_due_date
     */
    public function setNotificationDaysAfterDueDate(?array $notificationDaysAfterDueDate): void
    {
        $this->notificationDaysAfterDueDate = $notificationDaysAfterDueDate;
    }

    /**
     * Returns Notification on Due Date.
     */
    public function getNotificationOnDueDate(): ?array
    {
        return $this->notificationOnDueDate;
    }

    /**
     * Sets Notification on Due Date.
     *
     * @maps notification_on_due_date
     */
    public function setNotificationOnDueDate(?array $notificationOnDueDate): void
    {
        $this->notificationOnDueDate = $notificationOnDueDate;
    }

    /**
     * Returns Send Text to Pay.
     */
    public function getSendTextToPay(): ?array
    {
        return $this->sendTextToPay;
    }

    /**
     * Sets Send Text to Pay.
     *
     * @maps send_text_to_pay
     */
    public function setSendTextToPay(?array $sendTextToPay): void
    {
        $this->sendTextToPay = $sendTextToPay;
    }

    /**
     * Returns Files.
     */
    public function getFiles(): ?array
    {
        return $this->files;
    }

    /**
     * Sets Files.
     *
     * @maps files
     */
    public function setFiles(?array $files): void
    {
        $this->files = $files;
    }

    /**
     * Returns Remaining Balance.
     */
    public function getRemainingBalance(): ?array
    {
        return $this->remainingBalance;
    }

    /**
     * Sets Remaining Balance.
     *
     * @maps remaining_balance
     */
    public function setRemainingBalance(?array $remainingBalance): void
    {
        $this->remainingBalance = $remainingBalance;
    }

    /**
     * Returns Single Payment Min Amount.
     */
    public function getSinglePaymentMinAmount(): ?array
    {
        return $this->singlePaymentMinAmount;
    }

    /**
     * Sets Single Payment Min Amount.
     *
     * @maps single_payment_min_amount
     */
    public function setSinglePaymentMinAmount(?array $singlePaymentMinAmount): void
    {
        $this->singlePaymentMinAmount = $singlePaymentMinAmount;
    }

    /**
     * Returns Single Payment Max Amount.
     */
    public function getSinglePaymentMaxAmount(): ?array
    {
        return $this->singlePaymentMaxAmount;
    }

    /**
     * Sets Single Payment Max Amount.
     *
     * @maps single_payment_max_amount
     */
    public function setSinglePaymentMaxAmount(?array $singlePaymentMaxAmount): void
    {
        $this->singlePaymentMaxAmount = $singlePaymentMaxAmount;
    }

    /**
     * Returns Cell Phone.
     */
    public function getCellPhone(): ?array
    {
        return $this->cellPhone;
    }

    /**
     * Sets Cell Phone.
     *
     * @maps cell_phone
     */
    public function setCellPhone(?array $cellPhone): void
    {
        $this->cellPhone = $cellPhone;
    }

    /**
     * Returns Id.
     */
    public function getId(): ?array
    {
        return $this->id;
    }

    /**
     * Sets Id.
     *
     * @maps id
     */
    public function setId(?array $id): void
    {
        $this->id = $id;
    }

    /**
     * Returns Created Ts.
     *
     * @return string|null|CreatedTs1
     */
    public function getCreatedTs()
    {
        return $this->createdTs;
    }

    /**
     * Sets Created Ts.
     *
     * @maps created_ts
     * @mapsBy anyOf(anyOf(CreatedTsEnum,CreatedTs1),null)
     * @factory \FortisAPILib\Models\CreatedTsEnum::checkValue CreatedTsEnum
     *
     * @param string|null|CreatedTs1 $createdTs
     */
    public function setCreatedTs($createdTs): void
    {
        $this->createdTs = $createdTs;
    }

    /**
     * Returns Modified Ts.
     *
     * @return string|null|ModifiedTs1
     */
    public function getModifiedTs()
    {
        return $this->modifiedTs;
    }

    /**
     * Sets Modified Ts.
     *
     * @maps modified_ts
     * @mapsBy anyOf(anyOf(ModifiedTsEnum,ModifiedTs1),null)
     * @factory \FortisAPILib\Models\ModifiedTsEnum::checkValue ModifiedTsEnum
     *
     * @param string|null|ModifiedTs1 $modifiedTs
     */
    public function setModifiedTs($modifiedTs): void
    {
        $this->modifiedTs = $modifiedTs;
    }

    /**
     * Returns Created User Id.
     */
    public function getCreatedUserId(): ?array
    {
        return $this->createdUserId;
    }

    /**
     * Sets Created User Id.
     *
     * @maps created_user_id
     */
    public function setCreatedUserId(?array $createdUserId): void
    {
        $this->createdUserId = $createdUserId;
    }

    /**
     * Returns Modified User Id.
     */
    public function getModifiedUserId(): ?array
    {
        return $this->modifiedUserId;
    }

    /**
     * Sets Modified User Id.
     *
     * @maps modified_user_id
     */
    public function setModifiedUserId(?array $modifiedUserId): void
    {
        $this->modifiedUserId = $modifiedUserId;
    }

    /**
     * Returns Active.
     */
    public function getActive(): ?array
    {
        return $this->active;
    }

    /**
     * Sets Active.
     *
     * @maps active
     */
    public function setActive(?array $active): void
    {
        $this->active = $active;
    }

    /**
     * Returns Payment Status Id.
     */
    public function getPaymentStatusId(): ?array
    {
        return $this->paymentStatusId;
    }

    /**
     * Sets Payment Status Id.
     *
     * @maps payment_status_id
     */
    public function setPaymentStatusId(?array $paymentStatusId): void
    {
        $this->paymentStatusId = $paymentStatusId;
    }

    /**
     * Returns Is Active.
     */
    public function getIsActive(): ?array
    {
        return $this->isActive;
    }

    /**
     * Sets Is Active.
     *
     * @maps is_active
     */
    public function setIsActive(?array $isActive): void
    {
        $this->isActive = $isActive;
    }

    /**
     * Returns Quick Invoice Setting.
     */
    public function getQuickInvoiceSetting(): ?array
    {
        return $this->quickInvoiceSetting;
    }

    /**
     * Sets Quick Invoice Setting.
     *
     * @maps quick_invoice_setting
     */
    public function setQuickInvoiceSetting(?array $quickInvoiceSetting): void
    {
        $this->quickInvoiceSetting = $quickInvoiceSetting;
    }

    /**
     * Returns Tags.
     */
    public function getTags(): ?array
    {
        return $this->tags;
    }

    /**
     * Sets Tags.
     *
     * @maps tags
     */
    public function setTags(?array $tags): void
    {
        $this->tags = $tags;
    }

    /**
     * Returns Quick Invoice Views.
     */
    public function getQuickInvoiceViews(): ?array
    {
        return $this->quickInvoiceViews;
    }

    /**
     * Sets Quick Invoice Views.
     *
     * @maps quick_invoice_views
     */
    public function setQuickInvoiceViews(?array $quickInvoiceViews): void
    {
        $this->quickInvoiceViews = $quickInvoiceViews;
    }

    /**
     * Returns Location.
     */
    public function getLocation(): ?array
    {
        return $this->location;
    }

    /**
     * Sets Location.
     *
     * @maps location
     */
    public function setLocation(?array $location): void
    {
        $this->location = $location;
    }

    /**
     * Returns Created User.
     */
    public function getCreatedUser(): ?array
    {
        return $this->createdUser;
    }

    /**
     * Sets Created User.
     *
     * @maps created_user
     */
    public function setCreatedUser(?array $createdUser): void
    {
        $this->createdUser = $createdUser;
    }

    /**
     * Returns Modified User.
     */
    public function getModifiedUser(): ?array
    {
        return $this->modifiedUser;
    }

    /**
     * Sets Modified User.
     *
     * @maps modified_user
     */
    public function setModifiedUser(?array $modifiedUser): void
    {
        $this->modifiedUser = $modifiedUser;
    }

    /**
     * Returns Changelogs.
     */
    public function getChangelogs(): ?array
    {
        return $this->changelogs;
    }

    /**
     * Sets Changelogs.
     *
     * @maps changelogs
     */
    public function setChangelogs(?array $changelogs): void
    {
        $this->changelogs = $changelogs;
    }

    /**
     * Returns Contact.
     */
    public function getContact(): ?array
    {
        return $this->contact;
    }

    /**
     * Sets Contact.
     *
     * @maps contact
     */
    public function setContact(?array $contact): void
    {
        $this->contact = $contact;
    }

    /**
     * Returns Log Emails.
     */
    public function getLogEmails(): ?array
    {
        return $this->logEmails;
    }

    /**
     * Sets Log Emails.
     *
     * @maps log_emails
     */
    public function setLogEmails(?array $logEmails): void
    {
        $this->logEmails = $logEmails;
    }

    /**
     * Returns Log Sms.
     */
    public function getLogSms(): ?array
    {
        return $this->logSms;
    }

    /**
     * Sets Log Sms.
     *
     * @maps log_sms
     */
    public function setLogSms(?array $logSms): void
    {
        $this->logSms = $logSms;
    }

    /**
     * Returns Transactions.
     */
    public function getTransactions(): ?array
    {
        return $this->transactions;
    }

    /**
     * Sets Transactions.
     *
     * @maps transactions
     */
    public function setTransactions(?array $transactions): void
    {
        $this->transactions = $transactions;
    }

    /**
     * Returns Cc Product Transaction.
     */
    public function getCcProductTransaction(): ?array
    {
        return $this->ccProductTransaction;
    }

    /**
     * Sets Cc Product Transaction.
     *
     * @maps cc_product_transaction
     */
    public function setCcProductTransaction(?array $ccProductTransaction): void
    {
        $this->ccProductTransaction = $ccProductTransaction;
    }

    /**
     * Returns Ach Product Transaction.
     */
    public function getAchProductTransaction(): ?array
    {
        return $this->achProductTransaction;
    }

    /**
     * Sets Ach Product Transaction.
     *
     * @maps ach_product_transaction
     */
    public function setAchProductTransaction(?array $achProductTransaction): void
    {
        $this->achProductTransaction = $achProductTransaction;
    }

    /**
     * Returns Email Blacklist.
     */
    public function getEmailBlacklist(): ?array
    {
        return $this->emailBlacklist;
    }

    /**
     * Sets Email Blacklist.
     *
     * @maps email_blacklist
     */
    public function setEmailBlacklist(?array $emailBlacklist): void
    {
        $this->emailBlacklist = $emailBlacklist;
    }

    /**
     * Returns Sms Blacklist.
     */
    public function getSmsBlacklist(): ?array
    {
        return $this->smsBlacklist;
    }

    /**
     * Sets Sms Blacklist.
     *
     * @maps sms_blacklist
     */
    public function setSmsBlacklist(?array $smsBlacklist): void
    {
        $this->smsBlacklist = $smsBlacklist;
    }

    /**
     * Returns Payment Url.
     */
    public function getPaymentUrl(): ?array
    {
        return $this->paymentUrl;
    }

    /**
     * Sets Payment Url.
     *
     * @maps payment_url
     */
    public function setPaymentUrl(?array $paymentUrl): void
    {
        $this->paymentUrl = $paymentUrl;
    }

    private $additionalProperties = [];

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property
     * @param mixed $value Value of property
     */
    public function addAdditionalProperty(string $name, $value)
    {
        $this->additionalProperties[$name] = $value;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->locationId)) {
            $json['location_id']                       = $this->locationId;
        }
        if (isset($this->title)) {
            $json['title']                             = $this->title;
        }
        if (isset($this->ccProductTransactionId)) {
            $json['cc_product_transaction_id']         = $this->ccProductTransactionId;
        }
        if (isset($this->achProductTransactionId)) {
            $json['ach_product_transaction_id']        = $this->achProductTransactionId;
        }
        if (isset($this->dueDate)) {
            $json['due_date']                          = $this->dueDate;
        }
        if (isset($this->itemList)) {
            $json['item_list']                         = $this->itemList;
        }
        if (isset($this->allowOverpayment)) {
            $json['allow_overpayment']                 = $this->allowOverpayment;
        }
        if (isset($this->bankFundedOnlyOverride)) {
            $json['bank_funded_only_override']         = $this->bankFundedOnlyOverride;
        }
        if (isset($this->email)) {
            $json['email']                             = $this->email;
        }
        if (isset($this->contactId)) {
            $json['contact_id']                        = $this->contactId;
        }
        if (isset($this->contactApiId)) {
            $json['contact_api_id']                    = $this->contactApiId;
        }
        if (isset($this->quickInvoiceApiId)) {
            $json['quick_invoice_api_id']              = $this->quickInvoiceApiId;
        }
        if (isset($this->customerId)) {
            $json['customer_id']                       = $this->customerId;
        }
        if (isset($this->expireDate)) {
            $json['expire_date']                       = $this->expireDate;
        }
        if (isset($this->allowPartialPay)) {
            $json['allow_partial_pay']                 = $this->allowPartialPay;
        }
        if (isset($this->attachFilesToEmail)) {
            $json['attach_files_to_email']             = $this->attachFilesToEmail;
        }
        if (isset($this->sendEmail)) {
            $json['send_email']                        = $this->sendEmail;
        }
        if (isset($this->invoiceNumber)) {
            $json['invoice_number']                    = $this->invoiceNumber;
        }
        if (isset($this->itemHeader)) {
            $json['item_header']                       = $this->itemHeader;
        }
        if (isset($this->itemFooter)) {
            $json['item_footer']                       = $this->itemFooter;
        }
        if (isset($this->amountDue)) {
            $json['amount_due']                        = $this->amountDue;
        }
        if (isset($this->notificationEmail)) {
            $json['notification_email']                = $this->notificationEmail;
        }
        if (isset($this->statusId)) {
            $json['status_id']                         = $this->statusId;
        }
        if (isset($this->statusCode)) {
            $json['status_code']                       = $this->statusCode;
        }
        if (isset($this->note)) {
            $json['note']                              = $this->note;
        }
        if (isset($this->notificationDaysBeforeDueDate)) {
            $json['notification_days_before_due_date'] = $this->notificationDaysBeforeDueDate;
        }
        if (isset($this->notificationDaysAfterDueDate)) {
            $json['notification_days_after_due_date']  = $this->notificationDaysAfterDueDate;
        }
        if (isset($this->notificationOnDueDate)) {
            $json['notification_on_due_date']          = $this->notificationOnDueDate;
        }
        if (isset($this->sendTextToPay)) {
            $json['send_text_to_pay']                  = $this->sendTextToPay;
        }
        if (isset($this->files)) {
            $json['files']                             = $this->files;
        }
        if (isset($this->remainingBalance)) {
            $json['remaining_balance']                 = $this->remainingBalance;
        }
        if (isset($this->singlePaymentMinAmount)) {
            $json['single_payment_min_amount']         = $this->singlePaymentMinAmount;
        }
        if (isset($this->singlePaymentMaxAmount)) {
            $json['single_payment_max_amount']         = $this->singlePaymentMaxAmount;
        }
        if (isset($this->cellPhone)) {
            $json['cell_phone']                        = $this->cellPhone;
        }
        if (isset($this->id)) {
            $json['id']                                = $this->id;
        }
        if (isset($this->createdTs)) {
            $json['created_ts']                        =
                ApiHelper::getJsonHelper()->verifyTypes(
                    $this->createdTs,
                    'anyOf(anyOf(CreatedTsEnum,CreatedTs1),null)',
                    [
                        '\FortisAPILib\Models\CreatedTsEnum::checkValue CreatedTsEnum'
                    ]
                );
        }
        if (isset($this->modifiedTs)) {
            $json['modified_ts']                       =
                ApiHelper::getJsonHelper()->verifyTypes(
                    $this->modifiedTs,
                    'anyOf(anyOf(ModifiedTsEnum,ModifiedTs1),null)',
                    [
                        '\FortisAPILib\Models\ModifiedTsEnum::checkValue ModifiedTsEnum'
                    ]
                );
        }
        if (isset($this->createdUserId)) {
            $json['created_user_id']                   = $this->createdUserId;
        }
        if (isset($this->modifiedUserId)) {
            $json['modified_user_id']                  = $this->modifiedUserId;
        }
        if (isset($this->active)) {
            $json['active']                            = $this->active;
        }
        if (isset($this->paymentStatusId)) {
            $json['payment_status_id']                 = $this->paymentStatusId;
        }
        if (isset($this->isActive)) {
            $json['is_active']                         = $this->isActive;
        }
        if (isset($this->quickInvoiceSetting)) {
            $json['quick_invoice_setting']             = $this->quickInvoiceSetting;
        }
        if (isset($this->tags)) {
            $json['tags']                              = $this->tags;
        }
        if (isset($this->quickInvoiceViews)) {
            $json['quick_invoice_views']               = $this->quickInvoiceViews;
        }
        if (isset($this->location)) {
            $json['location']                          = $this->location;
        }
        if (isset($this->createdUser)) {
            $json['created_user']                      = $this->createdUser;
        }
        if (isset($this->modifiedUser)) {
            $json['modified_user']                     = $this->modifiedUser;
        }
        if (isset($this->changelogs)) {
            $json['changelogs']                        = $this->changelogs;
        }
        if (isset($this->contact)) {
            $json['contact']                           = $this->contact;
        }
        if (isset($this->logEmails)) {
            $json['log_emails']                        = $this->logEmails;
        }
        if (isset($this->logSms)) {
            $json['log_sms']                           = $this->logSms;
        }
        if (isset($this->transactions)) {
            $json['transactions']                      = $this->transactions;
        }
        if (isset($this->ccProductTransaction)) {
            $json['cc_product_transaction']            = $this->ccProductTransaction;
        }
        if (isset($this->achProductTransaction)) {
            $json['ach_product_transaction']           = $this->achProductTransaction;
        }
        if (isset($this->emailBlacklist)) {
            $json['email_blacklist']                   = $this->emailBlacklist;
        }
        if (isset($this->smsBlacklist)) {
            $json['sms_blacklist']                     = $this->smsBlacklist;
        }
        if (isset($this->paymentUrl)) {
            $json['payment_url']                       = $this->paymentUrl;
        }
        $json = array_merge($json, $this->additionalProperties);

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
