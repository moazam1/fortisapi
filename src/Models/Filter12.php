<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models;

use FortisAPILib\ApiHelper;
use stdClass;

/**
 * You can use any `field_name` from this endpoint results as a filter, and you can also use more than
 * one field to create AND conditions. For date fields (ended with `_ts`), you can also search for
 * ranges using the `$gte` (Greater than or equal to) and/or  `$lte` (Lower than or equal to). You can
 * use one of the following methods:
 * >/endpoint?filter={ "field_name": "Value" }
 * >
 * >/endpoint?filter[field_name]=Value
 * >
 * >/endpoint?filter={ "created_ts": "today" }
 * >
 * >/endpoint?filter[created_ts]=today
 * >
 * >/endpoint?filter={ "created_ts": { "$gte": "yesterday", "$lte": "today" } }
 * >
 * >/endpoint?filter[created_ts][$gte]=yesterday&filter[created_ts][$lte]=today
 * >
 * >/endpoint?filter[address][city]=memphis
 * >
 * >/endpoint?filter={ "address": { "city" : "memphis" } }
 * >
 */
class Filter12 implements \JsonSerializable
{
    /**
     * @var array|null
     */
    private $accountHolderName;

    /**
     * @var array|null
     */
    private $accountNumber;

    /**
     * @var array|null
     */
    private $accountVaultApiId;

    /**
     * @var array|null
     */
    private $tokenApiId;

    /**
     * @var array|null
     */
    private $accountvaultC1;

    /**
     * @var array|null
     */
    private $accountvaultC2;

    /**
     * @var array|null
     */
    private $accountvaultC3;

    /**
     * @var array|null
     */
    private $tokenC1;

    /**
     * @var array|null
     */
    private $tokenC2;

    /**
     * @var array|null
     */
    private $tokenC3;

    /**
     * @var array|null
     */
    private $achSecCode;

    /**
     * @var array|null
     */
    private $billingAddress;

    /**
     * @var array|null
     */
    private $contactId;

    /**
     * @var array|null
     */
    private $customerId;

    /**
     * @var array|null
     */
    private $identityVerification;

    /**
     * @var array|null
     */
    private $locationId;

    /**
     * @var array|null
     */
    private $previousAccountVaultApiId;

    /**
     * @var array|null
     */
    private $previousTokenApiId;

    /**
     * @var array|null
     */
    private $previousAccountVaultId;

    /**
     * @var array|null
     */
    private $previousTokenId;

    /**
     * @var array|null
     */
    private $previousTransactionId;

    /**
     * @var array|null
     */
    private $termsAgree;

    /**
     * @var array|null
     */
    private $termsAgreeIp;

    /**
     * @var array|null
     */
    private $title;

    /**
     * @var array|null
     */
    private $joi;

    /**
     * @var array|null
     */
    private $id;

    /**
     * @var array|null
     */
    private $accountType;

    /**
     * @var array|null
     */
    private $active;

    /**
     * @var array|null
     */
    private $cauSummaryStatusId;

    /**
     * @var string|null|CreatedTs1
     */
    private $createdTs;

    /**
     * @var array|null
     */
    private $eSerialNumber;

    /**
     * @var array|null
     */
    private $eTrackData;

    /**
     * @var array|null
     */
    private $eFormat;

    /**
     * @var array|null
     */
    private $eKeyedData;

    /**
     * @var array|null
     */
    private $expiringInMonths;

    /**
     * @var array|null
     */
    private $expDate;

    /**
     * @var array|null
     */
    private $firstSix;

    /**
     * @var array|null
     */
    private $hasRecurring;

    /**
     * @var array|null
     */
    private $lastFour;

    /**
     * @var string|null|ModifiedTs1
     */
    private $modifiedTs;

    /**
     * @var array|null
     */
    private $paymentMethod;

    /**
     * @var array|null
     */
    private $ticket;

    /**
     * @var array|null
     */
    private $trackData;

    /**
     * @var array|null
     */
    private $location;

    /**
     * @var array|null
     */
    private $contact;

    /**
     * @var array|null
     */
    private $transactions;

    /**
     * @var array|null
     */
    private $activeRecurrings;

    /**
     * @var array|null
     */
    private $isDeletable;

    /**
     * @var array|null
     */
    private $signature;

    /**
     * @var array|null
     */
    private $createdUser;

    /**
     * @var array|null
     */
    private $changelogs;

    /**
     * @var array|null
     */
    private $accountVaultCauLogs;

    /**
     * @var array|null
     */
    private $accountVaultCauProductTransactions;

    /**
     * Returns Account Holder Name.
     */
    public function getAccountHolderName(): ?array
    {
        return $this->accountHolderName;
    }

    /**
     * Sets Account Holder Name.
     *
     * @maps account_holder_name
     */
    public function setAccountHolderName(?array $accountHolderName): void
    {
        $this->accountHolderName = $accountHolderName;
    }

    /**
     * Returns Account Number.
     */
    public function getAccountNumber(): ?array
    {
        return $this->accountNumber;
    }

    /**
     * Sets Account Number.
     *
     * @maps account_number
     */
    public function setAccountNumber(?array $accountNumber): void
    {
        $this->accountNumber = $accountNumber;
    }

    /**
     * Returns Account Vault Api Id.
     */
    public function getAccountVaultApiId(): ?array
    {
        return $this->accountVaultApiId;
    }

    /**
     * Sets Account Vault Api Id.
     *
     * @maps account_vault_api_id
     */
    public function setAccountVaultApiId(?array $accountVaultApiId): void
    {
        $this->accountVaultApiId = $accountVaultApiId;
    }

    /**
     * Returns Token Api Id.
     */
    public function getTokenApiId(): ?array
    {
        return $this->tokenApiId;
    }

    /**
     * Sets Token Api Id.
     *
     * @maps token_api_id
     */
    public function setTokenApiId(?array $tokenApiId): void
    {
        $this->tokenApiId = $tokenApiId;
    }

    /**
     * Returns Accountvault C1.
     */
    public function getAccountvaultC1(): ?array
    {
        return $this->accountvaultC1;
    }

    /**
     * Sets Accountvault C1.
     *
     * @maps accountvault_c1
     */
    public function setAccountvaultC1(?array $accountvaultC1): void
    {
        $this->accountvaultC1 = $accountvaultC1;
    }

    /**
     * Returns Accountvault C2.
     */
    public function getAccountvaultC2(): ?array
    {
        return $this->accountvaultC2;
    }

    /**
     * Sets Accountvault C2.
     *
     * @maps accountvault_c2
     */
    public function setAccountvaultC2(?array $accountvaultC2): void
    {
        $this->accountvaultC2 = $accountvaultC2;
    }

    /**
     * Returns Accountvault C3.
     */
    public function getAccountvaultC3(): ?array
    {
        return $this->accountvaultC3;
    }

    /**
     * Sets Accountvault C3.
     *
     * @maps accountvault_c3
     */
    public function setAccountvaultC3(?array $accountvaultC3): void
    {
        $this->accountvaultC3 = $accountvaultC3;
    }

    /**
     * Returns Token C1.
     */
    public function getTokenC1(): ?array
    {
        return $this->tokenC1;
    }

    /**
     * Sets Token C1.
     *
     * @maps token_c1
     */
    public function setTokenC1(?array $tokenC1): void
    {
        $this->tokenC1 = $tokenC1;
    }

    /**
     * Returns Token C2.
     */
    public function getTokenC2(): ?array
    {
        return $this->tokenC2;
    }

    /**
     * Sets Token C2.
     *
     * @maps token_c2
     */
    public function setTokenC2(?array $tokenC2): void
    {
        $this->tokenC2 = $tokenC2;
    }

    /**
     * Returns Token C3.
     */
    public function getTokenC3(): ?array
    {
        return $this->tokenC3;
    }

    /**
     * Sets Token C3.
     *
     * @maps token_c3
     */
    public function setTokenC3(?array $tokenC3): void
    {
        $this->tokenC3 = $tokenC3;
    }

    /**
     * Returns Ach Sec Code.
     */
    public function getAchSecCode(): ?array
    {
        return $this->achSecCode;
    }

    /**
     * Sets Ach Sec Code.
     *
     * @maps ach_sec_code
     */
    public function setAchSecCode(?array $achSecCode): void
    {
        $this->achSecCode = $achSecCode;
    }

    /**
     * Returns Billing Address.
     */
    public function getBillingAddress(): ?array
    {
        return $this->billingAddress;
    }

    /**
     * Sets Billing Address.
     *
     * @maps billing_address
     */
    public function setBillingAddress(?array $billingAddress): void
    {
        $this->billingAddress = $billingAddress;
    }

    /**
     * Returns Contact Id.
     */
    public function getContactId(): ?array
    {
        return $this->contactId;
    }

    /**
     * Sets Contact Id.
     *
     * @maps contact_id
     */
    public function setContactId(?array $contactId): void
    {
        $this->contactId = $contactId;
    }

    /**
     * Returns Customer Id.
     */
    public function getCustomerId(): ?array
    {
        return $this->customerId;
    }

    /**
     * Sets Customer Id.
     *
     * @maps customer_id
     */
    public function setCustomerId(?array $customerId): void
    {
        $this->customerId = $customerId;
    }

    /**
     * Returns Identity Verification.
     */
    public function getIdentityVerification(): ?array
    {
        return $this->identityVerification;
    }

    /**
     * Sets Identity Verification.
     *
     * @maps identity_verification
     */
    public function setIdentityVerification(?array $identityVerification): void
    {
        $this->identityVerification = $identityVerification;
    }

    /**
     * Returns Location Id.
     */
    public function getLocationId(): ?array
    {
        return $this->locationId;
    }

    /**
     * Sets Location Id.
     *
     * @maps location_id
     */
    public function setLocationId(?array $locationId): void
    {
        $this->locationId = $locationId;
    }

    /**
     * Returns Previous Account Vault Api Id.
     */
    public function getPreviousAccountVaultApiId(): ?array
    {
        return $this->previousAccountVaultApiId;
    }

    /**
     * Sets Previous Account Vault Api Id.
     *
     * @maps previous_account_vault_api_id
     */
    public function setPreviousAccountVaultApiId(?array $previousAccountVaultApiId): void
    {
        $this->previousAccountVaultApiId = $previousAccountVaultApiId;
    }

    /**
     * Returns Previous Token Api Id.
     */
    public function getPreviousTokenApiId(): ?array
    {
        return $this->previousTokenApiId;
    }

    /**
     * Sets Previous Token Api Id.
     *
     * @maps previous_token_api_id
     */
    public function setPreviousTokenApiId(?array $previousTokenApiId): void
    {
        $this->previousTokenApiId = $previousTokenApiId;
    }

    /**
     * Returns Previous Account Vault Id.
     */
    public function getPreviousAccountVaultId(): ?array
    {
        return $this->previousAccountVaultId;
    }

    /**
     * Sets Previous Account Vault Id.
     *
     * @maps previous_account_vault_id
     */
    public function setPreviousAccountVaultId(?array $previousAccountVaultId): void
    {
        $this->previousAccountVaultId = $previousAccountVaultId;
    }

    /**
     * Returns Previous Token Id.
     */
    public function getPreviousTokenId(): ?array
    {
        return $this->previousTokenId;
    }

    /**
     * Sets Previous Token Id.
     *
     * @maps previous_token_id
     */
    public function setPreviousTokenId(?array $previousTokenId): void
    {
        $this->previousTokenId = $previousTokenId;
    }

    /**
     * Returns Previous Transaction Id.
     */
    public function getPreviousTransactionId(): ?array
    {
        return $this->previousTransactionId;
    }

    /**
     * Sets Previous Transaction Id.
     *
     * @maps previous_transaction_id
     */
    public function setPreviousTransactionId(?array $previousTransactionId): void
    {
        $this->previousTransactionId = $previousTransactionId;
    }

    /**
     * Returns Terms Agree.
     */
    public function getTermsAgree(): ?array
    {
        return $this->termsAgree;
    }

    /**
     * Sets Terms Agree.
     *
     * @maps terms_agree
     */
    public function setTermsAgree(?array $termsAgree): void
    {
        $this->termsAgree = $termsAgree;
    }

    /**
     * Returns Terms Agree Ip.
     */
    public function getTermsAgreeIp(): ?array
    {
        return $this->termsAgreeIp;
    }

    /**
     * Sets Terms Agree Ip.
     *
     * @maps terms_agree_ip
     */
    public function setTermsAgreeIp(?array $termsAgreeIp): void
    {
        $this->termsAgreeIp = $termsAgreeIp;
    }

    /**
     * Returns Title.
     */
    public function getTitle(): ?array
    {
        return $this->title;
    }

    /**
     * Sets Title.
     *
     * @maps title
     */
    public function setTitle(?array $title): void
    {
        $this->title = $title;
    }

    /**
     * Returns Joi.
     */
    public function getJoi(): ?array
    {
        return $this->joi;
    }

    /**
     * Sets Joi.
     *
     * @maps _joi
     */
    public function setJoi(?array $joi): void
    {
        $this->joi = $joi;
    }

    /**
     * Returns Id.
     */
    public function getId(): ?array
    {
        return $this->id;
    }

    /**
     * Sets Id.
     *
     * @maps id
     */
    public function setId(?array $id): void
    {
        $this->id = $id;
    }

    /**
     * Returns Account Type.
     */
    public function getAccountType(): ?array
    {
        return $this->accountType;
    }

    /**
     * Sets Account Type.
     *
     * @maps account_type
     */
    public function setAccountType(?array $accountType): void
    {
        $this->accountType = $accountType;
    }

    /**
     * Returns Active.
     */
    public function getActive(): ?array
    {
        return $this->active;
    }

    /**
     * Sets Active.
     *
     * @maps active
     */
    public function setActive(?array $active): void
    {
        $this->active = $active;
    }

    /**
     * Returns Cau Summary Status Id.
     */
    public function getCauSummaryStatusId(): ?array
    {
        return $this->cauSummaryStatusId;
    }

    /**
     * Sets Cau Summary Status Id.
     *
     * @maps cau_summary_status_id
     */
    public function setCauSummaryStatusId(?array $cauSummaryStatusId): void
    {
        $this->cauSummaryStatusId = $cauSummaryStatusId;
    }

    /**
     * Returns Created Ts.
     *
     * @return string|null|CreatedTs1
     */
    public function getCreatedTs()
    {
        return $this->createdTs;
    }

    /**
     * Sets Created Ts.
     *
     * @maps created_ts
     * @mapsBy anyOf(anyOf(CreatedTsEnum,CreatedTs1),null)
     * @factory \FortisAPILib\Models\CreatedTsEnum::checkValue CreatedTsEnum
     *
     * @param string|null|CreatedTs1 $createdTs
     */
    public function setCreatedTs($createdTs): void
    {
        $this->createdTs = $createdTs;
    }

    /**
     * Returns E Serial Number.
     */
    public function getESerialNumber(): ?array
    {
        return $this->eSerialNumber;
    }

    /**
     * Sets E Serial Number.
     *
     * @maps e_serial_number
     */
    public function setESerialNumber(?array $eSerialNumber): void
    {
        $this->eSerialNumber = $eSerialNumber;
    }

    /**
     * Returns E Track Data.
     */
    public function getETrackData(): ?array
    {
        return $this->eTrackData;
    }

    /**
     * Sets E Track Data.
     *
     * @maps e_track_data
     */
    public function setETrackData(?array $eTrackData): void
    {
        $this->eTrackData = $eTrackData;
    }

    /**
     * Returns E Format.
     */
    public function getEFormat(): ?array
    {
        return $this->eFormat;
    }

    /**
     * Sets E Format.
     *
     * @maps e_format
     */
    public function setEFormat(?array $eFormat): void
    {
        $this->eFormat = $eFormat;
    }

    /**
     * Returns E Keyed Data.
     */
    public function getEKeyedData(): ?array
    {
        return $this->eKeyedData;
    }

    /**
     * Sets E Keyed Data.
     *
     * @maps e_keyed_data
     */
    public function setEKeyedData(?array $eKeyedData): void
    {
        $this->eKeyedData = $eKeyedData;
    }

    /**
     * Returns Expiring in Months.
     */
    public function getExpiringInMonths(): ?array
    {
        return $this->expiringInMonths;
    }

    /**
     * Sets Expiring in Months.
     *
     * @maps expiring_in_months
     */
    public function setExpiringInMonths(?array $expiringInMonths): void
    {
        $this->expiringInMonths = $expiringInMonths;
    }

    /**
     * Returns Exp Date.
     */
    public function getExpDate(): ?array
    {
        return $this->expDate;
    }

    /**
     * Sets Exp Date.
     *
     * @maps exp_date
     */
    public function setExpDate(?array $expDate): void
    {
        $this->expDate = $expDate;
    }

    /**
     * Returns First Six.
     */
    public function getFirstSix(): ?array
    {
        return $this->firstSix;
    }

    /**
     * Sets First Six.
     *
     * @maps first_six
     */
    public function setFirstSix(?array $firstSix): void
    {
        $this->firstSix = $firstSix;
    }

    /**
     * Returns Has Recurring.
     */
    public function getHasRecurring(): ?array
    {
        return $this->hasRecurring;
    }

    /**
     * Sets Has Recurring.
     *
     * @maps has_recurring
     */
    public function setHasRecurring(?array $hasRecurring): void
    {
        $this->hasRecurring = $hasRecurring;
    }

    /**
     * Returns Last Four.
     */
    public function getLastFour(): ?array
    {
        return $this->lastFour;
    }

    /**
     * Sets Last Four.
     *
     * @maps last_four
     */
    public function setLastFour(?array $lastFour): void
    {
        $this->lastFour = $lastFour;
    }

    /**
     * Returns Modified Ts.
     *
     * @return string|null|ModifiedTs1
     */
    public function getModifiedTs()
    {
        return $this->modifiedTs;
    }

    /**
     * Sets Modified Ts.
     *
     * @maps modified_ts
     * @mapsBy anyOf(anyOf(ModifiedTsEnum,ModifiedTs1),null)
     * @factory \FortisAPILib\Models\ModifiedTsEnum::checkValue ModifiedTsEnum
     *
     * @param string|null|ModifiedTs1 $modifiedTs
     */
    public function setModifiedTs($modifiedTs): void
    {
        $this->modifiedTs = $modifiedTs;
    }

    /**
     * Returns Payment Method.
     */
    public function getPaymentMethod(): ?array
    {
        return $this->paymentMethod;
    }

    /**
     * Sets Payment Method.
     *
     * @maps payment_method
     */
    public function setPaymentMethod(?array $paymentMethod): void
    {
        $this->paymentMethod = $paymentMethod;
    }

    /**
     * Returns Ticket.
     */
    public function getTicket(): ?array
    {
        return $this->ticket;
    }

    /**
     * Sets Ticket.
     *
     * @maps ticket
     */
    public function setTicket(?array $ticket): void
    {
        $this->ticket = $ticket;
    }

    /**
     * Returns Track Data.
     */
    public function getTrackData(): ?array
    {
        return $this->trackData;
    }

    /**
     * Sets Track Data.
     *
     * @maps track_data
     */
    public function setTrackData(?array $trackData): void
    {
        $this->trackData = $trackData;
    }

    /**
     * Returns Location.
     */
    public function getLocation(): ?array
    {
        return $this->location;
    }

    /**
     * Sets Location.
     *
     * @maps location
     */
    public function setLocation(?array $location): void
    {
        $this->location = $location;
    }

    /**
     * Returns Contact.
     */
    public function getContact(): ?array
    {
        return $this->contact;
    }

    /**
     * Sets Contact.
     *
     * @maps contact
     */
    public function setContact(?array $contact): void
    {
        $this->contact = $contact;
    }

    /**
     * Returns Transactions.
     */
    public function getTransactions(): ?array
    {
        return $this->transactions;
    }

    /**
     * Sets Transactions.
     *
     * @maps transactions
     */
    public function setTransactions(?array $transactions): void
    {
        $this->transactions = $transactions;
    }

    /**
     * Returns Active Recurrings.
     */
    public function getActiveRecurrings(): ?array
    {
        return $this->activeRecurrings;
    }

    /**
     * Sets Active Recurrings.
     *
     * @maps activeRecurrings
     */
    public function setActiveRecurrings(?array $activeRecurrings): void
    {
        $this->activeRecurrings = $activeRecurrings;
    }

    /**
     * Returns Is Deletable.
     */
    public function getIsDeletable(): ?array
    {
        return $this->isDeletable;
    }

    /**
     * Sets Is Deletable.
     *
     * @maps is_deletable
     */
    public function setIsDeletable(?array $isDeletable): void
    {
        $this->isDeletable = $isDeletable;
    }

    /**
     * Returns Signature.
     */
    public function getSignature(): ?array
    {
        return $this->signature;
    }

    /**
     * Sets Signature.
     *
     * @maps signature
     */
    public function setSignature(?array $signature): void
    {
        $this->signature = $signature;
    }

    /**
     * Returns Created User.
     */
    public function getCreatedUser(): ?array
    {
        return $this->createdUser;
    }

    /**
     * Sets Created User.
     *
     * @maps created_user
     */
    public function setCreatedUser(?array $createdUser): void
    {
        $this->createdUser = $createdUser;
    }

    /**
     * Returns Changelogs.
     */
    public function getChangelogs(): ?array
    {
        return $this->changelogs;
    }

    /**
     * Sets Changelogs.
     *
     * @maps changelogs
     */
    public function setChangelogs(?array $changelogs): void
    {
        $this->changelogs = $changelogs;
    }

    /**
     * Returns Account Vault Cau Logs.
     */
    public function getAccountVaultCauLogs(): ?array
    {
        return $this->accountVaultCauLogs;
    }

    /**
     * Sets Account Vault Cau Logs.
     *
     * @maps account_vault_cau_logs
     */
    public function setAccountVaultCauLogs(?array $accountVaultCauLogs): void
    {
        $this->accountVaultCauLogs = $accountVaultCauLogs;
    }

    /**
     * Returns Account Vault Cau Product Transactions.
     */
    public function getAccountVaultCauProductTransactions(): ?array
    {
        return $this->accountVaultCauProductTransactions;
    }

    /**
     * Sets Account Vault Cau Product Transactions.
     *
     * @maps account_vault_cau_product_transactions
     */
    public function setAccountVaultCauProductTransactions(?array $accountVaultCauProductTransactions): void
    {
        $this->accountVaultCauProductTransactions = $accountVaultCauProductTransactions;
    }

    private $additionalProperties = [];

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property
     * @param mixed $value Value of property
     */
    public function addAdditionalProperty(string $name, $value)
    {
        $this->additionalProperties[$name] = $value;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->accountHolderName)) {
            $json['account_holder_name']                    = $this->accountHolderName;
        }
        if (isset($this->accountNumber)) {
            $json['account_number']                         = $this->accountNumber;
        }
        if (isset($this->accountVaultApiId)) {
            $json['account_vault_api_id']                   = $this->accountVaultApiId;
        }
        if (isset($this->tokenApiId)) {
            $json['token_api_id']                           = $this->tokenApiId;
        }
        if (isset($this->accountvaultC1)) {
            $json['accountvault_c1']                        = $this->accountvaultC1;
        }
        if (isset($this->accountvaultC2)) {
            $json['accountvault_c2']                        = $this->accountvaultC2;
        }
        if (isset($this->accountvaultC3)) {
            $json['accountvault_c3']                        = $this->accountvaultC3;
        }
        if (isset($this->tokenC1)) {
            $json['token_c1']                               = $this->tokenC1;
        }
        if (isset($this->tokenC2)) {
            $json['token_c2']                               = $this->tokenC2;
        }
        if (isset($this->tokenC3)) {
            $json['token_c3']                               = $this->tokenC3;
        }
        if (isset($this->achSecCode)) {
            $json['ach_sec_code']                           = $this->achSecCode;
        }
        if (isset($this->billingAddress)) {
            $json['billing_address']                        = $this->billingAddress;
        }
        if (isset($this->contactId)) {
            $json['contact_id']                             = $this->contactId;
        }
        if (isset($this->customerId)) {
            $json['customer_id']                            = $this->customerId;
        }
        if (isset($this->identityVerification)) {
            $json['identity_verification']                  = $this->identityVerification;
        }
        if (isset($this->locationId)) {
            $json['location_id']                            = $this->locationId;
        }
        if (isset($this->previousAccountVaultApiId)) {
            $json['previous_account_vault_api_id']          = $this->previousAccountVaultApiId;
        }
        if (isset($this->previousTokenApiId)) {
            $json['previous_token_api_id']                  = $this->previousTokenApiId;
        }
        if (isset($this->previousAccountVaultId)) {
            $json['previous_account_vault_id']              = $this->previousAccountVaultId;
        }
        if (isset($this->previousTokenId)) {
            $json['previous_token_id']                      = $this->previousTokenId;
        }
        if (isset($this->previousTransactionId)) {
            $json['previous_transaction_id']                = $this->previousTransactionId;
        }
        if (isset($this->termsAgree)) {
            $json['terms_agree']                            = $this->termsAgree;
        }
        if (isset($this->termsAgreeIp)) {
            $json['terms_agree_ip']                         = $this->termsAgreeIp;
        }
        if (isset($this->title)) {
            $json['title']                                  = $this->title;
        }
        if (isset($this->joi)) {
            $json['_joi']                                   = $this->joi;
        }
        if (isset($this->id)) {
            $json['id']                                     = $this->id;
        }
        if (isset($this->accountType)) {
            $json['account_type']                           = $this->accountType;
        }
        if (isset($this->active)) {
            $json['active']                                 = $this->active;
        }
        if (isset($this->cauSummaryStatusId)) {
            $json['cau_summary_status_id']                  = $this->cauSummaryStatusId;
        }
        if (isset($this->createdTs)) {
            $json['created_ts']                             =
                ApiHelper::getJsonHelper()->verifyTypes(
                    $this->createdTs,
                    'anyOf(anyOf(CreatedTsEnum,CreatedTs1),null)',
                    [
                        '\FortisAPILib\Models\CreatedTsEnum::checkValue CreatedTsEnum'
                    ]
                );
        }
        if (isset($this->eSerialNumber)) {
            $json['e_serial_number']                        = $this->eSerialNumber;
        }
        if (isset($this->eTrackData)) {
            $json['e_track_data']                           = $this->eTrackData;
        }
        if (isset($this->eFormat)) {
            $json['e_format']                               = $this->eFormat;
        }
        if (isset($this->eKeyedData)) {
            $json['e_keyed_data']                           = $this->eKeyedData;
        }
        if (isset($this->expiringInMonths)) {
            $json['expiring_in_months']                     = $this->expiringInMonths;
        }
        if (isset($this->expDate)) {
            $json['exp_date']                               = $this->expDate;
        }
        if (isset($this->firstSix)) {
            $json['first_six']                              = $this->firstSix;
        }
        if (isset($this->hasRecurring)) {
            $json['has_recurring']                          = $this->hasRecurring;
        }
        if (isset($this->lastFour)) {
            $json['last_four']                              = $this->lastFour;
        }
        if (isset($this->modifiedTs)) {
            $json['modified_ts']                            =
                ApiHelper::getJsonHelper()->verifyTypes(
                    $this->modifiedTs,
                    'anyOf(anyOf(ModifiedTsEnum,ModifiedTs1),null)',
                    [
                        '\FortisAPILib\Models\ModifiedTsEnum::checkValue ModifiedTsEnum'
                    ]
                );
        }
        if (isset($this->paymentMethod)) {
            $json['payment_method']                         = $this->paymentMethod;
        }
        if (isset($this->ticket)) {
            $json['ticket']                                 = $this->ticket;
        }
        if (isset($this->trackData)) {
            $json['track_data']                             = $this->trackData;
        }
        if (isset($this->location)) {
            $json['location']                               = $this->location;
        }
        if (isset($this->contact)) {
            $json['contact']                                = $this->contact;
        }
        if (isset($this->transactions)) {
            $json['transactions']                           = $this->transactions;
        }
        if (isset($this->activeRecurrings)) {
            $json['activeRecurrings']                       = $this->activeRecurrings;
        }
        if (isset($this->isDeletable)) {
            $json['is_deletable']                           = $this->isDeletable;
        }
        if (isset($this->signature)) {
            $json['signature']                              = $this->signature;
        }
        if (isset($this->createdUser)) {
            $json['created_user']                           = $this->createdUser;
        }
        if (isset($this->changelogs)) {
            $json['changelogs']                             = $this->changelogs;
        }
        if (isset($this->accountVaultCauLogs)) {
            $json['account_vault_cau_logs']                 = $this->accountVaultCauLogs;
        }
        if (isset($this->accountVaultCauProductTransactions)) {
            $json['account_vault_cau_product_transactions'] = $this->accountVaultCauProductTransactions;
        }
        $json = array_merge($json, $this->additionalProperties);

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
