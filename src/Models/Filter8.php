<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models;

use FortisAPILib\ApiHelper;
use stdClass;

/**
 * You can use any `field_name` from this endpoint results as a filter, and you can also use more than
 * one field to create AND conditions. For date fields (ended with `_ts`), you can also search for
 * ranges using the `$gte` (Greater than or equal to) and/or  `$lte` (Lower than or equal to). You can
 * use one of the following methods:
 * >/endpoint?filter={ "field_name": "Value" }
 * >
 * >/endpoint?filter[field_name]=Value
 * >
 * >/endpoint?filter={ "created_ts": "today" }
 * >
 * >/endpoint?filter[created_ts]=today
 * >
 * >/endpoint?filter={ "created_ts": { "$gte": "yesterday", "$lte": "today" } }
 * >
 * >/endpoint?filter[created_ts][$gte]=yesterday&filter[created_ts][$lte]=today
 * >
 * >/endpoint?filter[address][city]=memphis
 * >
 * >/endpoint?filter={ "address": { "city" : "memphis" } }
 * >
 */
class Filter8 implements \JsonSerializable
{
    /**
     * @var array|null
     */
    private $signature;

    /**
     * @var array|null
     */
    private $resource;

    /**
     * @var array|null
     */
    private $resourceId;

    /**
     * @var array|null
     */
    private $id;

    /**
     * @var string|null|CreatedTs1
     */
    private $createdTs;

    /**
     * @var string|null|ModifiedTs1
     */
    private $modifiedTs;

    /**
     * @var array|null
     */
    private $rawSignature;

    /**
     * Returns Signature.
     */
    public function getSignature(): ?array
    {
        return $this->signature;
    }

    /**
     * Sets Signature.
     *
     * @maps signature
     */
    public function setSignature(?array $signature): void
    {
        $this->signature = $signature;
    }

    /**
     * Returns Resource.
     */
    public function getResource(): ?array
    {
        return $this->resource;
    }

    /**
     * Sets Resource.
     *
     * @maps resource
     */
    public function setResource(?array $resource): void
    {
        $this->resource = $resource;
    }

    /**
     * Returns Resource Id.
     */
    public function getResourceId(): ?array
    {
        return $this->resourceId;
    }

    /**
     * Sets Resource Id.
     *
     * @maps resource_id
     */
    public function setResourceId(?array $resourceId): void
    {
        $this->resourceId = $resourceId;
    }

    /**
     * Returns Id.
     */
    public function getId(): ?array
    {
        return $this->id;
    }

    /**
     * Sets Id.
     *
     * @maps id
     */
    public function setId(?array $id): void
    {
        $this->id = $id;
    }

    /**
     * Returns Created Ts.
     *
     * @return string|null|CreatedTs1
     */
    public function getCreatedTs()
    {
        return $this->createdTs;
    }

    /**
     * Sets Created Ts.
     *
     * @maps created_ts
     * @mapsBy anyOf(anyOf(CreatedTsEnum,CreatedTs1),null)
     * @factory \FortisAPILib\Models\CreatedTsEnum::checkValue CreatedTsEnum
     *
     * @param string|null|CreatedTs1 $createdTs
     */
    public function setCreatedTs($createdTs): void
    {
        $this->createdTs = $createdTs;
    }

    /**
     * Returns Modified Ts.
     *
     * @return string|null|ModifiedTs1
     */
    public function getModifiedTs()
    {
        return $this->modifiedTs;
    }

    /**
     * Sets Modified Ts.
     *
     * @maps modified_ts
     * @mapsBy anyOf(anyOf(ModifiedTsEnum,ModifiedTs1),null)
     * @factory \FortisAPILib\Models\ModifiedTsEnum::checkValue ModifiedTsEnum
     *
     * @param string|null|ModifiedTs1 $modifiedTs
     */
    public function setModifiedTs($modifiedTs): void
    {
        $this->modifiedTs = $modifiedTs;
    }

    /**
     * Returns Raw Signature.
     */
    public function getRawSignature(): ?array
    {
        return $this->rawSignature;
    }

    /**
     * Sets Raw Signature.
     *
     * @maps raw_signature
     */
    public function setRawSignature(?array $rawSignature): void
    {
        $this->rawSignature = $rawSignature;
    }

    private $additionalProperties = [];

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property
     * @param mixed $value Value of property
     */
    public function addAdditionalProperty(string $name, $value)
    {
        $this->additionalProperties[$name] = $value;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->signature)) {
            $json['signature']     = $this->signature;
        }
        if (isset($this->resource)) {
            $json['resource']      = $this->resource;
        }
        if (isset($this->resourceId)) {
            $json['resource_id']   = $this->resourceId;
        }
        if (isset($this->id)) {
            $json['id']            = $this->id;
        }
        if (isset($this->createdTs)) {
            $json['created_ts']    =
                ApiHelper::getJsonHelper()->verifyTypes(
                    $this->createdTs,
                    'anyOf(anyOf(CreatedTsEnum,CreatedTs1),null)',
                    [
                        '\FortisAPILib\Models\CreatedTsEnum::checkValue CreatedTsEnum'
                    ]
                );
        }
        if (isset($this->modifiedTs)) {
            $json['modified_ts']   =
                ApiHelper::getJsonHelper()->verifyTypes(
                    $this->modifiedTs,
                    'anyOf(anyOf(ModifiedTsEnum,ModifiedTs1),null)',
                    [
                        '\FortisAPILib\Models\ModifiedTsEnum::checkValue ModifiedTsEnum'
                    ]
                );
        }
        if (isset($this->rawSignature)) {
            $json['raw_signature'] = $this->rawSignature;
        }
        $json = array_merge($json, $this->additionalProperties);

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
