<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models;

use stdClass;

/**
 * Ach Product Transaction Information on `expand`
 */
class AchProductTransaction implements \JsonSerializable
{
    /**
     * @var array
     */
    private $processorVersion = [];

    /**
     * @var array
     */
    private $industryType = [];

    /**
     * @var string
     */
    private $title;

    /**
     * @var string
     */
    private $paymentMethod;

    /**
     * @var array
     */
    private $processor = [];

    /**
     * @var array
     */
    private $mcc = [];

    /**
     * @var array
     */
    private $taxSurchargeConfig = ['value' => TaxSurchargeConfigEnum::ENUM_2];

    /**
     * @var array
     */
    private $terminalId = [];

    /**
     * @var array
     */
    private $partner = [];

    /**
     * @var array
     */
    private $productAchPvStoreId = [];

    /**
     * @var array
     */
    private $invoiceAdjustmentTitle = [];

    /**
     * @var string
     */
    private $locationId;

    /**
     * @var array
     */
    private $locationApiId = [];

    /**
     * @var array
     */
    private $billingLocationApiId = [];

    /**
     * @var array
     */
    private $portfolioId = [];

    /**
     * @var array
     */
    private $portfolioValidationRule = [];

    /**
     * @var array
     */
    private $subProcessor = [];

    /**
     * @var array|null
     */
    private $surcharge;

    /**
     * @var array|null
     */
    private $processorData;

    /**
     * @var bool|null
     */
    private $vtClerkNumber;

    /**
     * @var bool|null
     */
    private $vtBillingPhone;

    /**
     * @var bool|null
     */
    private $vtEnableTip;

    /**
     * @var bool|null
     */
    private $achAllowDebit;

    /**
     * @var bool|null
     */
    private $achAllowCredit;

    /**
     * @var bool|null
     */
    private $achAllowRefund;

    /**
     * @var bool|null
     */
    private $vtCvv;

    /**
     * @var bool|null
     */
    private $vtStreet;

    /**
     * @var bool|null
     */
    private $vtZip;

    /**
     * @var bool|null
     */
    private $vtOrderNum;

    /**
     * @var bool|null
     */
    private $vtEnable;

    /**
     * @var bool|null
     */
    private $receiptShowContactName;

    /**
     * @var bool|null
     */
    private $displayAvs;

    /**
     * @var bool|null
     */
    private $cardTypeVisa;

    /**
     * @var bool|null
     */
    private $cardTypeMc;

    /**
     * @var bool|null
     */
    private $cardTypeDisc;

    /**
     * @var bool|null
     */
    private $cardTypeAmex;

    /**
     * @var bool|null
     */
    private $cardTypeDiners;

    /**
     * @var bool|null
     */
    private $cardTypeJcb;

    /**
     * @var bool|null
     */
    private $invoiceLocation;

    /**
     * @var bool|null
     */
    private $allowPartialAuthorization;

    /**
     * @var bool|null
     */
    private $allowRecurringPartialAuthorization;

    /**
     * @var bool|null
     */
    private $autoDeclineCvv;

    /**
     * @var bool|null
     */
    private $autoDeclineStreet;

    /**
     * @var bool|null
     */
    private $autoDeclineZip;

    /**
     * @var bool|null
     */
    private $splitPaymentsAllow;

    /**
     * @var bool|null
     */
    private $vtShowCustomFields;

    /**
     * @var bool|null
     */
    private $receiptShowCustomFields;

    /**
     * @var bool|null
     */
    private $vtOverrideSalesTaxAllowed;

    /**
     * @var bool|null
     */
    private $vtEnableSalesTax;

    /**
     * @var bool|null
     */
    private $vtRequireZip;

    /**
     * @var bool|null
     */
    private $vtRequireStreet;

    /**
     * @var bool|null
     */
    private $autoDeclineCavv;

    /**
     * @var array
     */
    private $merchantId = [];

    /**
     * @var array
     */
    private $receiptHeader = [];

    /**
     * @var array
     */
    private $receiptFooter = [];

    /**
     * @var array
     */
    private $receiptAddAccountAboveSignature = [];

    /**
     * @var array
     */
    private $receiptAddRecurringAboveSignature = [];

    /**
     * @var array
     */
    private $receiptVtAboveSignature = [];

    /**
     * @var array
     */
    private $defaultTransactionType = [];

    /**
     * @var array
     */
    private $username = [];

    /**
     * @var array
     */
    private $password = [];

    /**
     * @var array
     */
    private $currentBatch = ['value' => 1];

    /**
     * @var array
     */
    private $dupCheckPerBatch = [];

    /**
     * @var array
     */
    private $agentCode = [];

    /**
     * @var bool|null
     */
    private $paylinkAllow;

    /**
     * @var bool|null
     */
    private $quickInvoiceAllow;

    /**
     * @var bool|null
     */
    private $level3Allow;

    /**
     * @var bool|null
     */
    private $payfacEnable;

    /**
     * @var array
     */
    private $salesOfficeId = [];

    /**
     * @var array
     */
    private $hostedPaymentPageMaxAllowed = ['value' => 5];

    /**
     * @var bool|null
     */
    private $hostedPaymentPageAllow;

    /**
     * @var array
     */
    private $surchargeId = [];

    /**
     * @var array|null
     */
    private $level3Default;

    /**
     * @var array
     */
    private $cauSubscribeTypeId = [];

    /**
     * @var array
     */
    private $cauAccountNumber = [];

    /**
     * @var array
     */
    private $locationBillingAccountId = [];

    /**
     * @var array
     */
    private $productBillingGroupId = [];

    /**
     * @var array
     */
    private $accountNumber = [];

    /**
     * @var bool|null
     */
    private $runAvsOnAccountvaultCreate;

    /**
     * @var bool|null
     */
    private $accountvaultExpireNotificationEmailEnable;

    /**
     * @var bool|null
     */
    private $debitAllowVoid;

    /**
     * @var bool|null
     */
    private $quickInvoiceTextToPay;

    /**
     * @var array
     */
    private $authenticationCode = [];

    /**
     * @var bool|null
     */
    private $smsEnable;

    /**
     * @var bool|null
     */
    private $vtShowCurrency;

    /**
     * @var bool|null
     */
    private $receiptShowCurrency;

    /**
     * @var bool|null
     */
    private $allowBlindRefund;

    /**
     * @var bool|null
     */
    private $vtShowCompanyName;

    /**
     * @var bool|null
     */
    private $receiptShowCompanyName;

    /**
     * @var bool|null
     */
    private $bankFundedOnly;

    /**
     * @var string
     */
    private $id;

    /**
     * @var string|null
     */
    private $receiptLogo;

    /**
     * @var bool|null
     */
    private $active;

    /**
     * @var array
     */
    private $tz = [];

    /**
     * @var array
     */
    private $currencyCode = ['value' => 840];

    /**
     * @var array
     */
    private $currentStan = ['value' => 1];

    /**
     * @var array
     */
    private $createdTs = [];

    /**
     * @var array
     */
    private $modifiedTs = [];

    /**
     * @var array
     */
    private $createdUserId = [];

    /**
     * @var array
     */
    private $modifiedUserId = [];

    /**
     * @param string $title
     * @param string $paymentMethod
     * @param string $locationId
     * @param string $id
     */
    public function __construct(string $title, string $paymentMethod, string $locationId, string $id)
    {
        $this->title = $title;
        $this->paymentMethod = $paymentMethod;
        $this->locationId = $locationId;
        $this->id = $id;
    }

    /**
     * Returns Processor Version.
     * Processor Version
     */
    public function getProcessorVersion(): ?string
    {
        if (count($this->processorVersion) == 0) {
            return null;
        }
        return $this->processorVersion['value'];
    }

    /**
     * Sets Processor Version.
     * Processor Version
     *
     * @maps processor_version
     */
    public function setProcessorVersion(?string $processorVersion): void
    {
        $this->processorVersion['value'] = $processorVersion;
    }

    /**
     * Unsets Processor Version.
     * Processor Version
     */
    public function unsetProcessorVersion(): void
    {
        $this->processorVersion = [];
    }

    /**
     * Returns Industry Type.
     * Industry Type
     */
    public function getIndustryType(): ?string
    {
        if (count($this->industryType) == 0) {
            return null;
        }
        return $this->industryType['value'];
    }

    /**
     * Sets Industry Type.
     * Industry Type
     *
     * @maps industry_type
     * @factory \FortisAPILib\Models\IndustryTypeEnum::checkValue
     */
    public function setIndustryType(?string $industryType): void
    {
        $this->industryType['value'] = $industryType;
    }

    /**
     * Unsets Industry Type.
     * Industry Type
     */
    public function unsetIndustryType(): void
    {
        $this->industryType = [];
    }

    /**
     * Returns Title.
     * Title
     */
    public function getTitle(): string
    {
        return $this->title;
    }

    /**
     * Sets Title.
     * Title
     *
     * @required
     * @maps title
     */
    public function setTitle(string $title): void
    {
        $this->title = $title;
    }

    /**
     * Returns Payment Method.
     * Payment method
     */
    public function getPaymentMethod(): string
    {
        return $this->paymentMethod;
    }

    /**
     * Sets Payment Method.
     * Payment method
     *
     * @required
     * @maps payment_method
     * @factory \FortisAPILib\Models\PaymentMethodEnum::checkValue
     */
    public function setPaymentMethod(string $paymentMethod): void
    {
        $this->paymentMethod = $paymentMethod;
    }

    /**
     * Returns Processor.
     * Processor
     */
    public function getProcessor(): ?string
    {
        if (count($this->processor) == 0) {
            return null;
        }
        return $this->processor['value'];
    }

    /**
     * Sets Processor.
     * Processor
     *
     * @maps processor
     * @factory \FortisAPILib\Models\ProcessorEnum::checkValue
     */
    public function setProcessor(?string $processor): void
    {
        $this->processor['value'] = $processor;
    }

    /**
     * Unsets Processor.
     * Processor
     */
    public function unsetProcessor(): void
    {
        $this->processor = [];
    }

    /**
     * Returns Mcc.
     * MCC
     */
    public function getMcc(): ?string
    {
        if (count($this->mcc) == 0) {
            return null;
        }
        return $this->mcc['value'];
    }

    /**
     * Sets Mcc.
     * MCC
     *
     * @maps mcc
     */
    public function setMcc(?string $mcc): void
    {
        $this->mcc['value'] = $mcc;
    }

    /**
     * Unsets Mcc.
     * MCC
     */
    public function unsetMcc(): void
    {
        $this->mcc = [];
    }

    /**
     * Returns Tax Surcharge Config.
     * Tax Surcharge Config
     */
    public function getTaxSurchargeConfig(): ?int
    {
        if (count($this->taxSurchargeConfig) == 0) {
            return null;
        }
        return $this->taxSurchargeConfig['value'];
    }

    /**
     * Sets Tax Surcharge Config.
     * Tax Surcharge Config
     *
     * @maps tax_surcharge_config
     * @factory \FortisAPILib\Models\TaxSurchargeConfigEnum::checkValue
     */
    public function setTaxSurchargeConfig(?int $taxSurchargeConfig): void
    {
        $this->taxSurchargeConfig['value'] = $taxSurchargeConfig;
    }

    /**
     * Unsets Tax Surcharge Config.
     * Tax Surcharge Config
     */
    public function unsetTaxSurchargeConfig(): void
    {
        $this->taxSurchargeConfig = [];
    }

    /**
     * Returns Terminal Id.
     * Terminal ID
     */
    public function getTerminalId(): ?string
    {
        if (count($this->terminalId) == 0) {
            return null;
        }
        return $this->terminalId['value'];
    }

    /**
     * Sets Terminal Id.
     * Terminal ID
     *
     * @maps terminal_id
     */
    public function setTerminalId(?string $terminalId): void
    {
        $this->terminalId['value'] = $terminalId;
    }

    /**
     * Unsets Terminal Id.
     * Terminal ID
     */
    public function unsetTerminalId(): void
    {
        $this->terminalId = [];
    }

    /**
     * Returns Partner.
     * Partner
     */
    public function getPartner(): ?string
    {
        if (count($this->partner) == 0) {
            return null;
        }
        return $this->partner['value'];
    }

    /**
     * Sets Partner.
     * Partner
     *
     * @maps partner
     * @factory \FortisAPILib\Models\PartnerEnum::checkValue
     */
    public function setPartner(?string $partner): void
    {
        $this->partner['value'] = $partner;
    }

    /**
     * Unsets Partner.
     * Partner
     */
    public function unsetPartner(): void
    {
        $this->partner = [];
    }

    /**
     * Returns Product Ach Pv Store Id.
     * Product Ach Pv Store ID
     */
    public function getProductAchPvStoreId(): ?string
    {
        if (count($this->productAchPvStoreId) == 0) {
            return null;
        }
        return $this->productAchPvStoreId['value'];
    }

    /**
     * Sets Product Ach Pv Store Id.
     * Product Ach Pv Store ID
     *
     * @maps product_ach_pv_store_id
     */
    public function setProductAchPvStoreId(?string $productAchPvStoreId): void
    {
        $this->productAchPvStoreId['value'] = $productAchPvStoreId;
    }

    /**
     * Unsets Product Ach Pv Store Id.
     * Product Ach Pv Store ID
     */
    public function unsetProductAchPvStoreId(): void
    {
        $this->productAchPvStoreId = [];
    }

    /**
     * Returns Invoice Adjustment Title.
     * Invoice Adjustment Title
     */
    public function getInvoiceAdjustmentTitle(): ?string
    {
        if (count($this->invoiceAdjustmentTitle) == 0) {
            return null;
        }
        return $this->invoiceAdjustmentTitle['value'];
    }

    /**
     * Sets Invoice Adjustment Title.
     * Invoice Adjustment Title
     *
     * @maps invoice_adjustment_title
     */
    public function setInvoiceAdjustmentTitle(?string $invoiceAdjustmentTitle): void
    {
        $this->invoiceAdjustmentTitle['value'] = $invoiceAdjustmentTitle;
    }

    /**
     * Unsets Invoice Adjustment Title.
     * Invoice Adjustment Title
     */
    public function unsetInvoiceAdjustmentTitle(): void
    {
        $this->invoiceAdjustmentTitle = [];
    }

    /**
     * Returns Location Id.
     * Location ID
     */
    public function getLocationId(): string
    {
        return $this->locationId;
    }

    /**
     * Sets Location Id.
     * Location ID
     *
     * @required
     * @maps location_id
     */
    public function setLocationId(string $locationId): void
    {
        $this->locationId = $locationId;
    }

    /**
     * Returns Location Api Id.
     * Location Api ID
     */
    public function getLocationApiId(): ?string
    {
        if (count($this->locationApiId) == 0) {
            return null;
        }
        return $this->locationApiId['value'];
    }

    /**
     * Sets Location Api Id.
     * Location Api ID
     *
     * @maps location_api_id
     */
    public function setLocationApiId(?string $locationApiId): void
    {
        $this->locationApiId['value'] = $locationApiId;
    }

    /**
     * Unsets Location Api Id.
     * Location Api ID
     */
    public function unsetLocationApiId(): void
    {
        $this->locationApiId = [];
    }

    /**
     * Returns Billing Location Api Id.
     * Billing Location API ID
     */
    public function getBillingLocationApiId(): ?string
    {
        if (count($this->billingLocationApiId) == 0) {
            return null;
        }
        return $this->billingLocationApiId['value'];
    }

    /**
     * Sets Billing Location Api Id.
     * Billing Location API ID
     *
     * @maps billing_location_api_id
     */
    public function setBillingLocationApiId(?string $billingLocationApiId): void
    {
        $this->billingLocationApiId['value'] = $billingLocationApiId;
    }

    /**
     * Unsets Billing Location Api Id.
     * Billing Location API ID
     */
    public function unsetBillingLocationApiId(): void
    {
        $this->billingLocationApiId = [];
    }

    /**
     * Returns Portfolio Id.
     * Portfolio ID
     */
    public function getPortfolioId(): ?string
    {
        if (count($this->portfolioId) == 0) {
            return null;
        }
        return $this->portfolioId['value'];
    }

    /**
     * Sets Portfolio Id.
     * Portfolio ID
     *
     * @maps portfolio_id
     */
    public function setPortfolioId(?string $portfolioId): void
    {
        $this->portfolioId['value'] = $portfolioId;
    }

    /**
     * Unsets Portfolio Id.
     * Portfolio ID
     */
    public function unsetPortfolioId(): void
    {
        $this->portfolioId = [];
    }

    /**
     * Returns Portfolio Validation Rule.
     * Product Validation Rule
     */
    public function getPortfolioValidationRule(): ?string
    {
        if (count($this->portfolioValidationRule) == 0) {
            return null;
        }
        return $this->portfolioValidationRule['value'];
    }

    /**
     * Sets Portfolio Validation Rule.
     * Product Validation Rule
     *
     * @maps portfolioValidationRule
     */
    public function setPortfolioValidationRule(?string $portfolioValidationRule): void
    {
        $this->portfolioValidationRule['value'] = $portfolioValidationRule;
    }

    /**
     * Unsets Portfolio Validation Rule.
     * Product Validation Rule
     */
    public function unsetPortfolioValidationRule(): void
    {
        $this->portfolioValidationRule = [];
    }

    /**
     * Returns Sub Processor.
     * Sub Processor
     */
    public function getSubProcessor(): ?string
    {
        if (count($this->subProcessor) == 0) {
            return null;
        }
        return $this->subProcessor['value'];
    }

    /**
     * Sets Sub Processor.
     * Sub Processor
     *
     * @maps sub_processor
     */
    public function setSubProcessor(?string $subProcessor): void
    {
        $this->subProcessor['value'] = $subProcessor;
    }

    /**
     * Unsets Sub Processor.
     * Sub Processor
     */
    public function unsetSubProcessor(): void
    {
        $this->subProcessor = [];
    }

    /**
     * Returns Surcharge.
     * Surcharge
     */
    public function getSurcharge(): ?array
    {
        return $this->surcharge;
    }

    /**
     * Sets Surcharge.
     * Surcharge
     *
     * @maps surcharge
     */
    public function setSurcharge(?array $surcharge): void
    {
        $this->surcharge = $surcharge;
    }

    /**
     * Returns Processor Data.
     */
    public function getProcessorData(): ?array
    {
        return $this->processorData;
    }

    /**
     * Sets Processor Data.
     *
     * @maps processor_data
     */
    public function setProcessorData(?array $processorData): void
    {
        $this->processorData = $processorData;
    }

    /**
     * Returns Vt Clerk Number.
     * Vt Clerk Number
     */
    public function getVtClerkNumber(): ?bool
    {
        return $this->vtClerkNumber;
    }

    /**
     * Sets Vt Clerk Number.
     * Vt Clerk Number
     *
     * @maps vt_clerk_number
     */
    public function setVtClerkNumber(?bool $vtClerkNumber): void
    {
        $this->vtClerkNumber = $vtClerkNumber;
    }

    /**
     * Returns Vt Billing Phone.
     * Card Type JCB
     */
    public function getVtBillingPhone(): ?bool
    {
        return $this->vtBillingPhone;
    }

    /**
     * Sets Vt Billing Phone.
     * Card Type JCB
     *
     * @maps vt_billing_phone
     */
    public function setVtBillingPhone(?bool $vtBillingPhone): void
    {
        $this->vtBillingPhone = $vtBillingPhone;
    }

    /**
     * Returns Vt Enable Tip.
     * VT Enable Tip
     */
    public function getVtEnableTip(): ?bool
    {
        return $this->vtEnableTip;
    }

    /**
     * Sets Vt Enable Tip.
     * VT Enable Tip
     *
     * @maps vt_enable_tip
     */
    public function setVtEnableTip(?bool $vtEnableTip): void
    {
        $this->vtEnableTip = $vtEnableTip;
    }

    /**
     * Returns Ach Allow Debit.
     * Ach Allow Debit
     */
    public function getAchAllowDebit(): ?bool
    {
        return $this->achAllowDebit;
    }

    /**
     * Sets Ach Allow Debit.
     * Ach Allow Debit
     *
     * @maps ach_allow_debit
     */
    public function setAchAllowDebit(?bool $achAllowDebit): void
    {
        $this->achAllowDebit = $achAllowDebit;
    }

    /**
     * Returns Ach Allow Credit.
     * Ach Allow Credit
     */
    public function getAchAllowCredit(): ?bool
    {
        return $this->achAllowCredit;
    }

    /**
     * Sets Ach Allow Credit.
     * Ach Allow Credit
     *
     * @maps ach_allow_credit
     */
    public function setAchAllowCredit(?bool $achAllowCredit): void
    {
        $this->achAllowCredit = $achAllowCredit;
    }

    /**
     * Returns Ach Allow Refund.
     * Ach Allow Refund
     */
    public function getAchAllowRefund(): ?bool
    {
        return $this->achAllowRefund;
    }

    /**
     * Sets Ach Allow Refund.
     * Ach Allow Refund
     *
     * @maps ach_allow_refund
     */
    public function setAchAllowRefund(?bool $achAllowRefund): void
    {
        $this->achAllowRefund = $achAllowRefund;
    }

    /**
     * Returns Vt Cvv.
     * VT CVV
     */
    public function getVtCvv(): ?bool
    {
        return $this->vtCvv;
    }

    /**
     * Sets Vt Cvv.
     * VT CVV
     *
     * @maps vt_cvv
     */
    public function setVtCvv(?bool $vtCvv): void
    {
        $this->vtCvv = $vtCvv;
    }

    /**
     * Returns Vt Street.
     * VT Street
     */
    public function getVtStreet(): ?bool
    {
        return $this->vtStreet;
    }

    /**
     * Sets Vt Street.
     * VT Street
     *
     * @maps vt_street
     */
    public function setVtStreet(?bool $vtStreet): void
    {
        $this->vtStreet = $vtStreet;
    }

    /**
     * Returns Vt Zip.
     * VT Zip
     */
    public function getVtZip(): ?bool
    {
        return $this->vtZip;
    }

    /**
     * Sets Vt Zip.
     * VT Zip
     *
     * @maps vt_zip
     */
    public function setVtZip(?bool $vtZip): void
    {
        $this->vtZip = $vtZip;
    }

    /**
     * Returns Vt Order Num.
     * VT Order Num
     */
    public function getVtOrderNum(): ?bool
    {
        return $this->vtOrderNum;
    }

    /**
     * Sets Vt Order Num.
     * VT Order Num
     *
     * @maps vt_order_num
     */
    public function setVtOrderNum(?bool $vtOrderNum): void
    {
        $this->vtOrderNum = $vtOrderNum;
    }

    /**
     * Returns Vt Enable.
     * VT Enable
     */
    public function getVtEnable(): ?bool
    {
        return $this->vtEnable;
    }

    /**
     * Sets Vt Enable.
     * VT Enable
     *
     * @maps vt_enable
     */
    public function setVtEnable(?bool $vtEnable): void
    {
        $this->vtEnable = $vtEnable;
    }

    /**
     * Returns Receipt Show Contact Name.
     * Receipt Show Contact Name
     */
    public function getReceiptShowContactName(): ?bool
    {
        return $this->receiptShowContactName;
    }

    /**
     * Sets Receipt Show Contact Name.
     * Receipt Show Contact Name
     *
     * @maps receipt_show_contact_name
     */
    public function setReceiptShowContactName(?bool $receiptShowContactName): void
    {
        $this->receiptShowContactName = $receiptShowContactName;
    }

    /**
     * Returns Display Avs.
     * Display Avs
     */
    public function getDisplayAvs(): ?bool
    {
        return $this->displayAvs;
    }

    /**
     * Sets Display Avs.
     * Display Avs
     *
     * @maps display_avs
     */
    public function setDisplayAvs(?bool $displayAvs): void
    {
        $this->displayAvs = $displayAvs;
    }

    /**
     * Returns Card Type Visa.
     * Card Type Visa
     */
    public function getCardTypeVisa(): ?bool
    {
        return $this->cardTypeVisa;
    }

    /**
     * Sets Card Type Visa.
     * Card Type Visa
     *
     * @maps card_type_visa
     */
    public function setCardTypeVisa(?bool $cardTypeVisa): void
    {
        $this->cardTypeVisa = $cardTypeVisa;
    }

    /**
     * Returns Card Type Mc.
     * Card Type Mc
     */
    public function getCardTypeMc(): ?bool
    {
        return $this->cardTypeMc;
    }

    /**
     * Sets Card Type Mc.
     * Card Type Mc
     *
     * @maps card_type_mc
     */
    public function setCardTypeMc(?bool $cardTypeMc): void
    {
        $this->cardTypeMc = $cardTypeMc;
    }

    /**
     * Returns Card Type Disc.
     * Card Type Disc
     */
    public function getCardTypeDisc(): ?bool
    {
        return $this->cardTypeDisc;
    }

    /**
     * Sets Card Type Disc.
     * Card Type Disc
     *
     * @maps card_type_disc
     */
    public function setCardTypeDisc(?bool $cardTypeDisc): void
    {
        $this->cardTypeDisc = $cardTypeDisc;
    }

    /**
     * Returns Card Type Amex.
     * Card Type Amex
     */
    public function getCardTypeAmex(): ?bool
    {
        return $this->cardTypeAmex;
    }

    /**
     * Sets Card Type Amex.
     * Card Type Amex
     *
     * @maps card_type_amex
     */
    public function setCardTypeAmex(?bool $cardTypeAmex): void
    {
        $this->cardTypeAmex = $cardTypeAmex;
    }

    /**
     * Returns Card Type Diners.
     * Card Type Dinners
     */
    public function getCardTypeDiners(): ?bool
    {
        return $this->cardTypeDiners;
    }

    /**
     * Sets Card Type Diners.
     * Card Type Dinners
     *
     * @maps card_type_diners
     */
    public function setCardTypeDiners(?bool $cardTypeDiners): void
    {
        $this->cardTypeDiners = $cardTypeDiners;
    }

    /**
     * Returns Card Type Jcb.
     */
    public function getCardTypeJcb(): ?bool
    {
        return $this->cardTypeJcb;
    }

    /**
     * Sets Card Type Jcb.
     *
     * @maps card_type_jcb
     */
    public function setCardTypeJcb(?bool $cardTypeJcb): void
    {
        $this->cardTypeJcb = $cardTypeJcb;
    }

    /**
     * Returns Invoice Location.
     * Invoice Location
     */
    public function getInvoiceLocation(): ?bool
    {
        return $this->invoiceLocation;
    }

    /**
     * Sets Invoice Location.
     * Invoice Location
     *
     * @maps invoice_location
     */
    public function setInvoiceLocation(?bool $invoiceLocation): void
    {
        $this->invoiceLocation = $invoiceLocation;
    }

    /**
     * Returns Allow Partial Authorization.
     * Allow Partial Authorization
     */
    public function getAllowPartialAuthorization(): ?bool
    {
        return $this->allowPartialAuthorization;
    }

    /**
     * Sets Allow Partial Authorization.
     * Allow Partial Authorization
     *
     * @maps allow_partial_authorization
     */
    public function setAllowPartialAuthorization(?bool $allowPartialAuthorization): void
    {
        $this->allowPartialAuthorization = $allowPartialAuthorization;
    }

    /**
     * Returns Allow Recurring Partial Authorization.
     * Allow Recurring Partial Authorization
     */
    public function getAllowRecurringPartialAuthorization(): ?bool
    {
        return $this->allowRecurringPartialAuthorization;
    }

    /**
     * Sets Allow Recurring Partial Authorization.
     * Allow Recurring Partial Authorization
     *
     * @maps allow_recurring_partial_authorization
     */
    public function setAllowRecurringPartialAuthorization(?bool $allowRecurringPartialAuthorization): void
    {
        $this->allowRecurringPartialAuthorization = $allowRecurringPartialAuthorization;
    }

    /**
     * Returns Auto Decline Cvv.
     * Auto Decline Cvv
     */
    public function getAutoDeclineCvv(): ?bool
    {
        return $this->autoDeclineCvv;
    }

    /**
     * Sets Auto Decline Cvv.
     * Auto Decline Cvv
     *
     * @maps auto_decline_cvv
     */
    public function setAutoDeclineCvv(?bool $autoDeclineCvv): void
    {
        $this->autoDeclineCvv = $autoDeclineCvv;
    }

    /**
     * Returns Auto Decline Street.
     * Auto Decline Street
     */
    public function getAutoDeclineStreet(): ?bool
    {
        return $this->autoDeclineStreet;
    }

    /**
     * Sets Auto Decline Street.
     * Auto Decline Street
     *
     * @maps auto_decline_street
     */
    public function setAutoDeclineStreet(?bool $autoDeclineStreet): void
    {
        $this->autoDeclineStreet = $autoDeclineStreet;
    }

    /**
     * Returns Auto Decline Zip.
     * Auto Decline ZIP
     */
    public function getAutoDeclineZip(): ?bool
    {
        return $this->autoDeclineZip;
    }

    /**
     * Sets Auto Decline Zip.
     * Auto Decline ZIP
     *
     * @maps auto_decline_zip
     */
    public function setAutoDeclineZip(?bool $autoDeclineZip): void
    {
        $this->autoDeclineZip = $autoDeclineZip;
    }

    /**
     * Returns Split Payments Allow.
     * Split Payments Allow
     */
    public function getSplitPaymentsAllow(): ?bool
    {
        return $this->splitPaymentsAllow;
    }

    /**
     * Sets Split Payments Allow.
     * Split Payments Allow
     *
     * @maps split_payments_allow
     */
    public function setSplitPaymentsAllow(?bool $splitPaymentsAllow): void
    {
        $this->splitPaymentsAllow = $splitPaymentsAllow;
    }

    /**
     * Returns Vt Show Custom Fields.
     * Vt Show Custom Fields
     */
    public function getVtShowCustomFields(): ?bool
    {
        return $this->vtShowCustomFields;
    }

    /**
     * Sets Vt Show Custom Fields.
     * Vt Show Custom Fields
     *
     * @maps vt_show_custom_fields
     */
    public function setVtShowCustomFields(?bool $vtShowCustomFields): void
    {
        $this->vtShowCustomFields = $vtShowCustomFields;
    }

    /**
     * Returns Receipt Show Custom Fields.
     * Receipt Show Custom Fields
     */
    public function getReceiptShowCustomFields(): ?bool
    {
        return $this->receiptShowCustomFields;
    }

    /**
     * Sets Receipt Show Custom Fields.
     * Receipt Show Custom Fields
     *
     * @maps receipt_show_custom_fields
     */
    public function setReceiptShowCustomFields(?bool $receiptShowCustomFields): void
    {
        $this->receiptShowCustomFields = $receiptShowCustomFields;
    }

    /**
     * Returns Vt Override Sales Tax Allowed.
     * Vt Override Sales Tax Allowed
     */
    public function getVtOverrideSalesTaxAllowed(): ?bool
    {
        return $this->vtOverrideSalesTaxAllowed;
    }

    /**
     * Sets Vt Override Sales Tax Allowed.
     * Vt Override Sales Tax Allowed
     *
     * @maps vt_override_sales_tax_allowed
     */
    public function setVtOverrideSalesTaxAllowed(?bool $vtOverrideSalesTaxAllowed): void
    {
        $this->vtOverrideSalesTaxAllowed = $vtOverrideSalesTaxAllowed;
    }

    /**
     * Returns Vt Enable Sales Tax.
     * Vt Enable Sales Tax
     */
    public function getVtEnableSalesTax(): ?bool
    {
        return $this->vtEnableSalesTax;
    }

    /**
     * Sets Vt Enable Sales Tax.
     * Vt Enable Sales Tax
     *
     * @maps vt_enable_sales_tax
     */
    public function setVtEnableSalesTax(?bool $vtEnableSalesTax): void
    {
        $this->vtEnableSalesTax = $vtEnableSalesTax;
    }

    /**
     * Returns Vt Require Zip.
     * Vt Require ZIP
     */
    public function getVtRequireZip(): ?bool
    {
        return $this->vtRequireZip;
    }

    /**
     * Sets Vt Require Zip.
     * Vt Require ZIP
     *
     * @maps vt_require_zip
     */
    public function setVtRequireZip(?bool $vtRequireZip): void
    {
        $this->vtRequireZip = $vtRequireZip;
    }

    /**
     * Returns Vt Require Street.
     * Vt Require Street
     */
    public function getVtRequireStreet(): ?bool
    {
        return $this->vtRequireStreet;
    }

    /**
     * Sets Vt Require Street.
     * Vt Require Street
     *
     * @maps vt_require_street
     */
    public function setVtRequireStreet(?bool $vtRequireStreet): void
    {
        $this->vtRequireStreet = $vtRequireStreet;
    }

    /**
     * Returns Auto Decline Cavv.
     * Auto Decline Cavv
     */
    public function getAutoDeclineCavv(): ?bool
    {
        return $this->autoDeclineCavv;
    }

    /**
     * Sets Auto Decline Cavv.
     * Auto Decline Cavv
     *
     * @maps auto_decline_cavv
     */
    public function setAutoDeclineCavv(?bool $autoDeclineCavv): void
    {
        $this->autoDeclineCavv = $autoDeclineCavv;
    }

    /**
     * Returns Merchant Id.
     * Merchant ID
     */
    public function getMerchantId(): ?string
    {
        if (count($this->merchantId) == 0) {
            return null;
        }
        return $this->merchantId['value'];
    }

    /**
     * Sets Merchant Id.
     * Merchant ID
     *
     * @maps merchant_id
     */
    public function setMerchantId(?string $merchantId): void
    {
        $this->merchantId['value'] = $merchantId;
    }

    /**
     * Unsets Merchant Id.
     * Merchant ID
     */
    public function unsetMerchantId(): void
    {
        $this->merchantId = [];
    }

    /**
     * Returns Receipt Header.
     * Receipt Header
     */
    public function getReceiptHeader(): ?string
    {
        if (count($this->receiptHeader) == 0) {
            return null;
        }
        return $this->receiptHeader['value'];
    }

    /**
     * Sets Receipt Header.
     * Receipt Header
     *
     * @maps receipt_header
     */
    public function setReceiptHeader(?string $receiptHeader): void
    {
        $this->receiptHeader['value'] = $receiptHeader;
    }

    /**
     * Unsets Receipt Header.
     * Receipt Header
     */
    public function unsetReceiptHeader(): void
    {
        $this->receiptHeader = [];
    }

    /**
     * Returns Receipt Footer.
     * Receipt Footer
     */
    public function getReceiptFooter(): ?string
    {
        if (count($this->receiptFooter) == 0) {
            return null;
        }
        return $this->receiptFooter['value'];
    }

    /**
     * Sets Receipt Footer.
     * Receipt Footer
     *
     * @maps receipt_footer
     */
    public function setReceiptFooter(?string $receiptFooter): void
    {
        $this->receiptFooter['value'] = $receiptFooter;
    }

    /**
     * Unsets Receipt Footer.
     * Receipt Footer
     */
    public function unsetReceiptFooter(): void
    {
        $this->receiptFooter = [];
    }

    /**
     * Returns Receipt Add Account Above Signature.
     * Receipt Add Account Above Signature
     */
    public function getReceiptAddAccountAboveSignature(): ?string
    {
        if (count($this->receiptAddAccountAboveSignature) == 0) {
            return null;
        }
        return $this->receiptAddAccountAboveSignature['value'];
    }

    /**
     * Sets Receipt Add Account Above Signature.
     * Receipt Add Account Above Signature
     *
     * @maps receipt_add_account_above_signature
     */
    public function setReceiptAddAccountAboveSignature(?string $receiptAddAccountAboveSignature): void
    {
        $this->receiptAddAccountAboveSignature['value'] = $receiptAddAccountAboveSignature;
    }

    /**
     * Unsets Receipt Add Account Above Signature.
     * Receipt Add Account Above Signature
     */
    public function unsetReceiptAddAccountAboveSignature(): void
    {
        $this->receiptAddAccountAboveSignature = [];
    }

    /**
     * Returns Receipt Add Recurring Above Signature.
     * Receipt Add Recurring Above Signature
     */
    public function getReceiptAddRecurringAboveSignature(): ?string
    {
        if (count($this->receiptAddRecurringAboveSignature) == 0) {
            return null;
        }
        return $this->receiptAddRecurringAboveSignature['value'];
    }

    /**
     * Sets Receipt Add Recurring Above Signature.
     * Receipt Add Recurring Above Signature
     *
     * @maps receipt_add_recurring_above_signature
     */
    public function setReceiptAddRecurringAboveSignature(?string $receiptAddRecurringAboveSignature): void
    {
        $this->receiptAddRecurringAboveSignature['value'] = $receiptAddRecurringAboveSignature;
    }

    /**
     * Unsets Receipt Add Recurring Above Signature.
     * Receipt Add Recurring Above Signature
     */
    public function unsetReceiptAddRecurringAboveSignature(): void
    {
        $this->receiptAddRecurringAboveSignature = [];
    }

    /**
     * Returns Receipt Vt Above Signature.
     * Receipt VT Above Signature
     */
    public function getReceiptVtAboveSignature(): ?string
    {
        if (count($this->receiptVtAboveSignature) == 0) {
            return null;
        }
        return $this->receiptVtAboveSignature['value'];
    }

    /**
     * Sets Receipt Vt Above Signature.
     * Receipt VT Above Signature
     *
     * @maps receipt_vt_above_signature
     */
    public function setReceiptVtAboveSignature(?string $receiptVtAboveSignature): void
    {
        $this->receiptVtAboveSignature['value'] = $receiptVtAboveSignature;
    }

    /**
     * Unsets Receipt Vt Above Signature.
     * Receipt VT Above Signature
     */
    public function unsetReceiptVtAboveSignature(): void
    {
        $this->receiptVtAboveSignature = [];
    }

    /**
     * Returns Default Transaction Type.
     * Default Transaction Type
     */
    public function getDefaultTransactionType(): ?string
    {
        if (count($this->defaultTransactionType) == 0) {
            return null;
        }
        return $this->defaultTransactionType['value'];
    }

    /**
     * Sets Default Transaction Type.
     * Default Transaction Type
     *
     * @maps default_transaction_type
     * @factory \FortisAPILib\Models\DefaultTransactionTypeEnum::checkValue
     */
    public function setDefaultTransactionType(?string $defaultTransactionType): void
    {
        $this->defaultTransactionType['value'] = $defaultTransactionType;
    }

    /**
     * Unsets Default Transaction Type.
     * Default Transaction Type
     */
    public function unsetDefaultTransactionType(): void
    {
        $this->defaultTransactionType = [];
    }

    /**
     * Returns Username.
     * Username
     */
    public function getUsername(): ?string
    {
        if (count($this->username) == 0) {
            return null;
        }
        return $this->username['value'];
    }

    /**
     * Sets Username.
     * Username
     *
     * @maps username
     */
    public function setUsername(?string $username): void
    {
        $this->username['value'] = $username;
    }

    /**
     * Unsets Username.
     * Username
     */
    public function unsetUsername(): void
    {
        $this->username = [];
    }

    /**
     * Returns Password.
     * Passowrd
     */
    public function getPassword(): ?string
    {
        if (count($this->password) == 0) {
            return null;
        }
        return $this->password['value'];
    }

    /**
     * Sets Password.
     * Passowrd
     *
     * @maps password
     */
    public function setPassword(?string $password): void
    {
        $this->password['value'] = $password;
    }

    /**
     * Unsets Password.
     * Passowrd
     */
    public function unsetPassword(): void
    {
        $this->password = [];
    }

    /**
     * Returns Current Batch.
     * Current Batch
     */
    public function getCurrentBatch(): ?float
    {
        if (count($this->currentBatch) == 0) {
            return null;
        }
        return $this->currentBatch['value'];
    }

    /**
     * Sets Current Batch.
     * Current Batch
     *
     * @maps current_batch
     */
    public function setCurrentBatch(?float $currentBatch): void
    {
        $this->currentBatch['value'] = $currentBatch;
    }

    /**
     * Unsets Current Batch.
     * Current Batch
     */
    public function unsetCurrentBatch(): void
    {
        $this->currentBatch = [];
    }

    /**
     * Returns Dup Check Per Batch.
     * Dup Check Per Batch
     */
    public function getDupCheckPerBatch(): ?string
    {
        if (count($this->dupCheckPerBatch) == 0) {
            return null;
        }
        return $this->dupCheckPerBatch['value'];
    }

    /**
     * Sets Dup Check Per Batch.
     * Dup Check Per Batch
     *
     * @maps dup_check_per_batch
     */
    public function setDupCheckPerBatch(?string $dupCheckPerBatch): void
    {
        $this->dupCheckPerBatch['value'] = $dupCheckPerBatch;
    }

    /**
     * Unsets Dup Check Per Batch.
     * Dup Check Per Batch
     */
    public function unsetDupCheckPerBatch(): void
    {
        $this->dupCheckPerBatch = [];
    }

    /**
     * Returns Agent Code.
     * Agent Code
     */
    public function getAgentCode(): ?string
    {
        if (count($this->agentCode) == 0) {
            return null;
        }
        return $this->agentCode['value'];
    }

    /**
     * Sets Agent Code.
     * Agent Code
     *
     * @maps agent_code
     */
    public function setAgentCode(?string $agentCode): void
    {
        $this->agentCode['value'] = $agentCode;
    }

    /**
     * Unsets Agent Code.
     * Agent Code
     */
    public function unsetAgentCode(): void
    {
        $this->agentCode = [];
    }

    /**
     * Returns Paylink Allow.
     * Paylink Allow
     */
    public function getPaylinkAllow(): ?bool
    {
        return $this->paylinkAllow;
    }

    /**
     * Sets Paylink Allow.
     * Paylink Allow
     *
     * @maps paylink_allow
     */
    public function setPaylinkAllow(?bool $paylinkAllow): void
    {
        $this->paylinkAllow = $paylinkAllow;
    }

    /**
     * Returns Quick Invoice Allow.
     * Quick Invoice Allow
     */
    public function getQuickInvoiceAllow(): ?bool
    {
        return $this->quickInvoiceAllow;
    }

    /**
     * Sets Quick Invoice Allow.
     * Quick Invoice Allow
     *
     * @maps quick_invoice_allow
     */
    public function setQuickInvoiceAllow(?bool $quickInvoiceAllow): void
    {
        $this->quickInvoiceAllow = $quickInvoiceAllow;
    }

    /**
     * Returns Level 3 Allow.
     * Level3 Allow
     */
    public function getLevel3Allow(): ?bool
    {
        return $this->level3Allow;
    }

    /**
     * Sets Level 3 Allow.
     * Level3 Allow
     *
     * @maps level3_allow
     */
    public function setLevel3Allow(?bool $level3Allow): void
    {
        $this->level3Allow = $level3Allow;
    }

    /**
     * Returns Payfac Enable.
     * Payfac Enable
     */
    public function getPayfacEnable(): ?bool
    {
        return $this->payfacEnable;
    }

    /**
     * Sets Payfac Enable.
     * Payfac Enable
     *
     * @maps payfac_enable
     */
    public function setPayfacEnable(?bool $payfacEnable): void
    {
        $this->payfacEnable = $payfacEnable;
    }

    /**
     * Returns Sales Office Id.
     * Sales Office ID
     */
    public function getSalesOfficeId(): ?string
    {
        if (count($this->salesOfficeId) == 0) {
            return null;
        }
        return $this->salesOfficeId['value'];
    }

    /**
     * Sets Sales Office Id.
     * Sales Office ID
     *
     * @maps sales_office_id
     */
    public function setSalesOfficeId(?string $salesOfficeId): void
    {
        $this->salesOfficeId['value'] = $salesOfficeId;
    }

    /**
     * Unsets Sales Office Id.
     * Sales Office ID
     */
    public function unsetSalesOfficeId(): void
    {
        $this->salesOfficeId = [];
    }

    /**
     * Returns Hosted Payment Page Max Allowed.
     * Hosted Payment Page Max Allowed
     */
    public function getHostedPaymentPageMaxAllowed(): ?float
    {
        if (count($this->hostedPaymentPageMaxAllowed) == 0) {
            return null;
        }
        return $this->hostedPaymentPageMaxAllowed['value'];
    }

    /**
     * Sets Hosted Payment Page Max Allowed.
     * Hosted Payment Page Max Allowed
     *
     * @maps hosted_payment_page_max_allowed
     */
    public function setHostedPaymentPageMaxAllowed(?float $hostedPaymentPageMaxAllowed): void
    {
        $this->hostedPaymentPageMaxAllowed['value'] = $hostedPaymentPageMaxAllowed;
    }

    /**
     * Unsets Hosted Payment Page Max Allowed.
     * Hosted Payment Page Max Allowed
     */
    public function unsetHostedPaymentPageMaxAllowed(): void
    {
        $this->hostedPaymentPageMaxAllowed = [];
    }

    /**
     * Returns Hosted Payment Page Allow.
     * Hosted Payment Page Allow
     */
    public function getHostedPaymentPageAllow(): ?bool
    {
        return $this->hostedPaymentPageAllow;
    }

    /**
     * Sets Hosted Payment Page Allow.
     * Hosted Payment Page Allow
     *
     * @maps hosted_payment_page_allow
     */
    public function setHostedPaymentPageAllow(?bool $hostedPaymentPageAllow): void
    {
        $this->hostedPaymentPageAllow = $hostedPaymentPageAllow;
    }

    /**
     * Returns Surcharge Id.
     * Surcharge ID
     */
    public function getSurchargeId(): ?string
    {
        if (count($this->surchargeId) == 0) {
            return null;
        }
        return $this->surchargeId['value'];
    }

    /**
     * Sets Surcharge Id.
     * Surcharge ID
     *
     * @maps surcharge_id
     */
    public function setSurchargeId(?string $surchargeId): void
    {
        $this->surchargeId['value'] = $surchargeId;
    }

    /**
     * Unsets Surcharge Id.
     * Surcharge ID
     */
    public function unsetSurchargeId(): void
    {
        $this->surchargeId = [];
    }

    /**
     * Returns Level 3 Default.
     * Level3 Default
     */
    public function getLevel3Default(): ?array
    {
        return $this->level3Default;
    }

    /**
     * Sets Level 3 Default.
     * Level3 Default
     *
     * @maps level3_default
     */
    public function setLevel3Default(?array $level3Default): void
    {
        $this->level3Default = $level3Default;
    }

    /**
     * Returns Cau Subscribe Type Id.
     * Cau Subscribe Type ID
     */
    public function getCauSubscribeTypeId(): ?int
    {
        if (count($this->cauSubscribeTypeId) == 0) {
            return null;
        }
        return $this->cauSubscribeTypeId['value'];
    }

    /**
     * Sets Cau Subscribe Type Id.
     * Cau Subscribe Type ID
     *
     * @maps cau_subscribe_type_id
     * @factory \FortisAPILib\Models\CauSubscribeTypeIdEnum::checkValue
     */
    public function setCauSubscribeTypeId(?int $cauSubscribeTypeId): void
    {
        $this->cauSubscribeTypeId['value'] = $cauSubscribeTypeId;
    }

    /**
     * Unsets Cau Subscribe Type Id.
     * Cau Subscribe Type ID
     */
    public function unsetCauSubscribeTypeId(): void
    {
        $this->cauSubscribeTypeId = [];
    }

    /**
     * Returns Cau Account Number.
     * Cau Account Number
     */
    public function getCauAccountNumber(): ?string
    {
        if (count($this->cauAccountNumber) == 0) {
            return null;
        }
        return $this->cauAccountNumber['value'];
    }

    /**
     * Sets Cau Account Number.
     * Cau Account Number
     *
     * @maps cau_account_number
     */
    public function setCauAccountNumber(?string $cauAccountNumber): void
    {
        $this->cauAccountNumber['value'] = $cauAccountNumber;
    }

    /**
     * Unsets Cau Account Number.
     * Cau Account Number
     */
    public function unsetCauAccountNumber(): void
    {
        $this->cauAccountNumber = [];
    }

    /**
     * Returns Location Billing Account Id.
     * Location Billing Account ID
     */
    public function getLocationBillingAccountId(): ?string
    {
        if (count($this->locationBillingAccountId) == 0) {
            return null;
        }
        return $this->locationBillingAccountId['value'];
    }

    /**
     * Sets Location Billing Account Id.
     * Location Billing Account ID
     *
     * @maps location_billing_account_id
     */
    public function setLocationBillingAccountId(?string $locationBillingAccountId): void
    {
        $this->locationBillingAccountId['value'] = $locationBillingAccountId;
    }

    /**
     * Unsets Location Billing Account Id.
     * Location Billing Account ID
     */
    public function unsetLocationBillingAccountId(): void
    {
        $this->locationBillingAccountId = [];
    }

    /**
     * Returns Product Billing Group Id.
     * Product Billing Group ID
     */
    public function getProductBillingGroupId(): ?string
    {
        if (count($this->productBillingGroupId) == 0) {
            return null;
        }
        return $this->productBillingGroupId['value'];
    }

    /**
     * Sets Product Billing Group Id.
     * Product Billing Group ID
     *
     * @maps product_billing_group_id
     */
    public function setProductBillingGroupId(?string $productBillingGroupId): void
    {
        $this->productBillingGroupId['value'] = $productBillingGroupId;
    }

    /**
     * Unsets Product Billing Group Id.
     * Product Billing Group ID
     */
    public function unsetProductBillingGroupId(): void
    {
        $this->productBillingGroupId = [];
    }

    /**
     * Returns Account Number.
     * Account number
     */
    public function getAccountNumber(): ?string
    {
        if (count($this->accountNumber) == 0) {
            return null;
        }
        return $this->accountNumber['value'];
    }

    /**
     * Sets Account Number.
     * Account number
     *
     * @maps account_number
     */
    public function setAccountNumber(?string $accountNumber): void
    {
        $this->accountNumber['value'] = $accountNumber;
    }

    /**
     * Unsets Account Number.
     * Account number
     */
    public function unsetAccountNumber(): void
    {
        $this->accountNumber = [];
    }

    /**
     * Returns Run Avs on Accountvault Create.
     * Run Avs On Accountvault Create
     */
    public function getRunAvsOnAccountvaultCreate(): ?bool
    {
        return $this->runAvsOnAccountvaultCreate;
    }

    /**
     * Sets Run Avs on Accountvault Create.
     * Run Avs On Accountvault Create
     *
     * @maps run_avs_on_accountvault_create
     */
    public function setRunAvsOnAccountvaultCreate(?bool $runAvsOnAccountvaultCreate): void
    {
        $this->runAvsOnAccountvaultCreate = $runAvsOnAccountvaultCreate;
    }

    /**
     * Returns Accountvault Expire Notification Email Enable.
     * Accountvault Expire Notification Email Enable
     */
    public function getAccountvaultExpireNotificationEmailEnable(): ?bool
    {
        return $this->accountvaultExpireNotificationEmailEnable;
    }

    /**
     * Sets Accountvault Expire Notification Email Enable.
     * Accountvault Expire Notification Email Enable
     *
     * @maps accountvault_expire_notification_email_enable
     */
    public function setAccountvaultExpireNotificationEmailEnable(
        ?bool $accountvaultExpireNotificationEmailEnable
    ): void {
        $this->accountvaultExpireNotificationEmailEnable = $accountvaultExpireNotificationEmailEnable;
    }

    /**
     * Returns Debit Allow Void.
     * Debit Allow Void
     */
    public function getDebitAllowVoid(): ?bool
    {
        return $this->debitAllowVoid;
    }

    /**
     * Sets Debit Allow Void.
     * Debit Allow Void
     *
     * @maps debit_allow_void
     */
    public function setDebitAllowVoid(?bool $debitAllowVoid): void
    {
        $this->debitAllowVoid = $debitAllowVoid;
    }

    /**
     * Returns Quick Invoice Text to Pay.
     * Quick Invoice Text To Pay
     */
    public function getQuickInvoiceTextToPay(): ?bool
    {
        return $this->quickInvoiceTextToPay;
    }

    /**
     * Sets Quick Invoice Text to Pay.
     * Quick Invoice Text To Pay
     *
     * @maps quick_invoice_text_to_pay
     */
    public function setQuickInvoiceTextToPay(?bool $quickInvoiceTextToPay): void
    {
        $this->quickInvoiceTextToPay = $quickInvoiceTextToPay;
    }

    /**
     * Returns Authentication Code.
     * Authentication Code
     */
    public function getAuthenticationCode(): ?string
    {
        if (count($this->authenticationCode) == 0) {
            return null;
        }
        return $this->authenticationCode['value'];
    }

    /**
     * Sets Authentication Code.
     * Authentication Code
     *
     * @maps authentication_code
     */
    public function setAuthenticationCode(?string $authenticationCode): void
    {
        $this->authenticationCode['value'] = $authenticationCode;
    }

    /**
     * Unsets Authentication Code.
     * Authentication Code
     */
    public function unsetAuthenticationCode(): void
    {
        $this->authenticationCode = [];
    }

    /**
     * Returns Sms Enable.
     * SMS Enable
     */
    public function getSmsEnable(): ?bool
    {
        return $this->smsEnable;
    }

    /**
     * Sets Sms Enable.
     * SMS Enable
     *
     * @maps sms_enable
     */
    public function setSmsEnable(?bool $smsEnable): void
    {
        $this->smsEnable = $smsEnable;
    }

    /**
     * Returns Vt Show Currency.
     * Vt Show Currency
     */
    public function getVtShowCurrency(): ?bool
    {
        return $this->vtShowCurrency;
    }

    /**
     * Sets Vt Show Currency.
     * Vt Show Currency
     *
     * @maps vt_show_currency
     */
    public function setVtShowCurrency(?bool $vtShowCurrency): void
    {
        $this->vtShowCurrency = $vtShowCurrency;
    }

    /**
     * Returns Receipt Show Currency.
     * Receipt Show Currency
     */
    public function getReceiptShowCurrency(): ?bool
    {
        return $this->receiptShowCurrency;
    }

    /**
     * Sets Receipt Show Currency.
     * Receipt Show Currency
     *
     * @maps receipt_show_currency
     */
    public function setReceiptShowCurrency(?bool $receiptShowCurrency): void
    {
        $this->receiptShowCurrency = $receiptShowCurrency;
    }

    /**
     * Returns Allow Blind Refund.
     * Allow Blind Refund
     */
    public function getAllowBlindRefund(): ?bool
    {
        return $this->allowBlindRefund;
    }

    /**
     * Sets Allow Blind Refund.
     * Allow Blind Refund
     *
     * @maps allow_blind_refund
     */
    public function setAllowBlindRefund(?bool $allowBlindRefund): void
    {
        $this->allowBlindRefund = $allowBlindRefund;
    }

    /**
     * Returns Vt Show Company Name.
     * Vt Show Company Name
     */
    public function getVtShowCompanyName(): ?bool
    {
        return $this->vtShowCompanyName;
    }

    /**
     * Sets Vt Show Company Name.
     * Vt Show Company Name
     *
     * @maps vt_show_company_name
     */
    public function setVtShowCompanyName(?bool $vtShowCompanyName): void
    {
        $this->vtShowCompanyName = $vtShowCompanyName;
    }

    /**
     * Returns Receipt Show Company Name.
     * Receipt Show Company Name
     */
    public function getReceiptShowCompanyName(): ?bool
    {
        return $this->receiptShowCompanyName;
    }

    /**
     * Sets Receipt Show Company Name.
     * Receipt Show Company Name
     *
     * @maps receipt_show_company_name
     */
    public function setReceiptShowCompanyName(?bool $receiptShowCompanyName): void
    {
        $this->receiptShowCompanyName = $receiptShowCompanyName;
    }

    /**
     * Returns Bank Funded Only.
     * Bank Funded Only
     */
    public function getBankFundedOnly(): ?bool
    {
        return $this->bankFundedOnly;
    }

    /**
     * Sets Bank Funded Only.
     * Bank Funded Only
     *
     * @maps bank_funded_only
     */
    public function setBankFundedOnly(?bool $bankFundedOnly): void
    {
        $this->bankFundedOnly = $bankFundedOnly;
    }

    /**
     * Returns Id.
     * User Reports ID
     */
    public function getId(): string
    {
        return $this->id;
    }

    /**
     * Sets Id.
     * User Reports ID
     *
     * @required
     * @maps id
     */
    public function setId(string $id): void
    {
        $this->id = $id;
    }

    /**
     * Returns Receipt Logo.
     * Receipt Logo
     */
    public function getReceiptLogo(): ?string
    {
        return $this->receiptLogo;
    }

    /**
     * Sets Receipt Logo.
     * Receipt Logo
     *
     * @maps receipt_logo
     */
    public function setReceiptLogo(?string $receiptLogo): void
    {
        $this->receiptLogo = $receiptLogo;
    }

    /**
     * Returns Active.
     * Active
     */
    public function getActive(): ?bool
    {
        return $this->active;
    }

    /**
     * Sets Active.
     * Active
     *
     * @maps active
     */
    public function setActive(?bool $active): void
    {
        $this->active = $active;
    }

    /**
     * Returns Tz.
     * TZ
     */
    public function getTz(): ?string
    {
        if (count($this->tz) == 0) {
            return null;
        }
        return $this->tz['value'];
    }

    /**
     * Sets Tz.
     * TZ
     *
     * @maps tz
     */
    public function setTz(?string $tz): void
    {
        $this->tz['value'] = $tz;
    }

    /**
     * Unsets Tz.
     * TZ
     */
    public function unsetTz(): void
    {
        $this->tz = [];
    }

    /**
     * Returns Currency Code.
     * Currency Code
     */
    public function getCurrencyCode(): ?float
    {
        if (count($this->currencyCode) == 0) {
            return null;
        }
        return $this->currencyCode['value'];
    }

    /**
     * Sets Currency Code.
     * Currency Code
     *
     * @maps currency_code
     */
    public function setCurrencyCode(?float $currencyCode): void
    {
        $this->currencyCode['value'] = $currencyCode;
    }

    /**
     * Unsets Currency Code.
     * Currency Code
     */
    public function unsetCurrencyCode(): void
    {
        $this->currencyCode = [];
    }

    /**
     * Returns Current Stan.
     * Current Stan
     */
    public function getCurrentStan(): ?float
    {
        if (count($this->currentStan) == 0) {
            return null;
        }
        return $this->currentStan['value'];
    }

    /**
     * Sets Current Stan.
     * Current Stan
     *
     * @maps current_stan
     */
    public function setCurrentStan(?float $currentStan): void
    {
        $this->currentStan['value'] = $currentStan;
    }

    /**
     * Unsets Current Stan.
     * Current Stan
     */
    public function unsetCurrentStan(): void
    {
        $this->currentStan = [];
    }

    /**
     * Returns Created Ts.
     * Created Time Stamp
     */
    public function getCreatedTs(): ?int
    {
        if (count($this->createdTs) == 0) {
            return null;
        }
        return $this->createdTs['value'];
    }

    /**
     * Sets Created Ts.
     * Created Time Stamp
     *
     * @maps created_ts
     */
    public function setCreatedTs(?int $createdTs): void
    {
        $this->createdTs['value'] = $createdTs;
    }

    /**
     * Unsets Created Ts.
     * Created Time Stamp
     */
    public function unsetCreatedTs(): void
    {
        $this->createdTs = [];
    }

    /**
     * Returns Modified Ts.
     * Modified Time Stamp
     */
    public function getModifiedTs(): ?int
    {
        if (count($this->modifiedTs) == 0) {
            return null;
        }
        return $this->modifiedTs['value'];
    }

    /**
     * Sets Modified Ts.
     * Modified Time Stamp
     *
     * @maps modified_ts
     */
    public function setModifiedTs(?int $modifiedTs): void
    {
        $this->modifiedTs['value'] = $modifiedTs;
    }

    /**
     * Unsets Modified Ts.
     * Modified Time Stamp
     */
    public function unsetModifiedTs(): void
    {
        $this->modifiedTs = [];
    }

    /**
     * Returns Created User Id.
     * User ID Created the register
     */
    public function getCreatedUserId(): ?string
    {
        if (count($this->createdUserId) == 0) {
            return null;
        }
        return $this->createdUserId['value'];
    }

    /**
     * Sets Created User Id.
     * User ID Created the register
     *
     * @maps created_user_id
     */
    public function setCreatedUserId(?string $createdUserId): void
    {
        $this->createdUserId['value'] = $createdUserId;
    }

    /**
     * Unsets Created User Id.
     * User ID Created the register
     */
    public function unsetCreatedUserId(): void
    {
        $this->createdUserId = [];
    }

    /**
     * Returns Modified User Id.
     * Last User ID that updated the register
     */
    public function getModifiedUserId(): ?string
    {
        if (count($this->modifiedUserId) == 0) {
            return null;
        }
        return $this->modifiedUserId['value'];
    }

    /**
     * Sets Modified User Id.
     * Last User ID that updated the register
     *
     * @maps modified_user_id
     */
    public function setModifiedUserId(?string $modifiedUserId): void
    {
        $this->modifiedUserId['value'] = $modifiedUserId;
    }

    /**
     * Unsets Modified User Id.
     * Last User ID that updated the register
     */
    public function unsetModifiedUserId(): void
    {
        $this->modifiedUserId = [];
    }

    private $additionalProperties = [];

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property
     * @param mixed $value Value of property
     */
    public function addAdditionalProperty(string $name, $value)
    {
        $this->additionalProperties[$name] = $value;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (!empty($this->processorVersion)) {
            $json['processor_version']                             = $this->processorVersion['value'];
        }
        if (!empty($this->industryType)) {
            $json['industry_type']                                 =
                IndustryTypeEnum::checkValue(
                    $this->industryType['value']
                );
        }
        $json['title']                                             = $this->title;
        $json['payment_method']                                    =
            PaymentMethodEnum::checkValue(
                $this->paymentMethod
            );
        if (!empty($this->processor)) {
            $json['processor']                                     =
                ProcessorEnum::checkValue(
                    $this->processor['value']
                );
        }
        if (!empty($this->mcc)) {
            $json['mcc']                                           = $this->mcc['value'];
        }
        if (!empty($this->taxSurchargeConfig)) {
            $json['tax_surcharge_config']                          =
                TaxSurchargeConfigEnum::checkValue(
                    $this->taxSurchargeConfig['value']
                );
        }
        if (!empty($this->terminalId)) {
            $json['terminal_id']                                   = $this->terminalId['value'];
        }
        if (!empty($this->partner)) {
            $json['partner']                                       = PartnerEnum::checkValue($this->partner['value']);
        }
        if (!empty($this->productAchPvStoreId)) {
            $json['product_ach_pv_store_id']                       = $this->productAchPvStoreId['value'];
        }
        if (!empty($this->invoiceAdjustmentTitle)) {
            $json['invoice_adjustment_title']                      = $this->invoiceAdjustmentTitle['value'];
        }
        $json['location_id']                                       = $this->locationId;
        if (!empty($this->locationApiId)) {
            $json['location_api_id']                               = $this->locationApiId['value'];
        }
        if (!empty($this->billingLocationApiId)) {
            $json['billing_location_api_id']                       = $this->billingLocationApiId['value'];
        }
        if (!empty($this->portfolioId)) {
            $json['portfolio_id']                                  = $this->portfolioId['value'];
        }
        if (!empty($this->portfolioValidationRule)) {
            $json['portfolioValidationRule']                       = $this->portfolioValidationRule['value'];
        }
        if (!empty($this->subProcessor)) {
            $json['sub_processor']                                 = $this->subProcessor['value'];
        }
        if (isset($this->surcharge)) {
            $json['surcharge']                                     = $this->surcharge;
        }
        if (isset($this->processorData)) {
            $json['processor_data']                                = $this->processorData;
        }
        if (isset($this->vtClerkNumber)) {
            $json['vt_clerk_number']                               = $this->vtClerkNumber;
        }
        if (isset($this->vtBillingPhone)) {
            $json['vt_billing_phone']                              = $this->vtBillingPhone;
        }
        if (isset($this->vtEnableTip)) {
            $json['vt_enable_tip']                                 = $this->vtEnableTip;
        }
        if (isset($this->achAllowDebit)) {
            $json['ach_allow_debit']                               = $this->achAllowDebit;
        }
        if (isset($this->achAllowCredit)) {
            $json['ach_allow_credit']                              = $this->achAllowCredit;
        }
        if (isset($this->achAllowRefund)) {
            $json['ach_allow_refund']                              = $this->achAllowRefund;
        }
        if (isset($this->vtCvv)) {
            $json['vt_cvv']                                        = $this->vtCvv;
        }
        if (isset($this->vtStreet)) {
            $json['vt_street']                                     = $this->vtStreet;
        }
        if (isset($this->vtZip)) {
            $json['vt_zip']                                        = $this->vtZip;
        }
        if (isset($this->vtOrderNum)) {
            $json['vt_order_num']                                  = $this->vtOrderNum;
        }
        if (isset($this->vtEnable)) {
            $json['vt_enable']                                     = $this->vtEnable;
        }
        if (isset($this->receiptShowContactName)) {
            $json['receipt_show_contact_name']                     = $this->receiptShowContactName;
        }
        if (isset($this->displayAvs)) {
            $json['display_avs']                                   = $this->displayAvs;
        }
        if (isset($this->cardTypeVisa)) {
            $json['card_type_visa']                                = $this->cardTypeVisa;
        }
        if (isset($this->cardTypeMc)) {
            $json['card_type_mc']                                  = $this->cardTypeMc;
        }
        if (isset($this->cardTypeDisc)) {
            $json['card_type_disc']                                = $this->cardTypeDisc;
        }
        if (isset($this->cardTypeAmex)) {
            $json['card_type_amex']                                = $this->cardTypeAmex;
        }
        if (isset($this->cardTypeDiners)) {
            $json['card_type_diners']                              = $this->cardTypeDiners;
        }
        if (isset($this->cardTypeJcb)) {
            $json['card_type_jcb']                                 = $this->cardTypeJcb;
        }
        if (isset($this->invoiceLocation)) {
            $json['invoice_location']                              = $this->invoiceLocation;
        }
        if (isset($this->allowPartialAuthorization)) {
            $json['allow_partial_authorization']                   = $this->allowPartialAuthorization;
        }
        if (isset($this->allowRecurringPartialAuthorization)) {
            $json['allow_recurring_partial_authorization']         = $this->allowRecurringPartialAuthorization;
        }
        if (isset($this->autoDeclineCvv)) {
            $json['auto_decline_cvv']                              = $this->autoDeclineCvv;
        }
        if (isset($this->autoDeclineStreet)) {
            $json['auto_decline_street']                           = $this->autoDeclineStreet;
        }
        if (isset($this->autoDeclineZip)) {
            $json['auto_decline_zip']                              = $this->autoDeclineZip;
        }
        if (isset($this->splitPaymentsAllow)) {
            $json['split_payments_allow']                          = $this->splitPaymentsAllow;
        }
        if (isset($this->vtShowCustomFields)) {
            $json['vt_show_custom_fields']                         = $this->vtShowCustomFields;
        }
        if (isset($this->receiptShowCustomFields)) {
            $json['receipt_show_custom_fields']                    = $this->receiptShowCustomFields;
        }
        if (isset($this->vtOverrideSalesTaxAllowed)) {
            $json['vt_override_sales_tax_allowed']                 = $this->vtOverrideSalesTaxAllowed;
        }
        if (isset($this->vtEnableSalesTax)) {
            $json['vt_enable_sales_tax']                           = $this->vtEnableSalesTax;
        }
        if (isset($this->vtRequireZip)) {
            $json['vt_require_zip']                                = $this->vtRequireZip;
        }
        if (isset($this->vtRequireStreet)) {
            $json['vt_require_street']                             = $this->vtRequireStreet;
        }
        if (isset($this->autoDeclineCavv)) {
            $json['auto_decline_cavv']                             = $this->autoDeclineCavv;
        }
        if (!empty($this->merchantId)) {
            $json['merchant_id']                                   = $this->merchantId['value'];
        }
        if (!empty($this->receiptHeader)) {
            $json['receipt_header']                                = $this->receiptHeader['value'];
        }
        if (!empty($this->receiptFooter)) {
            $json['receipt_footer']                                = $this->receiptFooter['value'];
        }
        if (!empty($this->receiptAddAccountAboveSignature)) {
            $json['receipt_add_account_above_signature']           = $this->receiptAddAccountAboveSignature['value'];
        }
        if (!empty($this->receiptAddRecurringAboveSignature)) {
            $json['receipt_add_recurring_above_signature']         = $this->receiptAddRecurringAboveSignature['value'];
        }
        if (!empty($this->receiptVtAboveSignature)) {
            $json['receipt_vt_above_signature']                    = $this->receiptVtAboveSignature['value'];
        }
        if (!empty($this->defaultTransactionType)) {
            $json['default_transaction_type']                      =
                DefaultTransactionTypeEnum::checkValue(
                    $this->defaultTransactionType['value']
                );
        }
        if (!empty($this->username)) {
            $json['username']                                      = $this->username['value'];
        }
        if (!empty($this->password)) {
            $json['password']                                      = $this->password['value'];
        }
        if (!empty($this->currentBatch)) {
            $json['current_batch']                                 = $this->currentBatch['value'];
        }
        if (!empty($this->dupCheckPerBatch)) {
            $json['dup_check_per_batch']                           = $this->dupCheckPerBatch['value'];
        }
        if (!empty($this->agentCode)) {
            $json['agent_code']                                    = $this->agentCode['value'];
        }
        if (isset($this->paylinkAllow)) {
            $json['paylink_allow']                                 = $this->paylinkAllow;
        }
        if (isset($this->quickInvoiceAllow)) {
            $json['quick_invoice_allow']                           = $this->quickInvoiceAllow;
        }
        if (isset($this->level3Allow)) {
            $json['level3_allow']                                  = $this->level3Allow;
        }
        if (isset($this->payfacEnable)) {
            $json['payfac_enable']                                 = $this->payfacEnable;
        }
        if (!empty($this->salesOfficeId)) {
            $json['sales_office_id']                               = $this->salesOfficeId['value'];
        }
        if (!empty($this->hostedPaymentPageMaxAllowed)) {
            $json['hosted_payment_page_max_allowed']               = $this->hostedPaymentPageMaxAllowed['value'];
        }
        if (isset($this->hostedPaymentPageAllow)) {
            $json['hosted_payment_page_allow']                     = $this->hostedPaymentPageAllow;
        }
        if (!empty($this->surchargeId)) {
            $json['surcharge_id']                                  = $this->surchargeId['value'];
        }
        if (isset($this->level3Default)) {
            $json['level3_default']                                = $this->level3Default;
        }
        if (!empty($this->cauSubscribeTypeId)) {
            $json['cau_subscribe_type_id']                         =
                CauSubscribeTypeIdEnum::checkValue(
                    $this->cauSubscribeTypeId['value']
                );
        }
        if (!empty($this->cauAccountNumber)) {
            $json['cau_account_number']                            = $this->cauAccountNumber['value'];
        }
        if (!empty($this->locationBillingAccountId)) {
            $json['location_billing_account_id']                   = $this->locationBillingAccountId['value'];
        }
        if (!empty($this->productBillingGroupId)) {
            $json['product_billing_group_id']                      = $this->productBillingGroupId['value'];
        }
        if (!empty($this->accountNumber)) {
            $json['account_number']                                = $this->accountNumber['value'];
        }
        if (isset($this->runAvsOnAccountvaultCreate)) {
            $json['run_avs_on_accountvault_create']                = $this->runAvsOnAccountvaultCreate;
        }
        if (isset($this->accountvaultExpireNotificationEmailEnable)) {
            $json['accountvault_expire_notification_email_enable'] = $this->accountvaultExpireNotificationEmailEnable;
        }
        if (isset($this->debitAllowVoid)) {
            $json['debit_allow_void']                              = $this->debitAllowVoid;
        }
        if (isset($this->quickInvoiceTextToPay)) {
            $json['quick_invoice_text_to_pay']                     = $this->quickInvoiceTextToPay;
        }
        if (!empty($this->authenticationCode)) {
            $json['authentication_code']                           = $this->authenticationCode['value'];
        }
        if (isset($this->smsEnable)) {
            $json['sms_enable']                                    = $this->smsEnable;
        }
        if (isset($this->vtShowCurrency)) {
            $json['vt_show_currency']                              = $this->vtShowCurrency;
        }
        if (isset($this->receiptShowCurrency)) {
            $json['receipt_show_currency']                         = $this->receiptShowCurrency;
        }
        if (isset($this->allowBlindRefund)) {
            $json['allow_blind_refund']                            = $this->allowBlindRefund;
        }
        if (isset($this->vtShowCompanyName)) {
            $json['vt_show_company_name']                          = $this->vtShowCompanyName;
        }
        if (isset($this->receiptShowCompanyName)) {
            $json['receipt_show_company_name']                     = $this->receiptShowCompanyName;
        }
        if (isset($this->bankFundedOnly)) {
            $json['bank_funded_only']                              = $this->bankFundedOnly;
        }
        $json['id']                                                = $this->id;
        if (isset($this->receiptLogo)) {
            $json['receipt_logo']                                  = $this->receiptLogo;
        }
        if (isset($this->active)) {
            $json['active']                                        = $this->active;
        }
        if (!empty($this->tz)) {
            $json['tz']                                            = $this->tz['value'];
        }
        if (!empty($this->currencyCode)) {
            $json['currency_code']                                 = $this->currencyCode['value'];
        }
        if (!empty($this->currentStan)) {
            $json['current_stan']                                  = $this->currentStan['value'];
        }
        if (!empty($this->createdTs)) {
            $json['created_ts']                                    = $this->createdTs['value'];
        }
        if (!empty($this->modifiedTs)) {
            $json['modified_ts']                                   = $this->modifiedTs['value'];
        }
        if (!empty($this->createdUserId)) {
            $json['created_user_id']                               = $this->createdUserId['value'];
        }
        if (!empty($this->modifiedUserId)) {
            $json['modified_user_id']                              = $this->modifiedUserId['value'];
        }
        $json = array_merge($json, $this->additionalProperties);

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
