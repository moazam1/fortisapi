<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models;

use FortisAPILib\ApiHelper;
use stdClass;

/**
 * You can use any `field_name` from this endpoint results as a filter, and you can also use more than
 * one field to create AND conditions. For date fields (ended with `_ts`), you can also search for
 * ranges using the `$gte` (Greater than or equal to) and/or  `$lte` (Lower than or equal to). You can
 * use one of the following methods:
 * >/endpoint?filter={ "field_name": "Value" }
 * >
 * >/endpoint?filter[field_name]=Value
 * >
 * >/endpoint?filter={ "created_ts": "today" }
 * >
 * >/endpoint?filter[created_ts]=today
 * >
 * >/endpoint?filter={ "created_ts": { "$gte": "yesterday", "$lte": "today" } }
 * >
 * >/endpoint?filter[created_ts][$gte]=yesterday&filter[created_ts][$lte]=today
 * >
 * >/endpoint?filter[address][city]=memphis
 * >
 * >/endpoint?filter={ "address": { "city" : "memphis" } }
 * >
 */
class Filter15 implements \JsonSerializable
{
    /**
     * @var array|null
     */
    private $accountNumber;

    /**
     * @var array|null
     */
    private $brandingDomainUrl;

    /**
     * @var array|null
     */
    private $cellPhone;

    /**
     * @var array|null
     */
    private $companyName;

    /**
     * @var array|null
     */
    private $contactId;

    /**
     * @var array|null
     */
    private $dateOfBirth;

    /**
     * @var array|null
     */
    private $domainId;

    /**
     * @var array|null
     */
    private $email;

    /**
     * @var array|null
     */
    private $emailTrxReceipt;

    /**
     * @var array|null
     */
    private $homePhone;

    /**
     * @var array|null
     */
    private $firstName;

    /**
     * @var array|null
     */
    private $lastName;

    /**
     * @var array|null
     */
    private $locale;

    /**
     * @var array|null
     */
    private $officePhone;

    /**
     * @var array|null
     */
    private $officeExtPhone;

    /**
     * @var array|null
     */
    private $primaryLocationId;

    /**
     * @var array|null
     */
    private $requiresNewPassword;

    /**
     * @var array|null
     */
    private $termsConditionCode;

    /**
     * @var array|null
     */
    private $tz;

    /**
     * @var array|null
     */
    private $uiPrefs;

    /**
     * @var array|null
     */
    private $username;

    /**
     * @var array|null
     */
    private $userApiKey;

    /**
     * @var array|null
     */
    private $userHashKey;

    /**
     * @var array|null
     */
    private $userTypeCode;

    /**
     * @var array|null
     */
    private $password;

    /**
     * @var array|null
     */
    private $zip;

    /**
     * @var array|null
     */
    private $locationId;

    /**
     * @var array|null
     */
    private $contactApiId;

    /**
     * @var array|null
     */
    private $primaryLocationApiId;

    /**
     * @var array|null
     */
    private $statusId;

    /**
     * @var array|null
     */
    private $apiOnly;

    /**
     * @var array|null
     */
    private $isInvitation;

    /**
     * @var array|null
     */
    private $address;

    /**
     * @var array|null
     */
    private $id;

    /**
     * @var array|null
     */
    private $status;

    /**
     * @var array|null
     */
    private $loginAttempts;

    /**
     * @var string|null|LastLoginTs1
     */
    private $lastLoginTs;

    /**
     * @var string|null|CreatedTs1
     */
    private $createdTs;

    /**
     * @var string|null|ModifiedTs1
     */
    private $modifiedTs;

    /**
     * @var array|null
     */
    private $createdUserId;

    /**
     * @var string|null|TermsAcceptedTs1
     */
    private $termsAcceptedTs;

    /**
     * @var array|null
     */
    private $termsAgreeIp;

    /**
     * @var array|null
     */
    private $currentDateTime;

    /**
     * @var array|null
     */
    private $locations;

    /**
     * @var array|null
     */
    private $primaryLocation;

    /**
     * @var array|null
     */
    private $receivedEmails;

    /**
     * @var array|null
     */
    private $contact;

    /**
     * @var array|null
     */
    private $isDeletable;

    /**
     * @var array|null
     */
    private $activeNotificationAlerts;

    /**
     * @var array|null
     */
    private $locationUsers;

    /**
     * @var array|null
     */
    private $authRoles;

    /**
     * @var array|null
     */
    private $changelogs;

    /**
     * @var array|null
     */
    private $resources;

    /**
     * @var array|null
     */
    private $domain;

    /**
     * @var array|null
     */
    private $createdUser;

    /**
     * @var array|null
     */
    private $locationMarketplaces;

    /**
     * @var array|null
     */
    private $emailBlacklist;

    /**
     * @var array|null
     */
    private $helppage;

    /**
     * Returns Account Number.
     */
    public function getAccountNumber(): ?array
    {
        return $this->accountNumber;
    }

    /**
     * Sets Account Number.
     *
     * @maps account_number
     */
    public function setAccountNumber(?array $accountNumber): void
    {
        $this->accountNumber = $accountNumber;
    }

    /**
     * Returns Branding Domain Url.
     */
    public function getBrandingDomainUrl(): ?array
    {
        return $this->brandingDomainUrl;
    }

    /**
     * Sets Branding Domain Url.
     *
     * @maps branding_domain_url
     */
    public function setBrandingDomainUrl(?array $brandingDomainUrl): void
    {
        $this->brandingDomainUrl = $brandingDomainUrl;
    }

    /**
     * Returns Cell Phone.
     */
    public function getCellPhone(): ?array
    {
        return $this->cellPhone;
    }

    /**
     * Sets Cell Phone.
     *
     * @maps cell_phone
     */
    public function setCellPhone(?array $cellPhone): void
    {
        $this->cellPhone = $cellPhone;
    }

    /**
     * Returns Company Name.
     */
    public function getCompanyName(): ?array
    {
        return $this->companyName;
    }

    /**
     * Sets Company Name.
     *
     * @maps company_name
     */
    public function setCompanyName(?array $companyName): void
    {
        $this->companyName = $companyName;
    }

    /**
     * Returns Contact Id.
     */
    public function getContactId(): ?array
    {
        return $this->contactId;
    }

    /**
     * Sets Contact Id.
     *
     * @maps contact_id
     */
    public function setContactId(?array $contactId): void
    {
        $this->contactId = $contactId;
    }

    /**
     * Returns Date of Birth.
     */
    public function getDateOfBirth(): ?array
    {
        return $this->dateOfBirth;
    }

    /**
     * Sets Date of Birth.
     *
     * @maps date_of_birth
     */
    public function setDateOfBirth(?array $dateOfBirth): void
    {
        $this->dateOfBirth = $dateOfBirth;
    }

    /**
     * Returns Domain Id.
     */
    public function getDomainId(): ?array
    {
        return $this->domainId;
    }

    /**
     * Sets Domain Id.
     *
     * @maps domain_id
     */
    public function setDomainId(?array $domainId): void
    {
        $this->domainId = $domainId;
    }

    /**
     * Returns Email.
     */
    public function getEmail(): ?array
    {
        return $this->email;
    }

    /**
     * Sets Email.
     *
     * @maps email
     */
    public function setEmail(?array $email): void
    {
        $this->email = $email;
    }

    /**
     * Returns Email Trx Receipt.
     */
    public function getEmailTrxReceipt(): ?array
    {
        return $this->emailTrxReceipt;
    }

    /**
     * Sets Email Trx Receipt.
     *
     * @maps email_trx_receipt
     */
    public function setEmailTrxReceipt(?array $emailTrxReceipt): void
    {
        $this->emailTrxReceipt = $emailTrxReceipt;
    }

    /**
     * Returns Home Phone.
     */
    public function getHomePhone(): ?array
    {
        return $this->homePhone;
    }

    /**
     * Sets Home Phone.
     *
     * @maps home_phone
     */
    public function setHomePhone(?array $homePhone): void
    {
        $this->homePhone = $homePhone;
    }

    /**
     * Returns First Name.
     */
    public function getFirstName(): ?array
    {
        return $this->firstName;
    }

    /**
     * Sets First Name.
     *
     * @maps first_name
     */
    public function setFirstName(?array $firstName): void
    {
        $this->firstName = $firstName;
    }

    /**
     * Returns Last Name.
     */
    public function getLastName(): ?array
    {
        return $this->lastName;
    }

    /**
     * Sets Last Name.
     *
     * @maps last_name
     */
    public function setLastName(?array $lastName): void
    {
        $this->lastName = $lastName;
    }

    /**
     * Returns Locale.
     */
    public function getLocale(): ?array
    {
        return $this->locale;
    }

    /**
     * Sets Locale.
     *
     * @maps locale
     */
    public function setLocale(?array $locale): void
    {
        $this->locale = $locale;
    }

    /**
     * Returns Office Phone.
     */
    public function getOfficePhone(): ?array
    {
        return $this->officePhone;
    }

    /**
     * Sets Office Phone.
     *
     * @maps office_phone
     */
    public function setOfficePhone(?array $officePhone): void
    {
        $this->officePhone = $officePhone;
    }

    /**
     * Returns Office Ext Phone.
     */
    public function getOfficeExtPhone(): ?array
    {
        return $this->officeExtPhone;
    }

    /**
     * Sets Office Ext Phone.
     *
     * @maps office_ext_phone
     */
    public function setOfficeExtPhone(?array $officeExtPhone): void
    {
        $this->officeExtPhone = $officeExtPhone;
    }

    /**
     * Returns Primary Location Id.
     */
    public function getPrimaryLocationId(): ?array
    {
        return $this->primaryLocationId;
    }

    /**
     * Sets Primary Location Id.
     *
     * @maps primary_location_id
     */
    public function setPrimaryLocationId(?array $primaryLocationId): void
    {
        $this->primaryLocationId = $primaryLocationId;
    }

    /**
     * Returns Requires New Password.
     */
    public function getRequiresNewPassword(): ?array
    {
        return $this->requiresNewPassword;
    }

    /**
     * Sets Requires New Password.
     *
     * @maps requires_new_password
     */
    public function setRequiresNewPassword(?array $requiresNewPassword): void
    {
        $this->requiresNewPassword = $requiresNewPassword;
    }

    /**
     * Returns Terms Condition Code.
     */
    public function getTermsConditionCode(): ?array
    {
        return $this->termsConditionCode;
    }

    /**
     * Sets Terms Condition Code.
     *
     * @maps terms_condition_code
     */
    public function setTermsConditionCode(?array $termsConditionCode): void
    {
        $this->termsConditionCode = $termsConditionCode;
    }

    /**
     * Returns Tz.
     */
    public function getTz(): ?array
    {
        return $this->tz;
    }

    /**
     * Sets Tz.
     *
     * @maps tz
     */
    public function setTz(?array $tz): void
    {
        $this->tz = $tz;
    }

    /**
     * Returns Ui Prefs.
     */
    public function getUiPrefs(): ?array
    {
        return $this->uiPrefs;
    }

    /**
     * Sets Ui Prefs.
     *
     * @maps ui_prefs
     */
    public function setUiPrefs(?array $uiPrefs): void
    {
        $this->uiPrefs = $uiPrefs;
    }

    /**
     * Returns Username.
     */
    public function getUsername(): ?array
    {
        return $this->username;
    }

    /**
     * Sets Username.
     *
     * @maps username
     */
    public function setUsername(?array $username): void
    {
        $this->username = $username;
    }

    /**
     * Returns User Api Key.
     */
    public function getUserApiKey(): ?array
    {
        return $this->userApiKey;
    }

    /**
     * Sets User Api Key.
     *
     * @maps user_api_key
     */
    public function setUserApiKey(?array $userApiKey): void
    {
        $this->userApiKey = $userApiKey;
    }

    /**
     * Returns User Hash Key.
     */
    public function getUserHashKey(): ?array
    {
        return $this->userHashKey;
    }

    /**
     * Sets User Hash Key.
     *
     * @maps user_hash_key
     */
    public function setUserHashKey(?array $userHashKey): void
    {
        $this->userHashKey = $userHashKey;
    }

    /**
     * Returns User Type Code.
     */
    public function getUserTypeCode(): ?array
    {
        return $this->userTypeCode;
    }

    /**
     * Sets User Type Code.
     *
     * @maps user_type_code
     */
    public function setUserTypeCode(?array $userTypeCode): void
    {
        $this->userTypeCode = $userTypeCode;
    }

    /**
     * Returns Password.
     */
    public function getPassword(): ?array
    {
        return $this->password;
    }

    /**
     * Sets Password.
     *
     * @maps password
     */
    public function setPassword(?array $password): void
    {
        $this->password = $password;
    }

    /**
     * Returns Zip.
     */
    public function getZip(): ?array
    {
        return $this->zip;
    }

    /**
     * Sets Zip.
     *
     * @maps zip
     */
    public function setZip(?array $zip): void
    {
        $this->zip = $zip;
    }

    /**
     * Returns Location Id.
     */
    public function getLocationId(): ?array
    {
        return $this->locationId;
    }

    /**
     * Sets Location Id.
     *
     * @maps location_id
     */
    public function setLocationId(?array $locationId): void
    {
        $this->locationId = $locationId;
    }

    /**
     * Returns Contact Api Id.
     */
    public function getContactApiId(): ?array
    {
        return $this->contactApiId;
    }

    /**
     * Sets Contact Api Id.
     *
     * @maps contact_api_id
     */
    public function setContactApiId(?array $contactApiId): void
    {
        $this->contactApiId = $contactApiId;
    }

    /**
     * Returns Primary Location Api Id.
     */
    public function getPrimaryLocationApiId(): ?array
    {
        return $this->primaryLocationApiId;
    }

    /**
     * Sets Primary Location Api Id.
     *
     * @maps primary_location_api_id
     */
    public function setPrimaryLocationApiId(?array $primaryLocationApiId): void
    {
        $this->primaryLocationApiId = $primaryLocationApiId;
    }

    /**
     * Returns Status Id.
     */
    public function getStatusId(): ?array
    {
        return $this->statusId;
    }

    /**
     * Sets Status Id.
     *
     * @maps status_id
     */
    public function setStatusId(?array $statusId): void
    {
        $this->statusId = $statusId;
    }

    /**
     * Returns Api Only.
     */
    public function getApiOnly(): ?array
    {
        return $this->apiOnly;
    }

    /**
     * Sets Api Only.
     *
     * @maps api_only
     */
    public function setApiOnly(?array $apiOnly): void
    {
        $this->apiOnly = $apiOnly;
    }

    /**
     * Returns Is Invitation.
     */
    public function getIsInvitation(): ?array
    {
        return $this->isInvitation;
    }

    /**
     * Sets Is Invitation.
     *
     * @maps is_invitation
     */
    public function setIsInvitation(?array $isInvitation): void
    {
        $this->isInvitation = $isInvitation;
    }

    /**
     * Returns Address.
     */
    public function getAddress(): ?array
    {
        return $this->address;
    }

    /**
     * Sets Address.
     *
     * @maps address
     */
    public function setAddress(?array $address): void
    {
        $this->address = $address;
    }

    /**
     * Returns Id.
     */
    public function getId(): ?array
    {
        return $this->id;
    }

    /**
     * Sets Id.
     *
     * @maps id
     */
    public function setId(?array $id): void
    {
        $this->id = $id;
    }

    /**
     * Returns Status.
     */
    public function getStatus(): ?array
    {
        return $this->status;
    }

    /**
     * Sets Status.
     *
     * @maps status
     */
    public function setStatus(?array $status): void
    {
        $this->status = $status;
    }

    /**
     * Returns Login Attempts.
     */
    public function getLoginAttempts(): ?array
    {
        return $this->loginAttempts;
    }

    /**
     * Sets Login Attempts.
     *
     * @maps login_attempts
     */
    public function setLoginAttempts(?array $loginAttempts): void
    {
        $this->loginAttempts = $loginAttempts;
    }

    /**
     * Returns Last Login Ts.
     *
     * @return string|null|LastLoginTs1
     */
    public function getLastLoginTs()
    {
        return $this->lastLoginTs;
    }

    /**
     * Sets Last Login Ts.
     *
     * @maps last_login_ts
     * @mapsBy anyOf(anyOf(LastLoginTsEnum,LastLoginTs1),null)
     * @factory \FortisAPILib\Models\LastLoginTsEnum::checkValue LastLoginTsEnum
     *
     * @param string|null|LastLoginTs1 $lastLoginTs
     */
    public function setLastLoginTs($lastLoginTs): void
    {
        $this->lastLoginTs = $lastLoginTs;
    }

    /**
     * Returns Created Ts.
     *
     * @return string|null|CreatedTs1
     */
    public function getCreatedTs()
    {
        return $this->createdTs;
    }

    /**
     * Sets Created Ts.
     *
     * @maps created_ts
     * @mapsBy anyOf(anyOf(CreatedTsEnum,CreatedTs1),null)
     * @factory \FortisAPILib\Models\CreatedTsEnum::checkValue CreatedTsEnum
     *
     * @param string|null|CreatedTs1 $createdTs
     */
    public function setCreatedTs($createdTs): void
    {
        $this->createdTs = $createdTs;
    }

    /**
     * Returns Modified Ts.
     *
     * @return string|null|ModifiedTs1
     */
    public function getModifiedTs()
    {
        return $this->modifiedTs;
    }

    /**
     * Sets Modified Ts.
     *
     * @maps modified_ts
     * @mapsBy anyOf(anyOf(ModifiedTsEnum,ModifiedTs1),null)
     * @factory \FortisAPILib\Models\ModifiedTsEnum::checkValue ModifiedTsEnum
     *
     * @param string|null|ModifiedTs1 $modifiedTs
     */
    public function setModifiedTs($modifiedTs): void
    {
        $this->modifiedTs = $modifiedTs;
    }

    /**
     * Returns Created User Id.
     */
    public function getCreatedUserId(): ?array
    {
        return $this->createdUserId;
    }

    /**
     * Sets Created User Id.
     *
     * @maps created_user_id
     */
    public function setCreatedUserId(?array $createdUserId): void
    {
        $this->createdUserId = $createdUserId;
    }

    /**
     * Returns Terms Accepted Ts.
     *
     * @return string|null|TermsAcceptedTs1
     */
    public function getTermsAcceptedTs()
    {
        return $this->termsAcceptedTs;
    }

    /**
     * Sets Terms Accepted Ts.
     *
     * @maps terms_accepted_ts
     * @mapsBy anyOf(anyOf(TermsAcceptedTsEnum,TermsAcceptedTs1),null)
     * @factory \FortisAPILib\Models\TermsAcceptedTsEnum::checkValue TermsAcceptedTsEnum
     *
     * @param string|null|TermsAcceptedTs1 $termsAcceptedTs
     */
    public function setTermsAcceptedTs($termsAcceptedTs): void
    {
        $this->termsAcceptedTs = $termsAcceptedTs;
    }

    /**
     * Returns Terms Agree Ip.
     */
    public function getTermsAgreeIp(): ?array
    {
        return $this->termsAgreeIp;
    }

    /**
     * Sets Terms Agree Ip.
     *
     * @maps terms_agree_ip
     */
    public function setTermsAgreeIp(?array $termsAgreeIp): void
    {
        $this->termsAgreeIp = $termsAgreeIp;
    }

    /**
     * Returns Current Date Time.
     */
    public function getCurrentDateTime(): ?array
    {
        return $this->currentDateTime;
    }

    /**
     * Sets Current Date Time.
     *
     * @maps current_date_time
     */
    public function setCurrentDateTime(?array $currentDateTime): void
    {
        $this->currentDateTime = $currentDateTime;
    }

    /**
     * Returns Locations.
     */
    public function getLocations(): ?array
    {
        return $this->locations;
    }

    /**
     * Sets Locations.
     *
     * @maps locations
     */
    public function setLocations(?array $locations): void
    {
        $this->locations = $locations;
    }

    /**
     * Returns Primary Location.
     */
    public function getPrimaryLocation(): ?array
    {
        return $this->primaryLocation;
    }

    /**
     * Sets Primary Location.
     *
     * @maps primary_location
     */
    public function setPrimaryLocation(?array $primaryLocation): void
    {
        $this->primaryLocation = $primaryLocation;
    }

    /**
     * Returns Received Emails.
     */
    public function getReceivedEmails(): ?array
    {
        return $this->receivedEmails;
    }

    /**
     * Sets Received Emails.
     *
     * @maps received_emails
     */
    public function setReceivedEmails(?array $receivedEmails): void
    {
        $this->receivedEmails = $receivedEmails;
    }

    /**
     * Returns Contact.
     */
    public function getContact(): ?array
    {
        return $this->contact;
    }

    /**
     * Sets Contact.
     *
     * @maps contact
     */
    public function setContact(?array $contact): void
    {
        $this->contact = $contact;
    }

    /**
     * Returns Is Deletable.
     */
    public function getIsDeletable(): ?array
    {
        return $this->isDeletable;
    }

    /**
     * Sets Is Deletable.
     *
     * @maps isDeletable
     */
    public function setIsDeletable(?array $isDeletable): void
    {
        $this->isDeletable = $isDeletable;
    }

    /**
     * Returns Active Notification Alerts.
     */
    public function getActiveNotificationAlerts(): ?array
    {
        return $this->activeNotificationAlerts;
    }

    /**
     * Sets Active Notification Alerts.
     *
     * @maps active_notification_alerts
     */
    public function setActiveNotificationAlerts(?array $activeNotificationAlerts): void
    {
        $this->activeNotificationAlerts = $activeNotificationAlerts;
    }

    /**
     * Returns Location Users.
     */
    public function getLocationUsers(): ?array
    {
        return $this->locationUsers;
    }

    /**
     * Sets Location Users.
     *
     * @maps location_users
     */
    public function setLocationUsers(?array $locationUsers): void
    {
        $this->locationUsers = $locationUsers;
    }

    /**
     * Returns Auth Roles.
     */
    public function getAuthRoles(): ?array
    {
        return $this->authRoles;
    }

    /**
     * Sets Auth Roles.
     *
     * @maps auth_roles
     */
    public function setAuthRoles(?array $authRoles): void
    {
        $this->authRoles = $authRoles;
    }

    /**
     * Returns Changelogs.
     */
    public function getChangelogs(): ?array
    {
        return $this->changelogs;
    }

    /**
     * Sets Changelogs.
     *
     * @maps changelogs
     */
    public function setChangelogs(?array $changelogs): void
    {
        $this->changelogs = $changelogs;
    }

    /**
     * Returns Resources.
     */
    public function getResources(): ?array
    {
        return $this->resources;
    }

    /**
     * Sets Resources.
     *
     * @maps resources
     */
    public function setResources(?array $resources): void
    {
        $this->resources = $resources;
    }

    /**
     * Returns Domain.
     */
    public function getDomain(): ?array
    {
        return $this->domain;
    }

    /**
     * Sets Domain.
     *
     * @maps domain
     */
    public function setDomain(?array $domain): void
    {
        $this->domain = $domain;
    }

    /**
     * Returns Created User.
     */
    public function getCreatedUser(): ?array
    {
        return $this->createdUser;
    }

    /**
     * Sets Created User.
     *
     * @maps created_user
     */
    public function setCreatedUser(?array $createdUser): void
    {
        $this->createdUser = $createdUser;
    }

    /**
     * Returns Location Marketplaces.
     */
    public function getLocationMarketplaces(): ?array
    {
        return $this->locationMarketplaces;
    }

    /**
     * Sets Location Marketplaces.
     *
     * @maps location_marketplaces
     */
    public function setLocationMarketplaces(?array $locationMarketplaces): void
    {
        $this->locationMarketplaces = $locationMarketplaces;
    }

    /**
     * Returns Email Blacklist.
     */
    public function getEmailBlacklist(): ?array
    {
        return $this->emailBlacklist;
    }

    /**
     * Sets Email Blacklist.
     *
     * @maps email_blacklist
     */
    public function setEmailBlacklist(?array $emailBlacklist): void
    {
        $this->emailBlacklist = $emailBlacklist;
    }

    /**
     * Returns Helppage.
     */
    public function getHelppage(): ?array
    {
        return $this->helppage;
    }

    /**
     * Sets Helppage.
     *
     * @maps helppage
     */
    public function setHelppage(?array $helppage): void
    {
        $this->helppage = $helppage;
    }

    private $additionalProperties = [];

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property
     * @param mixed $value Value of property
     */
    public function addAdditionalProperty(string $name, $value)
    {
        $this->additionalProperties[$name] = $value;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->accountNumber)) {
            $json['account_number']             = $this->accountNumber;
        }
        if (isset($this->brandingDomainUrl)) {
            $json['branding_domain_url']        = $this->brandingDomainUrl;
        }
        if (isset($this->cellPhone)) {
            $json['cell_phone']                 = $this->cellPhone;
        }
        if (isset($this->companyName)) {
            $json['company_name']               = $this->companyName;
        }
        if (isset($this->contactId)) {
            $json['contact_id']                 = $this->contactId;
        }
        if (isset($this->dateOfBirth)) {
            $json['date_of_birth']              = $this->dateOfBirth;
        }
        if (isset($this->domainId)) {
            $json['domain_id']                  = $this->domainId;
        }
        if (isset($this->email)) {
            $json['email']                      = $this->email;
        }
        if (isset($this->emailTrxReceipt)) {
            $json['email_trx_receipt']          = $this->emailTrxReceipt;
        }
        if (isset($this->homePhone)) {
            $json['home_phone']                 = $this->homePhone;
        }
        if (isset($this->firstName)) {
            $json['first_name']                 = $this->firstName;
        }
        if (isset($this->lastName)) {
            $json['last_name']                  = $this->lastName;
        }
        if (isset($this->locale)) {
            $json['locale']                     = $this->locale;
        }
        if (isset($this->officePhone)) {
            $json['office_phone']               = $this->officePhone;
        }
        if (isset($this->officeExtPhone)) {
            $json['office_ext_phone']           = $this->officeExtPhone;
        }
        if (isset($this->primaryLocationId)) {
            $json['primary_location_id']        = $this->primaryLocationId;
        }
        if (isset($this->requiresNewPassword)) {
            $json['requires_new_password']      = $this->requiresNewPassword;
        }
        if (isset($this->termsConditionCode)) {
            $json['terms_condition_code']       = $this->termsConditionCode;
        }
        if (isset($this->tz)) {
            $json['tz']                         = $this->tz;
        }
        if (isset($this->uiPrefs)) {
            $json['ui_prefs']                   = $this->uiPrefs;
        }
        if (isset($this->username)) {
            $json['username']                   = $this->username;
        }
        if (isset($this->userApiKey)) {
            $json['user_api_key']               = $this->userApiKey;
        }
        if (isset($this->userHashKey)) {
            $json['user_hash_key']              = $this->userHashKey;
        }
        if (isset($this->userTypeCode)) {
            $json['user_type_code']             = $this->userTypeCode;
        }
        if (isset($this->password)) {
            $json['password']                   = $this->password;
        }
        if (isset($this->zip)) {
            $json['zip']                        = $this->zip;
        }
        if (isset($this->locationId)) {
            $json['location_id']                = $this->locationId;
        }
        if (isset($this->contactApiId)) {
            $json['contact_api_id']             = $this->contactApiId;
        }
        if (isset($this->primaryLocationApiId)) {
            $json['primary_location_api_id']    = $this->primaryLocationApiId;
        }
        if (isset($this->statusId)) {
            $json['status_id']                  = $this->statusId;
        }
        if (isset($this->apiOnly)) {
            $json['api_only']                   = $this->apiOnly;
        }
        if (isset($this->isInvitation)) {
            $json['is_invitation']              = $this->isInvitation;
        }
        if (isset($this->address)) {
            $json['address']                    = $this->address;
        }
        if (isset($this->id)) {
            $json['id']                         = $this->id;
        }
        if (isset($this->status)) {
            $json['status']                     = $this->status;
        }
        if (isset($this->loginAttempts)) {
            $json['login_attempts']             = $this->loginAttempts;
        }
        if (isset($this->lastLoginTs)) {
            $json['last_login_ts']              =
                ApiHelper::getJsonHelper()->verifyTypes(
                    $this->lastLoginTs,
                    'anyOf(anyOf(LastLoginTsEnum,LastLoginTs1),null)',
                    [
                        '\FortisAPILib\Models\LastLoginTsEnum::checkValue LastLoginTsEnum'
                    ]
                );
        }
        if (isset($this->createdTs)) {
            $json['created_ts']                 =
                ApiHelper::getJsonHelper()->verifyTypes(
                    $this->createdTs,
                    'anyOf(anyOf(CreatedTsEnum,CreatedTs1),null)',
                    [
                        '\FortisAPILib\Models\CreatedTsEnum::checkValue CreatedTsEnum'
                    ]
                );
        }
        if (isset($this->modifiedTs)) {
            $json['modified_ts']                =
                ApiHelper::getJsonHelper()->verifyTypes(
                    $this->modifiedTs,
                    'anyOf(anyOf(ModifiedTsEnum,ModifiedTs1),null)',
                    [
                        '\FortisAPILib\Models\ModifiedTsEnum::checkValue ModifiedTsEnum'
                    ]
                );
        }
        if (isset($this->createdUserId)) {
            $json['created_user_id']            = $this->createdUserId;
        }
        if (isset($this->termsAcceptedTs)) {
            $json['terms_accepted_ts']          =
                ApiHelper::getJsonHelper()->verifyTypes(
                    $this->termsAcceptedTs,
                    'anyOf(anyOf(TermsAcceptedTsEnum,TermsAcceptedTs1),null)',
                    [
                        '\FortisAPILib\Models\TermsAcceptedTsEnum::checkValue TermsAcceptedTsEnum'
                    ]
                );
        }
        if (isset($this->termsAgreeIp)) {
            $json['terms_agree_ip']             = $this->termsAgreeIp;
        }
        if (isset($this->currentDateTime)) {
            $json['current_date_time']          = $this->currentDateTime;
        }
        if (isset($this->locations)) {
            $json['locations']                  = $this->locations;
        }
        if (isset($this->primaryLocation)) {
            $json['primary_location']           = $this->primaryLocation;
        }
        if (isset($this->receivedEmails)) {
            $json['received_emails']            = $this->receivedEmails;
        }
        if (isset($this->contact)) {
            $json['contact']                    = $this->contact;
        }
        if (isset($this->isDeletable)) {
            $json['isDeletable']                = $this->isDeletable;
        }
        if (isset($this->activeNotificationAlerts)) {
            $json['active_notification_alerts'] = $this->activeNotificationAlerts;
        }
        if (isset($this->locationUsers)) {
            $json['location_users']             = $this->locationUsers;
        }
        if (isset($this->authRoles)) {
            $json['auth_roles']                 = $this->authRoles;
        }
        if (isset($this->changelogs)) {
            $json['changelogs']                 = $this->changelogs;
        }
        if (isset($this->resources)) {
            $json['resources']                  = $this->resources;
        }
        if (isset($this->domain)) {
            $json['domain']                     = $this->domain;
        }
        if (isset($this->createdUser)) {
            $json['created_user']               = $this->createdUser;
        }
        if (isset($this->locationMarketplaces)) {
            $json['location_marketplaces']      = $this->locationMarketplaces;
        }
        if (isset($this->emailBlacklist)) {
            $json['email_blacklist']            = $this->emailBlacklist;
        }
        if (isset($this->helppage)) {
            $json['helppage']                   = $this->helppage;
        }
        $json = array_merge($json, $this->additionalProperties);

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
