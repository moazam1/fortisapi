<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models;

use FortisAPILib\ApiHelper;
use stdClass;

class LastLoginTs1 implements \JsonSerializable
{
    /**
     * @var \DateTime|null|float
     */
    private $lte;

    /**
     * @var \DateTime|null|float
     */
    private $gte;

    /**
     * Returns Lte.
     *
     * @return \DateTime|null|float
     */
    public function getLte()
    {
        return $this->lte;
    }

    /**
     * Sets Lte.
     *
     * @maps $lte
     * @mapsBy anyOf(anyOf(DateTime,float),null)
     * @factory \FortisAPILib\Utils\DateTimeHelper::fromSimpleDate DateTime
     *
     * @param \DateTime|null|float $lte
     */
    public function setLte($lte): void
    {
        $this->lte = $lte;
    }

    /**
     * Returns Gte.
     *
     * @return \DateTime|null|float
     */
    public function getGte()
    {
        return $this->gte;
    }

    /**
     * Sets Gte.
     *
     * @maps $gte
     * @mapsBy anyOf(anyOf(DateTime,float),null)
     * @factory \FortisAPILib\Utils\DateTimeHelper::fromSimpleDate DateTime
     *
     * @param \DateTime|null|float $gte
     */
    public function setGte($gte): void
    {
        $this->gte = $gte;
    }

    private $additionalProperties = [];

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property
     * @param mixed $value Value of property
     */
    public function addAdditionalProperty(string $name, $value)
    {
        $this->additionalProperties[$name] = $value;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->lte)) {
            $json['$lte'] =
                ApiHelper::getJsonHelper()->verifyTypes(
                    $this->lte,
                    'anyOf(anyOf(DateTime,float),null)',
                    [
                        '\FortisAPILib\Utils\DateTimeHelper::toSimpleDate DateTime'
                    ]
                );
        }
        if (isset($this->gte)) {
            $json['$gte'] =
                ApiHelper::getJsonHelper()->verifyTypes(
                    $this->gte,
                    'anyOf(anyOf(DateTime,float),null)',
                    [
                        '\FortisAPILib\Utils\DateTimeHelper::toSimpleDate DateTime'
                    ]
                );
        }
        $json = array_merge($json, $this->additionalProperties);

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
