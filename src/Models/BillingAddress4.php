<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models;

use stdClass;

/**
 * Billing Address Object
 */
class BillingAddress4 implements \JsonSerializable
{
    /**
     * @var array
     */
    private $postalCode = [];

    /**
     * @var array
     */
    private $street = [];

    /**
     * Returns Postal Code.
     * The Zip or 'Postal Code' portion of the address associated with the Credit Card.
     */
    public function getPostalCode(): ?string
    {
        if (count($this->postalCode) == 0) {
            return null;
        }
        return $this->postalCode['value'];
    }

    /**
     * Sets Postal Code.
     * The Zip or 'Postal Code' portion of the address associated with the Credit Card.
     *
     * @maps postal_code
     */
    public function setPostalCode(?string $postalCode): void
    {
        $this->postalCode['value'] = $postalCode;
    }

    /**
     * Unsets Postal Code.
     * The Zip or 'Postal Code' portion of the address associated with the Credit Card.
     */
    public function unsetPostalCode(): void
    {
        $this->postalCode = [];
    }

    /**
     * Returns Street.
     * The Street portion of the address associated with the Credit Card.
     */
    public function getStreet(): ?string
    {
        if (count($this->street) == 0) {
            return null;
        }
        return $this->street['value'];
    }

    /**
     * Sets Street.
     * The Street portion of the address associated with the Credit Card.
     *
     * @maps street
     */
    public function setStreet(?string $street): void
    {
        $this->street['value'] = $street;
    }

    /**
     * Unsets Street.
     * The Street portion of the address associated with the Credit Card.
     */
    public function unsetStreet(): void
    {
        $this->street = [];
    }

    private $additionalProperties = [];

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property
     * @param mixed $value Value of property
     */
    public function addAdditionalProperty(string $name, $value)
    {
        $this->additionalProperties[$name] = $value;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (!empty($this->postalCode)) {
            $json['postal_code'] = $this->postalCode['value'];
        }
        if (!empty($this->street)) {
            $json['street']      = $this->street['value'];
        }
        $json = array_merge($json, $this->additionalProperties);

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
