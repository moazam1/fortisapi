<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models;

use Core\Utils\CoreHelper;
use Exception;
use stdClass;

class Expand85Enum
{
    public const RECEIVED_EMAILS = 'received_emails';

    public const FEATURE_FLAGS = 'feature_flags';

    public const PRIMARY_LOCATION = 'primary_location';

    public const LOCATIONS = 'locations';

    public const CONTACT = 'contact';

    public const ISDELETABLE = 'isDeletable';

    public const ACTIVE_NOTIFICATION_ALERTS = 'active_notification_alerts';

    public const LOCATION_USERS = 'location_users';

    public const AUTH_ROLES = 'auth_roles';

    public const CONTACT_ID = 'contact_id';

    public const CHANGELOGS = 'changelogs';

    public const RESOURCES = 'resources';

    public const DOMAIN = 'domain';

    public const CREATED_USER = 'created_user';

    public const LOCATION_MARKETPLACES = 'location_marketplaces';

    public const EMAIL_BLACKLIST = 'email_blacklist';

    public const HELPPAGE = 'helppage';

    private const _ALL_VALUES = [
        self::RECEIVED_EMAILS,
        self::FEATURE_FLAGS,
        self::PRIMARY_LOCATION,
        self::LOCATIONS,
        self::CONTACT,
        self::ISDELETABLE,
        self::ACTIVE_NOTIFICATION_ALERTS,
        self::LOCATION_USERS,
        self::AUTH_ROLES,
        self::CONTACT_ID,
        self::CHANGELOGS,
        self::RESOURCES,
        self::DOMAIN,
        self::CREATED_USER,
        self::LOCATION_MARKETPLACES,
        self::EMAIL_BLACKLIST,
        self::HELPPAGE
    ];

    /**
     * Ensures that all the given values are present in this Enum.
     *
     * @param array|stdClass|null|string $value Value or a list/map of values to be checked
     *
     * @return array|null|string Input value(s), if all are a part of this Enum
     *
     * @throws Exception Throws exception if any given value is not in this Enum
     */
    public static function checkValue($value)
    {
        $value = json_decode(json_encode($value), true); // converts stdClass into array
        if (CoreHelper::checkValueOrValuesInList($value, self::_ALL_VALUES)) {
            return $value;
        }
        throw new Exception("$value is invalid for Expand85Enum.");
    }
}
