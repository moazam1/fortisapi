<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models;

use stdClass;

/**
 * Use this field to specify paginate your results, by using page size and number. You can use one of
 * the following methods:
 * >/endpoint?page={ "number": 1, "size": 50 }
 * >
 * >/endpoint?page[number]=1&page[size]=50
 * >
 */
class Page implements \JsonSerializable
{
    /**
     * @var int|null
     */
    private $number;

    /**
     * @var int|null
     */
    private $size;

    /**
     * Returns Number.
     * The current page number of the page to be retrieved.
     */
    public function getNumber(): ?int
    {
        return $this->number;
    }

    /**
     * Sets Number.
     * The current page number of the page to be retrieved.
     *
     * @maps number
     */
    public function setNumber(?int $number): void
    {
        $this->number = $number;
    }

    /**
     * Returns Size.
     * The maximum number of records ta will be returned per page.
     */
    public function getSize(): ?int
    {
        return $this->size;
    }

    /**
     * Sets Size.
     * The maximum number of records ta will be returned per page.
     *
     * @maps size
     */
    public function setSize(?int $size): void
    {
        $this->size = $size;
    }

    private $additionalProperties = [];

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property
     * @param mixed $value Value of property
     */
    public function addAdditionalProperty(string $name, $value)
    {
        $this->additionalProperties[$name] = $value;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->number)) {
            $json['number'] = $this->number;
        }
        if (isset($this->size)) {
            $json['size']   = $this->size;
        }
        $json = array_merge($json, $this->additionalProperties);

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
