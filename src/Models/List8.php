<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models;

use stdClass;

class List8 implements \JsonSerializable
{
    /**
     * @var string
     */
    private $signature;

    /**
     * @var string
     */
    private $resource;

    /**
     * @var string
     */
    private $resourceId;

    /**
     * @var string
     */
    private $id;

    /**
     * @var int
     */
    private $createdTs;

    /**
     * @var int
     */
    private $modifiedTs;

    /**
     * @var array
     */
    private $rawSignature = [];

    /**
     * @param string $signature
     * @param string $resource
     * @param string $resourceId
     * @param string $id
     * @param int $createdTs
     * @param int $modifiedTs
     */
    public function __construct(
        string $signature,
        string $resource,
        string $resourceId,
        string $id,
        int $createdTs,
        int $modifiedTs
    ) {
        $this->signature = $signature;
        $this->resource = $resource;
        $this->resourceId = $resourceId;
        $this->id = $id;
        $this->createdTs = $createdTs;
        $this->modifiedTs = $modifiedTs;
    }

    /**
     * Returns Signature.
     * Signature
     */
    public function getSignature(): string
    {
        return $this->signature;
    }

    /**
     * Sets Signature.
     * Signature
     *
     * @required
     * @maps signature
     */
    public function setSignature(string $signature): void
    {
        $this->signature = $signature;
    }

    /**
     * Returns Resource.
     * Resource
     */
    public function getResource(): string
    {
        return $this->resource;
    }

    /**
     * Sets Resource.
     * Resource
     *
     * @required
     * @maps resource
     * @factory \FortisAPILib\Models\ResourceEnum::checkValue
     */
    public function setResource(string $resource): void
    {
        $this->resource = $resource;
    }

    /**
     * Returns Resource Id.
     * Resource ID
     */
    public function getResourceId(): string
    {
        return $this->resourceId;
    }

    /**
     * Sets Resource Id.
     * Resource ID
     *
     * @required
     * @maps resource_id
     */
    public function setResourceId(string $resourceId): void
    {
        $this->resourceId = $resourceId;
    }

    /**
     * Returns Id.
     * Signature ID
     */
    public function getId(): string
    {
        return $this->id;
    }

    /**
     * Sets Id.
     * Signature ID
     *
     * @required
     * @maps id
     */
    public function setId(string $id): void
    {
        $this->id = $id;
    }

    /**
     * Returns Created Ts.
     * Created Time Stamp
     */
    public function getCreatedTs(): int
    {
        return $this->createdTs;
    }

    /**
     * Sets Created Ts.
     * Created Time Stamp
     *
     * @required
     * @maps created_ts
     */
    public function setCreatedTs(int $createdTs): void
    {
        $this->createdTs = $createdTs;
    }

    /**
     * Returns Modified Ts.
     * Modified Time Stamp
     */
    public function getModifiedTs(): int
    {
        return $this->modifiedTs;
    }

    /**
     * Sets Modified Ts.
     * Modified Time Stamp
     *
     * @required
     * @maps modified_ts
     */
    public function setModifiedTs(int $modifiedTs): void
    {
        $this->modifiedTs = $modifiedTs;
    }

    /**
     * Returns Raw Signature.
     * Raw Signature Information on `expand`
     */
    public function getRawSignature(): ?string
    {
        if (count($this->rawSignature) == 0) {
            return null;
        }
        return $this->rawSignature['value'];
    }

    /**
     * Sets Raw Signature.
     * Raw Signature Information on `expand`
     *
     * @maps raw_signature
     */
    public function setRawSignature(?string $rawSignature): void
    {
        $this->rawSignature['value'] = $rawSignature;
    }

    /**
     * Unsets Raw Signature.
     * Raw Signature Information on `expand`
     */
    public function unsetRawSignature(): void
    {
        $this->rawSignature = [];
    }

    private $additionalProperties = [];

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property
     * @param mixed $value Value of property
     */
    public function addAdditionalProperty(string $name, $value)
    {
        $this->additionalProperties[$name] = $value;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['signature']         = $this->signature;
        $json['resource']          = ResourceEnum::checkValue($this->resource);
        $json['resource_id']       = $this->resourceId;
        $json['id']                = $this->id;
        $json['created_ts']        = $this->createdTs;
        $json['modified_ts']       = $this->modifiedTs;
        if (!empty($this->rawSignature)) {
            $json['raw_signature'] = $this->rawSignature['value'];
        }
        $json = array_merge($json, $this->additionalProperties);

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
