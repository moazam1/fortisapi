<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models;

use stdClass;

/**
 * Terminal Cvm Information on `expand`
 */
class TerminalCvm implements \JsonSerializable
{
    /**
     * @var float
     */
    private $terminalManufacturerCode;

    /**
     * @var string
     */
    private $title;

    /**
     * @var array
     */
    private $contactData = [];

    /**
     * @var array
     */
    private $contactlessData = [];

    /**
     * @var string
     */
    private $id;

    /**
     * @var int
     */
    private $createdTs;

    /**
     * @var int
     */
    private $modifiedTs;

    /**
     * @var string
     */
    private $createdUserId;

    /**
     * @var string
     */
    private $modifiedUserId;

    /**
     * @param float $terminalManufacturerCode
     * @param string $title
     * @param string $id
     * @param int $createdTs
     * @param int $modifiedTs
     * @param string $createdUserId
     * @param string $modifiedUserId
     */
    public function __construct(
        float $terminalManufacturerCode,
        string $title,
        string $id,
        int $createdTs,
        int $modifiedTs,
        string $createdUserId,
        string $modifiedUserId
    ) {
        $this->terminalManufacturerCode = $terminalManufacturerCode;
        $this->title = $title;
        $this->id = $id;
        $this->createdTs = $createdTs;
        $this->modifiedTs = $modifiedTs;
        $this->createdUserId = $createdUserId;
        $this->modifiedUserId = $modifiedUserId;
    }

    /**
     * Returns Terminal Manufacturer Code.
     * Terminal Manufacturer Code
     */
    public function getTerminalManufacturerCode(): float
    {
        return $this->terminalManufacturerCode;
    }

    /**
     * Sets Terminal Manufacturer Code.
     * Terminal Manufacturer Code
     *
     * @required
     * @maps terminal_manufacturer_code
     */
    public function setTerminalManufacturerCode(float $terminalManufacturerCode): void
    {
        $this->terminalManufacturerCode = $terminalManufacturerCode;
    }

    /**
     * Returns Title.
     * Title
     */
    public function getTitle(): string
    {
        return $this->title;
    }

    /**
     * Sets Title.
     * Title
     *
     * @required
     * @maps title
     */
    public function setTitle(string $title): void
    {
        $this->title = $title;
    }

    /**
     * Returns Contact Data.
     * Contact Data
     */
    public function getContactData(): ?string
    {
        if (count($this->contactData) == 0) {
            return null;
        }
        return $this->contactData['value'];
    }

    /**
     * Sets Contact Data.
     * Contact Data
     *
     * @maps contact_data
     */
    public function setContactData(?string $contactData): void
    {
        $this->contactData['value'] = $contactData;
    }

    /**
     * Unsets Contact Data.
     * Contact Data
     */
    public function unsetContactData(): void
    {
        $this->contactData = [];
    }

    /**
     * Returns Contactless Data.
     * Contactless Data
     */
    public function getContactlessData(): ?string
    {
        if (count($this->contactlessData) == 0) {
            return null;
        }
        return $this->contactlessData['value'];
    }

    /**
     * Sets Contactless Data.
     * Contactless Data
     *
     * @maps contactless_data
     */
    public function setContactlessData(?string $contactlessData): void
    {
        $this->contactlessData['value'] = $contactlessData;
    }

    /**
     * Unsets Contactless Data.
     * Contactless Data
     */
    public function unsetContactlessData(): void
    {
        $this->contactlessData = [];
    }

    /**
     * Returns Id.
     * Terminal Manufacturer Cvms Id
     */
    public function getId(): string
    {
        return $this->id;
    }

    /**
     * Sets Id.
     * Terminal Manufacturer Cvms Id
     *
     * @required
     * @maps id
     */
    public function setId(string $id): void
    {
        $this->id = $id;
    }

    /**
     * Returns Created Ts.
     * Created Time Stamp
     */
    public function getCreatedTs(): int
    {
        return $this->createdTs;
    }

    /**
     * Sets Created Ts.
     * Created Time Stamp
     *
     * @required
     * @maps created_ts
     */
    public function setCreatedTs(int $createdTs): void
    {
        $this->createdTs = $createdTs;
    }

    /**
     * Returns Modified Ts.
     * Modified Time Stamp
     */
    public function getModifiedTs(): int
    {
        return $this->modifiedTs;
    }

    /**
     * Sets Modified Ts.
     * Modified Time Stamp
     *
     * @required
     * @maps modified_ts
     */
    public function setModifiedTs(int $modifiedTs): void
    {
        $this->modifiedTs = $modifiedTs;
    }

    /**
     * Returns Created User Id.
     * User ID Created the register
     */
    public function getCreatedUserId(): string
    {
        return $this->createdUserId;
    }

    /**
     * Sets Created User Id.
     * User ID Created the register
     *
     * @required
     * @maps created_user_id
     */
    public function setCreatedUserId(string $createdUserId): void
    {
        $this->createdUserId = $createdUserId;
    }

    /**
     * Returns Modified User Id.
     * Last User ID that updated the register
     */
    public function getModifiedUserId(): string
    {
        return $this->modifiedUserId;
    }

    /**
     * Sets Modified User Id.
     * Last User ID that updated the register
     *
     * @required
     * @maps modified_user_id
     */
    public function setModifiedUserId(string $modifiedUserId): void
    {
        $this->modifiedUserId = $modifiedUserId;
    }

    private $additionalProperties = [];

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property
     * @param mixed $value Value of property
     */
    public function addAdditionalProperty(string $name, $value)
    {
        $this->additionalProperties[$name] = $value;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['terminal_manufacturer_code'] = $this->terminalManufacturerCode;
        $json['title']                      = $this->title;
        if (!empty($this->contactData)) {
            $json['contact_data']           = $this->contactData['value'];
        }
        if (!empty($this->contactlessData)) {
            $json['contactless_data']       = $this->contactlessData['value'];
        }
        $json['id']                         = $this->id;
        $json['created_ts']                 = $this->createdTs;
        $json['modified_ts']                = $this->modifiedTs;
        $json['created_user_id']            = $this->createdUserId;
        $json['modified_user_id']           = $this->modifiedUserId;
        $json = array_merge($json, $this->additionalProperties);

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
