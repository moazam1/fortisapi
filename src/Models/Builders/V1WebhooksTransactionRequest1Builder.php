<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models\Builders;

use Core\Utils\CoreHelper;
use FortisAPILib\Models\V1WebhooksTransactionRequest1;

/**
 * Builder for model V1WebhooksTransactionRequest1
 *
 * @see V1WebhooksTransactionRequest1
 */
class V1WebhooksTransactionRequest1Builder
{
    /**
     * @var V1WebhooksTransactionRequest1
     */
    private $instance;

    private function __construct(V1WebhooksTransactionRequest1 $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new v1 webhooks transaction request 1 Builder object.
     */
    public static function init(): self
    {
        return new self(new V1WebhooksTransactionRequest1());
    }

    /**
     * Sets attempt interval field.
     */
    public function attemptInterval(?int $value): self
    {
        $this->instance->setAttemptInterval($value);
        return $this;
    }

    /**
     * Unsets attempt interval field.
     */
    public function unsetAttemptInterval(): self
    {
        $this->instance->unsetAttemptInterval();
        return $this;
    }

    /**
     * Sets basic auth username field.
     */
    public function basicAuthUsername(?string $value): self
    {
        $this->instance->setBasicAuthUsername($value);
        return $this;
    }

    /**
     * Unsets basic auth username field.
     */
    public function unsetBasicAuthUsername(): self
    {
        $this->instance->unsetBasicAuthUsername();
        return $this;
    }

    /**
     * Sets basic auth password field.
     */
    public function basicAuthPassword(?string $value): self
    {
        $this->instance->setBasicAuthPassword($value);
        return $this;
    }

    /**
     * Unsets basic auth password field.
     */
    public function unsetBasicAuthPassword(): self
    {
        $this->instance->unsetBasicAuthPassword();
        return $this;
    }

    /**
     * Sets expands field.
     */
    public function expands(?string $value): self
    {
        $this->instance->setExpands($value);
        return $this;
    }

    /**
     * Unsets expands field.
     */
    public function unsetExpands(): self
    {
        $this->instance->unsetExpands();
        return $this;
    }

    /**
     * Sets format field.
     */
    public function format(?string $value): self
    {
        $this->instance->setFormat($value);
        return $this;
    }

    /**
     * Unsets format field.
     */
    public function unsetFormat(): self
    {
        $this->instance->unsetFormat();
        return $this;
    }

    /**
     * Sets is active field.
     */
    public function isActive(?bool $value): self
    {
        $this->instance->setIsActive($value);
        return $this;
    }

    /**
     * Sets location id field.
     */
    public function locationId(?string $value): self
    {
        $this->instance->setLocationId($value);
        return $this;
    }

    /**
     * Unsets location id field.
     */
    public function unsetLocationId(): self
    {
        $this->instance->unsetLocationId();
        return $this;
    }

    /**
     * Sets location api id field.
     */
    public function locationApiId(?string $value): self
    {
        $this->instance->setLocationApiId($value);
        return $this;
    }

    /**
     * Unsets location api id field.
     */
    public function unsetLocationApiId(): self
    {
        $this->instance->unsetLocationApiId();
        return $this;
    }

    /**
     * Sets on create field.
     */
    public function onCreate(?bool $value): self
    {
        $this->instance->setOnCreate($value);
        return $this;
    }

    /**
     * Sets on update field.
     */
    public function onUpdate(?bool $value): self
    {
        $this->instance->setOnUpdate($value);
        return $this;
    }

    /**
     * Sets on delete field.
     */
    public function onDelete(?bool $value): self
    {
        $this->instance->setOnDelete($value);
        return $this;
    }

    /**
     * Sets postback config id field.
     */
    public function postbackConfigId(?string $value): self
    {
        $this->instance->setPostbackConfigId($value);
        return $this;
    }

    /**
     * Unsets postback config id field.
     */
    public function unsetPostbackConfigId(): self
    {
        $this->instance->unsetPostbackConfigId();
        return $this;
    }

    /**
     * Sets product transaction id field.
     */
    public function productTransactionId(?string $value): self
    {
        $this->instance->setProductTransactionId($value);
        return $this;
    }

    /**
     * Unsets product transaction id field.
     */
    public function unsetProductTransactionId(): self
    {
        $this->instance->unsetProductTransactionId();
        return $this;
    }

    /**
     * Sets resource field.
     */
    public function resource(?string $value): self
    {
        $this->instance->setResource($value);
        return $this;
    }

    /**
     * Unsets resource field.
     */
    public function unsetResource(): self
    {
        $this->instance->unsetResource();
        return $this;
    }

    /**
     * Sets number of attempts field.
     */
    public function numberOfAttempts(?int $value): self
    {
        $this->instance->setNumberOfAttempts($value);
        return $this;
    }

    /**
     * Unsets number of attempts field.
     */
    public function unsetNumberOfAttempts(): self
    {
        $this->instance->unsetNumberOfAttempts();
        return $this;
    }

    /**
     * Sets url field.
     */
    public function url(?string $value): self
    {
        $this->instance->setUrl($value);
        return $this;
    }

    /**
     * Unsets url field.
     */
    public function unsetUrl(): self
    {
        $this->instance->unsetUrl();
        return $this;
    }

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property
     * @param mixed $value Value of property
     */
    public function additionalProperty(string $name, $value): self
    {
        $this->instance->addAdditionalProperty($name, $value);
        return $this;
    }

    /**
     * Initializes a new v1 webhooks transaction request 1 object.
     */
    public function build(): V1WebhooksTransactionRequest1
    {
        return CoreHelper::clone($this->instance);
    }
}
