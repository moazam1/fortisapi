<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models\Builders;

use Core\Utils\CoreHelper;
use FortisAPILib\Models\V1WebhooksBatchRequest;

/**
 * Builder for model V1WebhooksBatchRequest
 *
 * @see V1WebhooksBatchRequest
 */
class V1WebhooksBatchRequestBuilder
{
    /**
     * @var V1WebhooksBatchRequest
     */
    private $instance;

    private function __construct(V1WebhooksBatchRequest $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new v1 webhooks batch request Builder object.
     */
    public static function init(
        bool $isActive,
        string $locationId,
        bool $onCreate,
        bool $onUpdate,
        bool $onDelete,
        string $productTransactionId,
        int $numberOfAttempts,
        string $url
    ): self {
        return new self(new V1WebhooksBatchRequest(
            $isActive,
            $locationId,
            $onCreate,
            $onUpdate,
            $onDelete,
            $productTransactionId,
            $numberOfAttempts,
            $url
        ));
    }

    /**
     * Sets attempt interval field.
     */
    public function attemptInterval(?int $value): self
    {
        $this->instance->setAttemptInterval($value);
        return $this;
    }

    /**
     * Unsets attempt interval field.
     */
    public function unsetAttemptInterval(): self
    {
        $this->instance->unsetAttemptInterval();
        return $this;
    }

    /**
     * Sets basic auth username field.
     */
    public function basicAuthUsername(?string $value): self
    {
        $this->instance->setBasicAuthUsername($value);
        return $this;
    }

    /**
     * Unsets basic auth username field.
     */
    public function unsetBasicAuthUsername(): self
    {
        $this->instance->unsetBasicAuthUsername();
        return $this;
    }

    /**
     * Sets basic auth password field.
     */
    public function basicAuthPassword(?string $value): self
    {
        $this->instance->setBasicAuthPassword($value);
        return $this;
    }

    /**
     * Unsets basic auth password field.
     */
    public function unsetBasicAuthPassword(): self
    {
        $this->instance->unsetBasicAuthPassword();
        return $this;
    }

    /**
     * Sets expands field.
     */
    public function expands(?string $value): self
    {
        $this->instance->setExpands($value);
        return $this;
    }

    /**
     * Unsets expands field.
     */
    public function unsetExpands(): self
    {
        $this->instance->unsetExpands();
        return $this;
    }

    /**
     * Sets format field.
     */
    public function format(?string $value): self
    {
        $this->instance->setFormat($value);
        return $this;
    }

    /**
     * Unsets format field.
     */
    public function unsetFormat(): self
    {
        $this->instance->unsetFormat();
        return $this;
    }

    /**
     * Sets location api id field.
     */
    public function locationApiId(?string $value): self
    {
        $this->instance->setLocationApiId($value);
        return $this;
    }

    /**
     * Unsets location api id field.
     */
    public function unsetLocationApiId(): self
    {
        $this->instance->unsetLocationApiId();
        return $this;
    }

    /**
     * Sets postback config id field.
     */
    public function postbackConfigId(?string $value): self
    {
        $this->instance->setPostbackConfigId($value);
        return $this;
    }

    /**
     * Unsets postback config id field.
     */
    public function unsetPostbackConfigId(): self
    {
        $this->instance->unsetPostbackConfigId();
        return $this;
    }

    /**
     * Sets resource field.
     */
    public function resource(?string $value): self
    {
        $this->instance->setResource($value);
        return $this;
    }

    /**
     * Unsets resource field.
     */
    public function unsetResource(): self
    {
        $this->instance->unsetResource();
        return $this;
    }

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property
     * @param mixed $value Value of property
     */
    public function additionalProperty(string $name, $value): self
    {
        $this->instance->addAdditionalProperty($name, $value);
        return $this;
    }

    /**
     * Initializes a new v1 webhooks batch request object.
     */
    public function build(): V1WebhooksBatchRequest
    {
        return CoreHelper::clone($this->instance);
    }
}
