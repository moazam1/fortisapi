<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models\Builders;

use Core\Utils\CoreHelper;
use FortisAPILib\Models\TransactionBatch;

/**
 * Builder for model TransactionBatch
 *
 * @see TransactionBatch
 */
class TransactionBatchBuilder
{
    /**
     * @var TransactionBatch
     */
    private $instance;

    private function __construct(TransactionBatch $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new transaction batch Builder object.
     */
    public static function init(string $id, int $createdTs, int $processingStatusId): self
    {
        return new self(new TransactionBatch($id, $createdTs, $processingStatusId));
    }

    /**
     * Sets product transaction id field.
     */
    public function productTransactionId(?string $value): self
    {
        $this->instance->setProductTransactionId($value);
        return $this;
    }

    /**
     * Unsets product transaction id field.
     */
    public function unsetProductTransactionId(): self
    {
        $this->instance->unsetProductTransactionId();
        return $this;
    }

    /**
     * Sets batch num field.
     */
    public function batchNum(?int $value): self
    {
        $this->instance->setBatchNum($value);
        return $this;
    }

    /**
     * Unsets batch num field.
     */
    public function unsetBatchNum(): self
    {
        $this->instance->unsetBatchNum();
        return $this;
    }

    /**
     * Sets is open field.
     */
    public function isOpen(?float $value): self
    {
        $this->instance->setIsOpen($value);
        return $this;
    }

    /**
     * Unsets is open field.
     */
    public function unsetIsOpen(): self
    {
        $this->instance->unsetIsOpen();
        return $this;
    }

    /**
     * Sets settlement file name field.
     */
    public function settlementFileName(?string $value): self
    {
        $this->instance->setSettlementFileName($value);
        return $this;
    }

    /**
     * Unsets settlement file name field.
     */
    public function unsetSettlementFileName(): self
    {
        $this->instance->unsetSettlementFileName();
        return $this;
    }

    /**
     * Sets batch close ts field.
     */
    public function batchCloseTs(?float $value): self
    {
        $this->instance->setBatchCloseTs($value);
        return $this;
    }

    /**
     * Unsets batch close ts field.
     */
    public function unsetBatchCloseTs(): self
    {
        $this->instance->unsetBatchCloseTs();
        return $this;
    }

    /**
     * Sets batch close detail field.
     */
    public function batchCloseDetail(?string $value): self
    {
        $this->instance->setBatchCloseDetail($value);
        return $this;
    }

    /**
     * Unsets batch close detail field.
     */
    public function unsetBatchCloseDetail(): self
    {
        $this->instance->unsetBatchCloseDetail();
        return $this;
    }

    /**
     * Sets total sale amount field.
     */
    public function totalSaleAmount(?int $value): self
    {
        $this->instance->setTotalSaleAmount($value);
        return $this;
    }

    /**
     * Unsets total sale amount field.
     */
    public function unsetTotalSaleAmount(): self
    {
        $this->instance->unsetTotalSaleAmount();
        return $this;
    }

    /**
     * Sets total sale count field.
     */
    public function totalSaleCount(?int $value): self
    {
        $this->instance->setTotalSaleCount($value);
        return $this;
    }

    /**
     * Unsets total sale count field.
     */
    public function unsetTotalSaleCount(): self
    {
        $this->instance->unsetTotalSaleCount();
        return $this;
    }

    /**
     * Sets total refund amount field.
     */
    public function totalRefundAmount(?int $value): self
    {
        $this->instance->setTotalRefundAmount($value);
        return $this;
    }

    /**
     * Unsets total refund amount field.
     */
    public function unsetTotalRefundAmount(): self
    {
        $this->instance->unsetTotalRefundAmount();
        return $this;
    }

    /**
     * Sets total refund count field.
     */
    public function totalRefundCount(?int $value): self
    {
        $this->instance->setTotalRefundCount($value);
        return $this;
    }

    /**
     * Unsets total refund count field.
     */
    public function unsetTotalRefundCount(): self
    {
        $this->instance->unsetTotalRefundCount();
        return $this;
    }

    /**
     * Sets total void amount field.
     */
    public function totalVoidAmount(?int $value): self
    {
        $this->instance->setTotalVoidAmount($value);
        return $this;
    }

    /**
     * Unsets total void amount field.
     */
    public function unsetTotalVoidAmount(): self
    {
        $this->instance->unsetTotalVoidAmount();
        return $this;
    }

    /**
     * Sets total void count field.
     */
    public function totalVoidCount(?int $value): self
    {
        $this->instance->setTotalVoidCount($value);
        return $this;
    }

    /**
     * Unsets total void count field.
     */
    public function unsetTotalVoidCount(): self
    {
        $this->instance->unsetTotalVoidCount();
        return $this;
    }

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property
     * @param mixed $value Value of property
     */
    public function additionalProperty(string $name, $value): self
    {
        $this->instance->addAdditionalProperty($name, $value);
        return $this;
    }

    /**
     * Initializes a new transaction batch object.
     */
    public function build(): TransactionBatch
    {
        return CoreHelper::clone($this->instance);
    }
}
