<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models\Builders;

use Core\Utils\CoreHelper;
use FortisAPILib\Models\CreatedUser;
use FortisAPILib\Models\List2;
use FortisAPILib\Models\Location;
use FortisAPILib\Models\ReasonCode;
use FortisAPILib\Models\Signature;
use FortisAPILib\Models\Terminal;

/**
 * Builder for model List2
 *
 * @see List2
 */
class List2Builder
{
    /**
     * @var List2
     */
    private $instance;

    private function __construct(List2 $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new list 2 Builder object.
     */
    public static function init(
        string $locationId,
        string $terminalId,
        bool $requireSignature,
        string $termsConditions,
        string $id,
        int $reasonCodeId,
        int $createdTs,
        int $modifiedTs,
        string $createdUserId
    ): self {
        return new self(new List2(
            $locationId,
            $terminalId,
            $requireSignature,
            $termsConditions,
            $id,
            $reasonCodeId,
            $createdTs,
            $modifiedTs,
            $createdUserId
        ));
    }

    /**
     * Sets device term api id field.
     */
    public function deviceTermApiId(?string $value): self
    {
        $this->instance->setDeviceTermApiId($value);
        return $this;
    }

    /**
     * Unsets device term api id field.
     */
    public function unsetDeviceTermApiId(): self
    {
        $this->instance->unsetDeviceTermApiId();
        return $this;
    }

    /**
     * Sets signature field.
     */
    public function signature(?Signature $value): self
    {
        $this->instance->setSignature($value);
        return $this;
    }

    /**
     * Sets created user field.
     */
    public function createdUser(?CreatedUser $value): self
    {
        $this->instance->setCreatedUser($value);
        return $this;
    }

    /**
     * Sets location field.
     */
    public function location(?Location $value): self
    {
        $this->instance->setLocation($value);
        return $this;
    }

    /**
     * Sets terminal field.
     */
    public function terminal(?Terminal $value): self
    {
        $this->instance->setTerminal($value);
        return $this;
    }

    /**
     * Sets changelogs field.
     */
    public function changelogs(?array $value): self
    {
        $this->instance->setChangelogs($value);
        return $this;
    }

    /**
     * Sets reason code field.
     */
    public function reasonCode(?ReasonCode $value): self
    {
        $this->instance->setReasonCode($value);
        return $this;
    }

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property
     * @param mixed $value Value of property
     */
    public function additionalProperty(string $name, $value): self
    {
        $this->instance->addAdditionalProperty($name, $value);
        return $this;
    }

    /**
     * Initializes a new list 2 object.
     */
    public function build(): List2
    {
        return CoreHelper::clone($this->instance);
    }
}
