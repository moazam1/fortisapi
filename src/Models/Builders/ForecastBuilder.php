<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models\Builders;

use Core\Utils\CoreHelper;
use FortisAPILib\Models\Forecast;

/**
 * Builder for model Forecast
 *
 * @see Forecast
 */
class ForecastBuilder
{
    /**
     * @var Forecast
     */
    private $instance;

    private function __construct(Forecast $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new forecast Builder object.
     */
    public static function init(string $recurringId): self
    {
        return new self(new Forecast($recurringId));
    }

    /**
     * Sets id field.
     */
    public function id(?string $value): self
    {
        $this->instance->setId($value);
        return $this;
    }

    /**
     * Sets recurring type field.
     */
    public function recurringType(?float $value): self
    {
        $this->instance->setRecurringType($value);
        return $this;
    }

    /**
     * Unsets recurring type field.
     */
    public function unsetRecurringType(): self
    {
        $this->instance->unsetRecurringType();
        return $this;
    }

    /**
     * Sets amount field.
     */
    public function amount(?float $value): self
    {
        $this->instance->setAmount($value);
        return $this;
    }

    /**
     * Unsets amount field.
     */
    public function unsetAmount(): self
    {
        $this->instance->unsetAmount();
        return $this;
    }

    /**
     * Sets month field.
     */
    public function month(?string $value): self
    {
        $this->instance->setMonth($value);
        return $this;
    }

    /**
     * Unsets month field.
     */
    public function unsetMonth(): self
    {
        $this->instance->unsetMonth();
        return $this;
    }

    /**
     * Sets created ts field.
     */
    public function createdTs(?int $value): self
    {
        $this->instance->setCreatedTs($value);
        return $this;
    }

    /**
     * Unsets created ts field.
     */
    public function unsetCreatedTs(): self
    {
        $this->instance->unsetCreatedTs();
        return $this;
    }

    /**
     * Sets modified ts field.
     */
    public function modifiedTs(?int $value): self
    {
        $this->instance->setModifiedTs($value);
        return $this;
    }

    /**
     * Unsets modified ts field.
     */
    public function unsetModifiedTs(): self
    {
        $this->instance->unsetModifiedTs();
        return $this;
    }

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property
     * @param mixed $value Value of property
     */
    public function additionalProperty(string $name, $value): self
    {
        $this->instance->addAdditionalProperty($name, $value);
        return $this;
    }

    /**
     * Initializes a new forecast object.
     */
    public function build(): Forecast
    {
        return CoreHelper::clone($this->instance);
    }
}
