<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models\Builders;

use Core\Utils\CoreHelper;
use FortisAPILib\Models\Sort31;

/**
 * Builder for model Sort31
 *
 * @see Sort31
 */
class Sort31Builder
{
    /**
     * @var Sort31
     */
    private $instance;

    private function __construct(Sort31 $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new sort 31 Builder object.
     */
    public static function init(): self
    {
        return new self(new Sort31());
    }

    /**
     * Sets account number field.
     */
    public function accountNumber(?array $value): self
    {
        $this->instance->setAccountNumber($value);
        return $this;
    }

    /**
     * Sets branding domain url field.
     */
    public function brandingDomainUrl(?array $value): self
    {
        $this->instance->setBrandingDomainUrl($value);
        return $this;
    }

    /**
     * Sets cell phone field.
     */
    public function cellPhone(?array $value): self
    {
        $this->instance->setCellPhone($value);
        return $this;
    }

    /**
     * Sets company name field.
     */
    public function companyName(?array $value): self
    {
        $this->instance->setCompanyName($value);
        return $this;
    }

    /**
     * Sets contact id field.
     */
    public function contactId(?array $value): self
    {
        $this->instance->setContactId($value);
        return $this;
    }

    /**
     * Sets date of birth field.
     */
    public function dateOfBirth(?array $value): self
    {
        $this->instance->setDateOfBirth($value);
        return $this;
    }

    /**
     * Sets domain id field.
     */
    public function domainId(?array $value): self
    {
        $this->instance->setDomainId($value);
        return $this;
    }

    /**
     * Sets email field.
     */
    public function email(?array $value): self
    {
        $this->instance->setEmail($value);
        return $this;
    }

    /**
     * Sets email trx receipt field.
     */
    public function emailTrxReceipt(?array $value): self
    {
        $this->instance->setEmailTrxReceipt($value);
        return $this;
    }

    /**
     * Sets home phone field.
     */
    public function homePhone(?array $value): self
    {
        $this->instance->setHomePhone($value);
        return $this;
    }

    /**
     * Sets first name field.
     */
    public function firstName(?array $value): self
    {
        $this->instance->setFirstName($value);
        return $this;
    }

    /**
     * Sets last name field.
     */
    public function lastName(?array $value): self
    {
        $this->instance->setLastName($value);
        return $this;
    }

    /**
     * Sets locale field.
     */
    public function locale(?array $value): self
    {
        $this->instance->setLocale($value);
        return $this;
    }

    /**
     * Sets office phone field.
     */
    public function officePhone(?array $value): self
    {
        $this->instance->setOfficePhone($value);
        return $this;
    }

    /**
     * Sets office ext phone field.
     */
    public function officeExtPhone(?array $value): self
    {
        $this->instance->setOfficeExtPhone($value);
        return $this;
    }

    /**
     * Sets primary location id field.
     */
    public function primaryLocationId(?array $value): self
    {
        $this->instance->setPrimaryLocationId($value);
        return $this;
    }

    /**
     * Sets requires new password field.
     */
    public function requiresNewPassword(?array $value): self
    {
        $this->instance->setRequiresNewPassword($value);
        return $this;
    }

    /**
     * Sets terms condition code field.
     */
    public function termsConditionCode(?array $value): self
    {
        $this->instance->setTermsConditionCode($value);
        return $this;
    }

    /**
     * Sets tz field.
     */
    public function tz(?array $value): self
    {
        $this->instance->setTz($value);
        return $this;
    }

    /**
     * Sets ui prefs field.
     */
    public function uiPrefs(?array $value): self
    {
        $this->instance->setUiPrefs($value);
        return $this;
    }

    /**
     * Sets username field.
     */
    public function username(?array $value): self
    {
        $this->instance->setUsername($value);
        return $this;
    }

    /**
     * Sets user api key field.
     */
    public function userApiKey(?array $value): self
    {
        $this->instance->setUserApiKey($value);
        return $this;
    }

    /**
     * Sets user hash key field.
     */
    public function userHashKey(?array $value): self
    {
        $this->instance->setUserHashKey($value);
        return $this;
    }

    /**
     * Sets user type code field.
     */
    public function userTypeCode(?array $value): self
    {
        $this->instance->setUserTypeCode($value);
        return $this;
    }

    /**
     * Sets password field.
     */
    public function password(?array $value): self
    {
        $this->instance->setPassword($value);
        return $this;
    }

    /**
     * Sets zip field.
     */
    public function zip(?array $value): self
    {
        $this->instance->setZip($value);
        return $this;
    }

    /**
     * Sets location id field.
     */
    public function locationId(?array $value): self
    {
        $this->instance->setLocationId($value);
        return $this;
    }

    /**
     * Sets contact api id field.
     */
    public function contactApiId(?array $value): self
    {
        $this->instance->setContactApiId($value);
        return $this;
    }

    /**
     * Sets primary location api id field.
     */
    public function primaryLocationApiId(?array $value): self
    {
        $this->instance->setPrimaryLocationApiId($value);
        return $this;
    }

    /**
     * Sets status id field.
     */
    public function statusId(?array $value): self
    {
        $this->instance->setStatusId($value);
        return $this;
    }

    /**
     * Sets api only field.
     */
    public function apiOnly(?array $value): self
    {
        $this->instance->setApiOnly($value);
        return $this;
    }

    /**
     * Sets is invitation field.
     */
    public function isInvitation(?array $value): self
    {
        $this->instance->setIsInvitation($value);
        return $this;
    }

    /**
     * Sets address field.
     */
    public function address(?array $value): self
    {
        $this->instance->setAddress($value);
        return $this;
    }

    /**
     * Sets id field.
     */
    public function id(?array $value): self
    {
        $this->instance->setId($value);
        return $this;
    }

    /**
     * Sets status field.
     */
    public function status(?array $value): self
    {
        $this->instance->setStatus($value);
        return $this;
    }

    /**
     * Sets login attempts field.
     */
    public function loginAttempts(?array $value): self
    {
        $this->instance->setLoginAttempts($value);
        return $this;
    }

    /**
     * Sets last login ts field.
     */
    public function lastLoginTs(?array $value): self
    {
        $this->instance->setLastLoginTs($value);
        return $this;
    }

    /**
     * Sets created ts field.
     */
    public function createdTs(?array $value): self
    {
        $this->instance->setCreatedTs($value);
        return $this;
    }

    /**
     * Sets modified ts field.
     */
    public function modifiedTs(?array $value): self
    {
        $this->instance->setModifiedTs($value);
        return $this;
    }

    /**
     * Sets created user id field.
     */
    public function createdUserId(?array $value): self
    {
        $this->instance->setCreatedUserId($value);
        return $this;
    }

    /**
     * Sets terms accepted ts field.
     */
    public function termsAcceptedTs(?array $value): self
    {
        $this->instance->setTermsAcceptedTs($value);
        return $this;
    }

    /**
     * Sets terms agree ip field.
     */
    public function termsAgreeIp(?array $value): self
    {
        $this->instance->setTermsAgreeIp($value);
        return $this;
    }

    /**
     * Sets current date time field.
     */
    public function currentDateTime(?array $value): self
    {
        $this->instance->setCurrentDateTime($value);
        return $this;
    }

    /**
     * Sets locations field.
     */
    public function locations(?array $value): self
    {
        $this->instance->setLocations($value);
        return $this;
    }

    /**
     * Sets primary location field.
     */
    public function primaryLocation(?array $value): self
    {
        $this->instance->setPrimaryLocation($value);
        return $this;
    }

    /**
     * Sets received emails field.
     */
    public function receivedEmails(?array $value): self
    {
        $this->instance->setReceivedEmails($value);
        return $this;
    }

    /**
     * Sets contact field.
     */
    public function contact(?array $value): self
    {
        $this->instance->setContact($value);
        return $this;
    }

    /**
     * Sets is deletable field.
     */
    public function isDeletable(?array $value): self
    {
        $this->instance->setIsDeletable($value);
        return $this;
    }

    /**
     * Sets active notification alerts field.
     */
    public function activeNotificationAlerts(?array $value): self
    {
        $this->instance->setActiveNotificationAlerts($value);
        return $this;
    }

    /**
     * Sets location users field.
     */
    public function locationUsers(?array $value): self
    {
        $this->instance->setLocationUsers($value);
        return $this;
    }

    /**
     * Sets auth roles field.
     */
    public function authRoles(?array $value): self
    {
        $this->instance->setAuthRoles($value);
        return $this;
    }

    /**
     * Sets changelogs field.
     */
    public function changelogs(?array $value): self
    {
        $this->instance->setChangelogs($value);
        return $this;
    }

    /**
     * Sets resources field.
     */
    public function resources(?array $value): self
    {
        $this->instance->setResources($value);
        return $this;
    }

    /**
     * Sets domain field.
     */
    public function domain(?array $value): self
    {
        $this->instance->setDomain($value);
        return $this;
    }

    /**
     * Sets created user field.
     */
    public function createdUser(?array $value): self
    {
        $this->instance->setCreatedUser($value);
        return $this;
    }

    /**
     * Sets location marketplaces field.
     */
    public function locationMarketplaces(?array $value): self
    {
        $this->instance->setLocationMarketplaces($value);
        return $this;
    }

    /**
     * Sets email blacklist field.
     */
    public function emailBlacklist(?array $value): self
    {
        $this->instance->setEmailBlacklist($value);
        return $this;
    }

    /**
     * Sets helppage field.
     */
    public function helppage(?array $value): self
    {
        $this->instance->setHelppage($value);
        return $this;
    }

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property
     * @param mixed $value Value of property
     */
    public function additionalProperty(string $name, $value): self
    {
        $this->instance->addAdditionalProperty($name, $value);
        return $this;
    }

    /**
     * Initializes a new sort 31 object.
     */
    public function build(): Sort31
    {
        return CoreHelper::clone($this->instance);
    }
}
