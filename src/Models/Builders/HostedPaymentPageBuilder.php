<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models\Builders;

use Core\Utils\CoreHelper;
use FortisAPILib\Models\FieldConfiguration;
use FortisAPILib\Models\HostedPaymentPage;

/**
 * Builder for model HostedPaymentPage
 *
 * @see HostedPaymentPage
 */
class HostedPaymentPageBuilder
{
    /**
     * @var HostedPaymentPage
     */
    private $instance;

    private function __construct(HostedPaymentPage $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new hosted payment page Builder object.
     */
    public static function init(
        string $productTransactionId,
        string $title,
        FieldConfiguration $fieldConfiguration,
        string $id,
        int $createdTs,
        int $modifiedTs
    ): self {
        return new self(
            new HostedPaymentPage($productTransactionId, $title, $fieldConfiguration, $id, $createdTs, $modifiedTs)
        );
    }

    /**
     * Sets user id field.
     */
    public function userId(?string $value): self
    {
        $this->instance->setUserId($value);
        return $this;
    }

    /**
     * Unsets user id field.
     */
    public function unsetUserId(): self
    {
        $this->instance->unsetUserId();
        return $this;
    }

    /**
     * Sets location id field.
     */
    public function locationId(?string $value): self
    {
        $this->instance->setLocationId($value);
        return $this;
    }

    /**
     * Unsets location id field.
     */
    public function unsetLocationId(): self
    {
        $this->instance->unsetLocationId();
        return $this;
    }

    /**
     * Sets location api id field.
     */
    public function locationApiId(?string $value): self
    {
        $this->instance->setLocationApiId($value);
        return $this;
    }

    /**
     * Unsets location api id field.
     */
    public function unsetLocationApiId(): self
    {
        $this->instance->unsetLocationApiId();
        return $this;
    }

    /**
     * Sets redirect url delay field.
     */
    public function redirectUrlDelay(?float $value): self
    {
        $this->instance->setRedirectUrlDelay($value);
        return $this;
    }

    /**
     * Unsets redirect url delay field.
     */
    public function unsetRedirectUrlDelay(): self
    {
        $this->instance->unsetRedirectUrlDelay();
        return $this;
    }

    /**
     * Sets min payment amount field.
     */
    public function minPaymentAmount(?int $value): self
    {
        $this->instance->setMinPaymentAmount($value);
        return $this;
    }

    /**
     * Unsets min payment amount field.
     */
    public function unsetMinPaymentAmount(): self
    {
        $this->instance->unsetMinPaymentAmount();
        return $this;
    }

    /**
     * Sets max payment amount field.
     */
    public function maxPaymentAmount(?int $value): self
    {
        $this->instance->setMaxPaymentAmount($value);
        return $this;
    }

    /**
     * Unsets max payment amount field.
     */
    public function unsetMaxPaymentAmount(): self
    {
        $this->instance->unsetMaxPaymentAmount();
        return $this;
    }

    /**
     * Sets redirect url on approve field.
     */
    public function redirectUrlOnApprove(?string $value): self
    {
        $this->instance->setRedirectUrlOnApprove($value);
        return $this;
    }

    /**
     * Unsets redirect url on approve field.
     */
    public function unsetRedirectUrlOnApprove(): self
    {
        $this->instance->unsetRedirectUrlOnApprove();
        return $this;
    }

    /**
     * Sets redirect url on decline field.
     */
    public function redirectUrlOnDecline(?string $value): self
    {
        $this->instance->setRedirectUrlOnDecline($value);
        return $this;
    }

    /**
     * Unsets redirect url on decline field.
     */
    public function unsetRedirectUrlOnDecline(): self
    {
        $this->instance->unsetRedirectUrlOnDecline();
        return $this;
    }

    /**
     * Sets encryption key field.
     */
    public function encryptionKey(?string $value): self
    {
        $this->instance->setEncryptionKey($value);
        return $this;
    }

    /**
     * Unsets encryption key field.
     */
    public function unsetEncryptionKey(): self
    {
        $this->instance->unsetEncryptionKey();
        return $this;
    }

    /**
     * Sets stylesheet url field.
     */
    public function stylesheetUrl(?string $value): self
    {
        $this->instance->setStylesheetUrl($value);
        return $this;
    }

    /**
     * Unsets stylesheet url field.
     */
    public function unsetStylesheetUrl(): self
    {
        $this->instance->unsetStylesheetUrl();
        return $this;
    }

    /**
     * Sets parent send message field.
     */
    public function parentSendMessage(?bool $value): self
    {
        $this->instance->setParentSendMessage($value);
        return $this;
    }

    /**
     * Sets hide optional fields field.
     */
    public function hideOptionalFields(?bool $value): self
    {
        $this->instance->setHideOptionalFields($value);
        return $this;
    }

    /**
     * Sets created user id field.
     */
    public function createdUserId(?string $value): self
    {
        $this->instance->setCreatedUserId($value);
        return $this;
    }

    /**
     * Unsets created user id field.
     */
    public function unsetCreatedUserId(): self
    {
        $this->instance->unsetCreatedUserId();
        return $this;
    }

    /**
     * Sets modified user id field.
     */
    public function modifiedUserId(?string $value): self
    {
        $this->instance->setModifiedUserId($value);
        return $this;
    }

    /**
     * Unsets modified user id field.
     */
    public function unsetModifiedUserId(): self
    {
        $this->instance->unsetModifiedUserId();
        return $this;
    }

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property
     * @param mixed $value Value of property
     */
    public function additionalProperty(string $name, $value): self
    {
        $this->instance->addAdditionalProperty($name, $value);
        return $this;
    }

    /**
     * Initializes a new hosted payment page object.
     */
    public function build(): HostedPaymentPage
    {
        return CoreHelper::clone($this->instance);
    }
}
