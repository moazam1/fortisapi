<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models\Builders;

use Core\Utils\CoreHelper;
use FortisAPILib\Models\TagTransaction;

/**
 * Builder for model TagTransaction
 *
 * @see TagTransaction
 */
class TagTransactionBuilder
{
    /**
     * @var TagTransaction
     */
    private $instance;

    private function __construct(TagTransaction $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new tag transaction Builder object.
     */
    public static function init(string $tagId, string $transactionId): self
    {
        return new self(new TagTransaction($tagId, $transactionId));
    }

    /**
     * Sets id field.
     */
    public function id(?string $value): self
    {
        $this->instance->setId($value);
        return $this;
    }

    /**
     * Sets payment method field.
     */
    public function paymentMethod(?string $value): self
    {
        $this->instance->setPaymentMethod($value);
        return $this;
    }

    /**
     * Unsets payment method field.
     */
    public function unsetPaymentMethod(): self
    {
        $this->instance->unsetPaymentMethod();
        return $this;
    }

    /**
     * Sets created field.
     */
    public function created(?string $value): self
    {
        $this->instance->setCreated($value);
        return $this;
    }

    /**
     * Unsets created field.
     */
    public function unsetCreated(): self
    {
        $this->instance->unsetCreated();
        return $this;
    }

    /**
     * Sets modified field.
     */
    public function modified(?string $value): self
    {
        $this->instance->setModified($value);
        return $this;
    }

    /**
     * Unsets modified field.
     */
    public function unsetModified(): self
    {
        $this->instance->unsetModified();
        return $this;
    }

    /**
     * Sets created ts field.
     */
    public function createdTs(?int $value): self
    {
        $this->instance->setCreatedTs($value);
        return $this;
    }

    /**
     * Unsets created ts field.
     */
    public function unsetCreatedTs(): self
    {
        $this->instance->unsetCreatedTs();
        return $this;
    }

    /**
     * Sets modified ts field.
     */
    public function modifiedTs(?int $value): self
    {
        $this->instance->setModifiedTs($value);
        return $this;
    }

    /**
     * Unsets modified ts field.
     */
    public function unsetModifiedTs(): self
    {
        $this->instance->unsetModifiedTs();
        return $this;
    }

    /**
     * Sets created user id field.
     */
    public function createdUserId(?string $value): self
    {
        $this->instance->setCreatedUserId($value);
        return $this;
    }

    /**
     * Unsets created user id field.
     */
    public function unsetCreatedUserId(): self
    {
        $this->instance->unsetCreatedUserId();
        return $this;
    }

    /**
     * Sets modified user id field.
     */
    public function modifiedUserId(?string $value): self
    {
        $this->instance->setModifiedUserId($value);
        return $this;
    }

    /**
     * Unsets modified user id field.
     */
    public function unsetModifiedUserId(): self
    {
        $this->instance->unsetModifiedUserId();
        return $this;
    }

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property
     * @param mixed $value Value of property
     */
    public function additionalProperty(string $name, $value): self
    {
        $this->instance->addAdditionalProperty($name, $value);
        return $this;
    }

    /**
     * Initializes a new tag transaction object.
     */
    public function build(): TagTransaction
    {
        return CoreHelper::clone($this->instance);
    }
}
