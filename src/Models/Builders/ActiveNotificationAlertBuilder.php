<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models\Builders;

use Core\Utils\CoreHelper;
use FortisAPILib\Models\ActiveNotificationAlert;

/**
 * Builder for model ActiveNotificationAlert
 *
 * @see ActiveNotificationAlert
 */
class ActiveNotificationAlertBuilder
{
    /**
     * @var ActiveNotificationAlert
     */
    private $instance;

    private function __construct(ActiveNotificationAlert $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new active notification alert Builder object.
     */
    public static function init(string $dateStart, string $dateEnd, string $id, int $createdTs, int $modifiedTs): self
    {
        return new self(new ActiveNotificationAlert($dateStart, $dateEnd, $id, $createdTs, $modifiedTs));
    }

    /**
     * Sets location id field.
     */
    public function locationId(?string $value): self
    {
        $this->instance->setLocationId($value);
        return $this;
    }

    /**
     * Unsets location id field.
     */
    public function unsetLocationId(): self
    {
        $this->instance->unsetLocationId();
        return $this;
    }

    /**
     * Sets location api id field.
     */
    public function locationApiId(?string $value): self
    {
        $this->instance->setLocationApiId($value);
        return $this;
    }

    /**
     * Unsets location api id field.
     */
    public function unsetLocationApiId(): self
    {
        $this->instance->unsetLocationApiId();
        return $this;
    }

    /**
     * Sets user location field.
     */
    public function userLocation(?bool $value): self
    {
        $this->instance->setUserLocation($value);
        return $this;
    }

    /**
     * Sets user contact field.
     */
    public function userContact(?bool $value): self
    {
        $this->instance->setUserContact($value);
        return $this;
    }

    /**
     * Sets include children field.
     */
    public function includeChildren(?bool $value): self
    {
        $this->instance->setIncludeChildren($value);
        return $this;
    }

    /**
     * Sets alert type field.
     */
    public function alertType(?int $value): self
    {
        $this->instance->setAlertType($value);
        return $this;
    }

    /**
     * Unsets alert type field.
     */
    public function unsetAlertType(): self
    {
        $this->instance->unsetAlertType();
        return $this;
    }

    /**
     * Sets alert type id field.
     */
    public function alertTypeId(?int $value): self
    {
        $this->instance->setAlertTypeId($value);
        return $this;
    }

    /**
     * Unsets alert type id field.
     */
    public function unsetAlertTypeId(): self
    {
        $this->instance->unsetAlertTypeId();
        return $this;
    }

    /**
     * Sets description field.
     */
    public function description(?string $value): self
    {
        $this->instance->setDescription($value);
        return $this;
    }

    /**
     * Unsets description field.
     */
    public function unsetDescription(): self
    {
        $this->instance->unsetDescription();
        return $this;
    }

    /**
     * Sets alert message field.
     */
    public function alertMessage(?string $value): self
    {
        $this->instance->setAlertMessage($value);
        return $this;
    }

    /**
     * Unsets alert message field.
     */
    public function unsetAlertMessage(): self
    {
        $this->instance->unsetAlertMessage();
        return $this;
    }

    /**
     * Sets created user id field.
     */
    public function createdUserId(?string $value): self
    {
        $this->instance->setCreatedUserId($value);
        return $this;
    }

    /**
     * Unsets created user id field.
     */
    public function unsetCreatedUserId(): self
    {
        $this->instance->unsetCreatedUserId();
        return $this;
    }

    /**
     * Sets modified user id field.
     */
    public function modifiedUserId(?string $value): self
    {
        $this->instance->setModifiedUserId($value);
        return $this;
    }

    /**
     * Unsets modified user id field.
     */
    public function unsetModifiedUserId(): self
    {
        $this->instance->unsetModifiedUserId();
        return $this;
    }

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property
     * @param mixed $value Value of property
     */
    public function additionalProperty(string $name, $value): self
    {
        $this->instance->addAdditionalProperty($name, $value);
        return $this;
    }

    /**
     * Initializes a new active notification alert object.
     */
    public function build(): ActiveNotificationAlert
    {
        return CoreHelper::clone($this->instance);
    }
}
