<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models\Builders;

use Core\Utils\CoreHelper;
use FortisAPILib\Models\AchProductTransaction;

/**
 * Builder for model AchProductTransaction
 *
 * @see AchProductTransaction
 */
class AchProductTransactionBuilder
{
    /**
     * @var AchProductTransaction
     */
    private $instance;

    private function __construct(AchProductTransaction $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new ach product transaction Builder object.
     */
    public static function init(string $title, string $paymentMethod, string $locationId, string $id): self
    {
        return new self(new AchProductTransaction($title, $paymentMethod, $locationId, $id));
    }

    /**
     * Sets processor version field.
     */
    public function processorVersion(?string $value): self
    {
        $this->instance->setProcessorVersion($value);
        return $this;
    }

    /**
     * Unsets processor version field.
     */
    public function unsetProcessorVersion(): self
    {
        $this->instance->unsetProcessorVersion();
        return $this;
    }

    /**
     * Sets industry type field.
     */
    public function industryType(?string $value): self
    {
        $this->instance->setIndustryType($value);
        return $this;
    }

    /**
     * Unsets industry type field.
     */
    public function unsetIndustryType(): self
    {
        $this->instance->unsetIndustryType();
        return $this;
    }

    /**
     * Sets processor field.
     */
    public function processor(?string $value): self
    {
        $this->instance->setProcessor($value);
        return $this;
    }

    /**
     * Unsets processor field.
     */
    public function unsetProcessor(): self
    {
        $this->instance->unsetProcessor();
        return $this;
    }

    /**
     * Sets mcc field.
     */
    public function mcc(?string $value): self
    {
        $this->instance->setMcc($value);
        return $this;
    }

    /**
     * Unsets mcc field.
     */
    public function unsetMcc(): self
    {
        $this->instance->unsetMcc();
        return $this;
    }

    /**
     * Sets tax surcharge config field.
     */
    public function taxSurchargeConfig(?int $value): self
    {
        $this->instance->setTaxSurchargeConfig($value);
        return $this;
    }

    /**
     * Unsets tax surcharge config field.
     */
    public function unsetTaxSurchargeConfig(): self
    {
        $this->instance->unsetTaxSurchargeConfig();
        return $this;
    }

    /**
     * Sets terminal id field.
     */
    public function terminalId(?string $value): self
    {
        $this->instance->setTerminalId($value);
        return $this;
    }

    /**
     * Unsets terminal id field.
     */
    public function unsetTerminalId(): self
    {
        $this->instance->unsetTerminalId();
        return $this;
    }

    /**
     * Sets partner field.
     */
    public function partner(?string $value): self
    {
        $this->instance->setPartner($value);
        return $this;
    }

    /**
     * Unsets partner field.
     */
    public function unsetPartner(): self
    {
        $this->instance->unsetPartner();
        return $this;
    }

    /**
     * Sets product ach pv store id field.
     */
    public function productAchPvStoreId(?string $value): self
    {
        $this->instance->setProductAchPvStoreId($value);
        return $this;
    }

    /**
     * Unsets product ach pv store id field.
     */
    public function unsetProductAchPvStoreId(): self
    {
        $this->instance->unsetProductAchPvStoreId();
        return $this;
    }

    /**
     * Sets invoice adjustment title field.
     */
    public function invoiceAdjustmentTitle(?string $value): self
    {
        $this->instance->setInvoiceAdjustmentTitle($value);
        return $this;
    }

    /**
     * Unsets invoice adjustment title field.
     */
    public function unsetInvoiceAdjustmentTitle(): self
    {
        $this->instance->unsetInvoiceAdjustmentTitle();
        return $this;
    }

    /**
     * Sets location api id field.
     */
    public function locationApiId(?string $value): self
    {
        $this->instance->setLocationApiId($value);
        return $this;
    }

    /**
     * Unsets location api id field.
     */
    public function unsetLocationApiId(): self
    {
        $this->instance->unsetLocationApiId();
        return $this;
    }

    /**
     * Sets billing location api id field.
     */
    public function billingLocationApiId(?string $value): self
    {
        $this->instance->setBillingLocationApiId($value);
        return $this;
    }

    /**
     * Unsets billing location api id field.
     */
    public function unsetBillingLocationApiId(): self
    {
        $this->instance->unsetBillingLocationApiId();
        return $this;
    }

    /**
     * Sets portfolio id field.
     */
    public function portfolioId(?string $value): self
    {
        $this->instance->setPortfolioId($value);
        return $this;
    }

    /**
     * Unsets portfolio id field.
     */
    public function unsetPortfolioId(): self
    {
        $this->instance->unsetPortfolioId();
        return $this;
    }

    /**
     * Sets portfolio validation rule field.
     */
    public function portfolioValidationRule(?string $value): self
    {
        $this->instance->setPortfolioValidationRule($value);
        return $this;
    }

    /**
     * Unsets portfolio validation rule field.
     */
    public function unsetPortfolioValidationRule(): self
    {
        $this->instance->unsetPortfolioValidationRule();
        return $this;
    }

    /**
     * Sets sub processor field.
     */
    public function subProcessor(?string $value): self
    {
        $this->instance->setSubProcessor($value);
        return $this;
    }

    /**
     * Unsets sub processor field.
     */
    public function unsetSubProcessor(): self
    {
        $this->instance->unsetSubProcessor();
        return $this;
    }

    /**
     * Sets surcharge field.
     */
    public function surcharge(?array $value): self
    {
        $this->instance->setSurcharge($value);
        return $this;
    }

    /**
     * Sets processor data field.
     */
    public function processorData(?array $value): self
    {
        $this->instance->setProcessorData($value);
        return $this;
    }

    /**
     * Sets vt clerk number field.
     */
    public function vtClerkNumber(?bool $value): self
    {
        $this->instance->setVtClerkNumber($value);
        return $this;
    }

    /**
     * Sets vt billing phone field.
     */
    public function vtBillingPhone(?bool $value): self
    {
        $this->instance->setVtBillingPhone($value);
        return $this;
    }

    /**
     * Sets vt enable tip field.
     */
    public function vtEnableTip(?bool $value): self
    {
        $this->instance->setVtEnableTip($value);
        return $this;
    }

    /**
     * Sets ach allow debit field.
     */
    public function achAllowDebit(?bool $value): self
    {
        $this->instance->setAchAllowDebit($value);
        return $this;
    }

    /**
     * Sets ach allow credit field.
     */
    public function achAllowCredit(?bool $value): self
    {
        $this->instance->setAchAllowCredit($value);
        return $this;
    }

    /**
     * Sets ach allow refund field.
     */
    public function achAllowRefund(?bool $value): self
    {
        $this->instance->setAchAllowRefund($value);
        return $this;
    }

    /**
     * Sets vt cvv field.
     */
    public function vtCvv(?bool $value): self
    {
        $this->instance->setVtCvv($value);
        return $this;
    }

    /**
     * Sets vt street field.
     */
    public function vtStreet(?bool $value): self
    {
        $this->instance->setVtStreet($value);
        return $this;
    }

    /**
     * Sets vt zip field.
     */
    public function vtZip(?bool $value): self
    {
        $this->instance->setVtZip($value);
        return $this;
    }

    /**
     * Sets vt order num field.
     */
    public function vtOrderNum(?bool $value): self
    {
        $this->instance->setVtOrderNum($value);
        return $this;
    }

    /**
     * Sets vt enable field.
     */
    public function vtEnable(?bool $value): self
    {
        $this->instance->setVtEnable($value);
        return $this;
    }

    /**
     * Sets receipt show contact name field.
     */
    public function receiptShowContactName(?bool $value): self
    {
        $this->instance->setReceiptShowContactName($value);
        return $this;
    }

    /**
     * Sets display avs field.
     */
    public function displayAvs(?bool $value): self
    {
        $this->instance->setDisplayAvs($value);
        return $this;
    }

    /**
     * Sets card type visa field.
     */
    public function cardTypeVisa(?bool $value): self
    {
        $this->instance->setCardTypeVisa($value);
        return $this;
    }

    /**
     * Sets card type mc field.
     */
    public function cardTypeMc(?bool $value): self
    {
        $this->instance->setCardTypeMc($value);
        return $this;
    }

    /**
     * Sets card type disc field.
     */
    public function cardTypeDisc(?bool $value): self
    {
        $this->instance->setCardTypeDisc($value);
        return $this;
    }

    /**
     * Sets card type amex field.
     */
    public function cardTypeAmex(?bool $value): self
    {
        $this->instance->setCardTypeAmex($value);
        return $this;
    }

    /**
     * Sets card type diners field.
     */
    public function cardTypeDiners(?bool $value): self
    {
        $this->instance->setCardTypeDiners($value);
        return $this;
    }

    /**
     * Sets card type jcb field.
     */
    public function cardTypeJcb(?bool $value): self
    {
        $this->instance->setCardTypeJcb($value);
        return $this;
    }

    /**
     * Sets invoice location field.
     */
    public function invoiceLocation(?bool $value): self
    {
        $this->instance->setInvoiceLocation($value);
        return $this;
    }

    /**
     * Sets allow partial authorization field.
     */
    public function allowPartialAuthorization(?bool $value): self
    {
        $this->instance->setAllowPartialAuthorization($value);
        return $this;
    }

    /**
     * Sets allow recurring partial authorization field.
     */
    public function allowRecurringPartialAuthorization(?bool $value): self
    {
        $this->instance->setAllowRecurringPartialAuthorization($value);
        return $this;
    }

    /**
     * Sets auto decline cvv field.
     */
    public function autoDeclineCvv(?bool $value): self
    {
        $this->instance->setAutoDeclineCvv($value);
        return $this;
    }

    /**
     * Sets auto decline street field.
     */
    public function autoDeclineStreet(?bool $value): self
    {
        $this->instance->setAutoDeclineStreet($value);
        return $this;
    }

    /**
     * Sets auto decline zip field.
     */
    public function autoDeclineZip(?bool $value): self
    {
        $this->instance->setAutoDeclineZip($value);
        return $this;
    }

    /**
     * Sets split payments allow field.
     */
    public function splitPaymentsAllow(?bool $value): self
    {
        $this->instance->setSplitPaymentsAllow($value);
        return $this;
    }

    /**
     * Sets vt show custom fields field.
     */
    public function vtShowCustomFields(?bool $value): self
    {
        $this->instance->setVtShowCustomFields($value);
        return $this;
    }

    /**
     * Sets receipt show custom fields field.
     */
    public function receiptShowCustomFields(?bool $value): self
    {
        $this->instance->setReceiptShowCustomFields($value);
        return $this;
    }

    /**
     * Sets vt override sales tax allowed field.
     */
    public function vtOverrideSalesTaxAllowed(?bool $value): self
    {
        $this->instance->setVtOverrideSalesTaxAllowed($value);
        return $this;
    }

    /**
     * Sets vt enable sales tax field.
     */
    public function vtEnableSalesTax(?bool $value): self
    {
        $this->instance->setVtEnableSalesTax($value);
        return $this;
    }

    /**
     * Sets vt require zip field.
     */
    public function vtRequireZip(?bool $value): self
    {
        $this->instance->setVtRequireZip($value);
        return $this;
    }

    /**
     * Sets vt require street field.
     */
    public function vtRequireStreet(?bool $value): self
    {
        $this->instance->setVtRequireStreet($value);
        return $this;
    }

    /**
     * Sets auto decline cavv field.
     */
    public function autoDeclineCavv(?bool $value): self
    {
        $this->instance->setAutoDeclineCavv($value);
        return $this;
    }

    /**
     * Sets merchant id field.
     */
    public function merchantId(?string $value): self
    {
        $this->instance->setMerchantId($value);
        return $this;
    }

    /**
     * Unsets merchant id field.
     */
    public function unsetMerchantId(): self
    {
        $this->instance->unsetMerchantId();
        return $this;
    }

    /**
     * Sets receipt header field.
     */
    public function receiptHeader(?string $value): self
    {
        $this->instance->setReceiptHeader($value);
        return $this;
    }

    /**
     * Unsets receipt header field.
     */
    public function unsetReceiptHeader(): self
    {
        $this->instance->unsetReceiptHeader();
        return $this;
    }

    /**
     * Sets receipt footer field.
     */
    public function receiptFooter(?string $value): self
    {
        $this->instance->setReceiptFooter($value);
        return $this;
    }

    /**
     * Unsets receipt footer field.
     */
    public function unsetReceiptFooter(): self
    {
        $this->instance->unsetReceiptFooter();
        return $this;
    }

    /**
     * Sets receipt add account above signature field.
     */
    public function receiptAddAccountAboveSignature(?string $value): self
    {
        $this->instance->setReceiptAddAccountAboveSignature($value);
        return $this;
    }

    /**
     * Unsets receipt add account above signature field.
     */
    public function unsetReceiptAddAccountAboveSignature(): self
    {
        $this->instance->unsetReceiptAddAccountAboveSignature();
        return $this;
    }

    /**
     * Sets receipt add recurring above signature field.
     */
    public function receiptAddRecurringAboveSignature(?string $value): self
    {
        $this->instance->setReceiptAddRecurringAboveSignature($value);
        return $this;
    }

    /**
     * Unsets receipt add recurring above signature field.
     */
    public function unsetReceiptAddRecurringAboveSignature(): self
    {
        $this->instance->unsetReceiptAddRecurringAboveSignature();
        return $this;
    }

    /**
     * Sets receipt vt above signature field.
     */
    public function receiptVtAboveSignature(?string $value): self
    {
        $this->instance->setReceiptVtAboveSignature($value);
        return $this;
    }

    /**
     * Unsets receipt vt above signature field.
     */
    public function unsetReceiptVtAboveSignature(): self
    {
        $this->instance->unsetReceiptVtAboveSignature();
        return $this;
    }

    /**
     * Sets default transaction type field.
     */
    public function defaultTransactionType(?string $value): self
    {
        $this->instance->setDefaultTransactionType($value);
        return $this;
    }

    /**
     * Unsets default transaction type field.
     */
    public function unsetDefaultTransactionType(): self
    {
        $this->instance->unsetDefaultTransactionType();
        return $this;
    }

    /**
     * Sets username field.
     */
    public function username(?string $value): self
    {
        $this->instance->setUsername($value);
        return $this;
    }

    /**
     * Unsets username field.
     */
    public function unsetUsername(): self
    {
        $this->instance->unsetUsername();
        return $this;
    }

    /**
     * Sets password field.
     */
    public function password(?string $value): self
    {
        $this->instance->setPassword($value);
        return $this;
    }

    /**
     * Unsets password field.
     */
    public function unsetPassword(): self
    {
        $this->instance->unsetPassword();
        return $this;
    }

    /**
     * Sets current batch field.
     */
    public function currentBatch(?float $value): self
    {
        $this->instance->setCurrentBatch($value);
        return $this;
    }

    /**
     * Unsets current batch field.
     */
    public function unsetCurrentBatch(): self
    {
        $this->instance->unsetCurrentBatch();
        return $this;
    }

    /**
     * Sets dup check per batch field.
     */
    public function dupCheckPerBatch(?string $value): self
    {
        $this->instance->setDupCheckPerBatch($value);
        return $this;
    }

    /**
     * Unsets dup check per batch field.
     */
    public function unsetDupCheckPerBatch(): self
    {
        $this->instance->unsetDupCheckPerBatch();
        return $this;
    }

    /**
     * Sets agent code field.
     */
    public function agentCode(?string $value): self
    {
        $this->instance->setAgentCode($value);
        return $this;
    }

    /**
     * Unsets agent code field.
     */
    public function unsetAgentCode(): self
    {
        $this->instance->unsetAgentCode();
        return $this;
    }

    /**
     * Sets paylink allow field.
     */
    public function paylinkAllow(?bool $value): self
    {
        $this->instance->setPaylinkAllow($value);
        return $this;
    }

    /**
     * Sets quick invoice allow field.
     */
    public function quickInvoiceAllow(?bool $value): self
    {
        $this->instance->setQuickInvoiceAllow($value);
        return $this;
    }

    /**
     * Sets level 3 allow field.
     */
    public function level3Allow(?bool $value): self
    {
        $this->instance->setLevel3Allow($value);
        return $this;
    }

    /**
     * Sets payfac enable field.
     */
    public function payfacEnable(?bool $value): self
    {
        $this->instance->setPayfacEnable($value);
        return $this;
    }

    /**
     * Sets sales office id field.
     */
    public function salesOfficeId(?string $value): self
    {
        $this->instance->setSalesOfficeId($value);
        return $this;
    }

    /**
     * Unsets sales office id field.
     */
    public function unsetSalesOfficeId(): self
    {
        $this->instance->unsetSalesOfficeId();
        return $this;
    }

    /**
     * Sets hosted payment page max allowed field.
     */
    public function hostedPaymentPageMaxAllowed(?float $value): self
    {
        $this->instance->setHostedPaymentPageMaxAllowed($value);
        return $this;
    }

    /**
     * Unsets hosted payment page max allowed field.
     */
    public function unsetHostedPaymentPageMaxAllowed(): self
    {
        $this->instance->unsetHostedPaymentPageMaxAllowed();
        return $this;
    }

    /**
     * Sets hosted payment page allow field.
     */
    public function hostedPaymentPageAllow(?bool $value): self
    {
        $this->instance->setHostedPaymentPageAllow($value);
        return $this;
    }

    /**
     * Sets surcharge id field.
     */
    public function surchargeId(?string $value): self
    {
        $this->instance->setSurchargeId($value);
        return $this;
    }

    /**
     * Unsets surcharge id field.
     */
    public function unsetSurchargeId(): self
    {
        $this->instance->unsetSurchargeId();
        return $this;
    }

    /**
     * Sets level 3 default field.
     */
    public function level3Default(?array $value): self
    {
        $this->instance->setLevel3Default($value);
        return $this;
    }

    /**
     * Sets cau subscribe type id field.
     */
    public function cauSubscribeTypeId(?int $value): self
    {
        $this->instance->setCauSubscribeTypeId($value);
        return $this;
    }

    /**
     * Unsets cau subscribe type id field.
     */
    public function unsetCauSubscribeTypeId(): self
    {
        $this->instance->unsetCauSubscribeTypeId();
        return $this;
    }

    /**
     * Sets cau account number field.
     */
    public function cauAccountNumber(?string $value): self
    {
        $this->instance->setCauAccountNumber($value);
        return $this;
    }

    /**
     * Unsets cau account number field.
     */
    public function unsetCauAccountNumber(): self
    {
        $this->instance->unsetCauAccountNumber();
        return $this;
    }

    /**
     * Sets location billing account id field.
     */
    public function locationBillingAccountId(?string $value): self
    {
        $this->instance->setLocationBillingAccountId($value);
        return $this;
    }

    /**
     * Unsets location billing account id field.
     */
    public function unsetLocationBillingAccountId(): self
    {
        $this->instance->unsetLocationBillingAccountId();
        return $this;
    }

    /**
     * Sets product billing group id field.
     */
    public function productBillingGroupId(?string $value): self
    {
        $this->instance->setProductBillingGroupId($value);
        return $this;
    }

    /**
     * Unsets product billing group id field.
     */
    public function unsetProductBillingGroupId(): self
    {
        $this->instance->unsetProductBillingGroupId();
        return $this;
    }

    /**
     * Sets account number field.
     */
    public function accountNumber(?string $value): self
    {
        $this->instance->setAccountNumber($value);
        return $this;
    }

    /**
     * Unsets account number field.
     */
    public function unsetAccountNumber(): self
    {
        $this->instance->unsetAccountNumber();
        return $this;
    }

    /**
     * Sets run avs on accountvault create field.
     */
    public function runAvsOnAccountvaultCreate(?bool $value): self
    {
        $this->instance->setRunAvsOnAccountvaultCreate($value);
        return $this;
    }

    /**
     * Sets accountvault expire notification email enable field.
     */
    public function accountvaultExpireNotificationEmailEnable(?bool $value): self
    {
        $this->instance->setAccountvaultExpireNotificationEmailEnable($value);
        return $this;
    }

    /**
     * Sets debit allow void field.
     */
    public function debitAllowVoid(?bool $value): self
    {
        $this->instance->setDebitAllowVoid($value);
        return $this;
    }

    /**
     * Sets quick invoice text to pay field.
     */
    public function quickInvoiceTextToPay(?bool $value): self
    {
        $this->instance->setQuickInvoiceTextToPay($value);
        return $this;
    }

    /**
     * Sets authentication code field.
     */
    public function authenticationCode(?string $value): self
    {
        $this->instance->setAuthenticationCode($value);
        return $this;
    }

    /**
     * Unsets authentication code field.
     */
    public function unsetAuthenticationCode(): self
    {
        $this->instance->unsetAuthenticationCode();
        return $this;
    }

    /**
     * Sets sms enable field.
     */
    public function smsEnable(?bool $value): self
    {
        $this->instance->setSmsEnable($value);
        return $this;
    }

    /**
     * Sets vt show currency field.
     */
    public function vtShowCurrency(?bool $value): self
    {
        $this->instance->setVtShowCurrency($value);
        return $this;
    }

    /**
     * Sets receipt show currency field.
     */
    public function receiptShowCurrency(?bool $value): self
    {
        $this->instance->setReceiptShowCurrency($value);
        return $this;
    }

    /**
     * Sets allow blind refund field.
     */
    public function allowBlindRefund(?bool $value): self
    {
        $this->instance->setAllowBlindRefund($value);
        return $this;
    }

    /**
     * Sets vt show company name field.
     */
    public function vtShowCompanyName(?bool $value): self
    {
        $this->instance->setVtShowCompanyName($value);
        return $this;
    }

    /**
     * Sets receipt show company name field.
     */
    public function receiptShowCompanyName(?bool $value): self
    {
        $this->instance->setReceiptShowCompanyName($value);
        return $this;
    }

    /**
     * Sets bank funded only field.
     */
    public function bankFundedOnly(?bool $value): self
    {
        $this->instance->setBankFundedOnly($value);
        return $this;
    }

    /**
     * Sets receipt logo field.
     */
    public function receiptLogo(?string $value): self
    {
        $this->instance->setReceiptLogo($value);
        return $this;
    }

    /**
     * Sets active field.
     */
    public function active(?bool $value): self
    {
        $this->instance->setActive($value);
        return $this;
    }

    /**
     * Sets tz field.
     */
    public function tz(?string $value): self
    {
        $this->instance->setTz($value);
        return $this;
    }

    /**
     * Unsets tz field.
     */
    public function unsetTz(): self
    {
        $this->instance->unsetTz();
        return $this;
    }

    /**
     * Sets currency code field.
     */
    public function currencyCode(?float $value): self
    {
        $this->instance->setCurrencyCode($value);
        return $this;
    }

    /**
     * Unsets currency code field.
     */
    public function unsetCurrencyCode(): self
    {
        $this->instance->unsetCurrencyCode();
        return $this;
    }

    /**
     * Sets current stan field.
     */
    public function currentStan(?float $value): self
    {
        $this->instance->setCurrentStan($value);
        return $this;
    }

    /**
     * Unsets current stan field.
     */
    public function unsetCurrentStan(): self
    {
        $this->instance->unsetCurrentStan();
        return $this;
    }

    /**
     * Sets created ts field.
     */
    public function createdTs(?int $value): self
    {
        $this->instance->setCreatedTs($value);
        return $this;
    }

    /**
     * Unsets created ts field.
     */
    public function unsetCreatedTs(): self
    {
        $this->instance->unsetCreatedTs();
        return $this;
    }

    /**
     * Sets modified ts field.
     */
    public function modifiedTs(?int $value): self
    {
        $this->instance->setModifiedTs($value);
        return $this;
    }

    /**
     * Unsets modified ts field.
     */
    public function unsetModifiedTs(): self
    {
        $this->instance->unsetModifiedTs();
        return $this;
    }

    /**
     * Sets created user id field.
     */
    public function createdUserId(?string $value): self
    {
        $this->instance->setCreatedUserId($value);
        return $this;
    }

    /**
     * Unsets created user id field.
     */
    public function unsetCreatedUserId(): self
    {
        $this->instance->unsetCreatedUserId();
        return $this;
    }

    /**
     * Sets modified user id field.
     */
    public function modifiedUserId(?string $value): self
    {
        $this->instance->setModifiedUserId($value);
        return $this;
    }

    /**
     * Unsets modified user id field.
     */
    public function unsetModifiedUserId(): self
    {
        $this->instance->unsetModifiedUserId();
        return $this;
    }

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property
     * @param mixed $value Value of property
     */
    public function additionalProperty(string $name, $value): self
    {
        $this->instance->addAdditionalProperty($name, $value);
        return $this;
    }

    /**
     * Initializes a new ach product transaction object.
     */
    public function build(): AchProductTransaction
    {
        return CoreHelper::clone($this->instance);
    }
}
