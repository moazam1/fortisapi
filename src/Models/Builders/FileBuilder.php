<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models\Builders;

use Core\Utils\CoreHelper;
use FortisAPILib\Models\File;

/**
 * Builder for model File
 *
 * @see File
 */
class FileBuilder
{
    /**
     * @var File
     */
    private $instance;

    private function __construct(File $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new file Builder object.
     */
    public static function init(
        array $file,
        string $resourceId,
        string $resource,
        string $id,
        int $createdTs,
        int $modifiedTs
    ): self {
        return new self(new File($file, $resourceId, $resource, $id, $createdTs, $modifiedTs));
    }

    /**
     * Sets product file id field.
     */
    public function productFileId(?string $value): self
    {
        $this->instance->setProductFileId($value);
        return $this;
    }

    /**
     * Unsets product file id field.
     */
    public function unsetProductFileId(): self
    {
        $this->instance->unsetProductFileId();
        return $this;
    }

    /**
     * Sets file category id field.
     */
    public function fileCategoryId(?string $value): self
    {
        $this->instance->setFileCategoryId($value);
        return $this;
    }

    /**
     * Unsets file category id field.
     */
    public function unsetFileCategoryId(): self
    {
        $this->instance->unsetFileCategoryId();
        return $this;
    }

    /**
     * Sets visibility group id field.
     */
    public function visibilityGroupId(?string $value): self
    {
        $this->instance->setVisibilityGroupId($value);
        return $this;
    }

    /**
     * Unsets visibility group id field.
     */
    public function unsetVisibilityGroupId(): self
    {
        $this->instance->unsetVisibilityGroupId();
        return $this;
    }

    /**
     * Sets file description field.
     */
    public function fileDescription(?string $value): self
    {
        $this->instance->setFileDescription($value);
        return $this;
    }

    /**
     * Unsets file description field.
     */
    public function unsetFileDescription(): self
    {
        $this->instance->unsetFileDescription();
        return $this;
    }

    /**
     * Sets file name field.
     */
    public function fileName(?string $value): self
    {
        $this->instance->setFileName($value);
        return $this;
    }

    /**
     * Unsets file name field.
     */
    public function unsetFileName(): self
    {
        $this->instance->unsetFileName();
        return $this;
    }

    /**
     * Sets file extension field.
     */
    public function fileExtension(?string $value): self
    {
        $this->instance->setFileExtension($value);
        return $this;
    }

    /**
     * Unsets file extension field.
     */
    public function unsetFileExtension(): self
    {
        $this->instance->unsetFileExtension();
        return $this;
    }

    /**
     * Sets file size bytes field.
     */
    public function fileSizeBytes(?int $value): self
    {
        $this->instance->setFileSizeBytes($value);
        return $this;
    }

    /**
     * Unsets file size bytes field.
     */
    public function unsetFileSizeBytes(): self
    {
        $this->instance->unsetFileSizeBytes();
        return $this;
    }

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property
     * @param mixed $value Value of property
     */
    public function additionalProperty(string $name, $value): self
    {
        $this->instance->addAdditionalProperty($name, $value);
        return $this;
    }

    /**
     * Initializes a new file object.
     */
    public function build(): File
    {
        return CoreHelper::clone($this->instance);
    }
}
