<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models\Builders;

use Core\Utils\CoreHelper;
use FortisAPILib\Models\Surcharge;

/**
 * Builder for model Surcharge
 *
 * @see Surcharge
 */
class SurchargeBuilder
{
    /**
     * @var Surcharge
     */
    private $instance;

    private function __construct(Surcharge $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new surcharge Builder object.
     */
    public static function init(
        int $surchargeFee,
        int $surchargeRate,
        string $productTransactionId,
        string $id,
        string $createdUserId,
        string $modifiedUserId,
        int $createdTs,
        int $modifiedTs
    ): self {
        return new self(new Surcharge(
            $surchargeFee,
            $surchargeRate,
            $productTransactionId,
            $id,
            $createdUserId,
            $modifiedUserId,
            $createdTs,
            $modifiedTs
        ));
    }

    /**
     * Sets max transaction amount field.
     */
    public function maxTransactionAmount(?int $value): self
    {
        $this->instance->setMaxTransactionAmount($value);
        return $this;
    }

    /**
     * Unsets max transaction amount field.
     */
    public function unsetMaxTransactionAmount(): self
    {
        $this->instance->unsetMaxTransactionAmount();
        return $this;
    }

    /**
     * Sets min fee amount field.
     */
    public function minFeeAmount(?int $value): self
    {
        $this->instance->setMinFeeAmount($value);
        return $this;
    }

    /**
     * Unsets min fee amount field.
     */
    public function unsetMinFeeAmount(): self
    {
        $this->instance->unsetMinFeeAmount();
        return $this;
    }

    /**
     * Sets max fee amount field.
     */
    public function maxFeeAmount(?int $value): self
    {
        $this->instance->setMaxFeeAmount($value);
        return $this;
    }

    /**
     * Unsets max fee amount field.
     */
    public function unsetMaxFeeAmount(): self
    {
        $this->instance->unsetMaxFeeAmount();
        return $this;
    }

    /**
     * Sets surcharge on recurring field.
     */
    public function surchargeOnRecurring(?bool $value): self
    {
        $this->instance->setSurchargeOnRecurring($value);
        return $this;
    }

    /**
     * Sets refund surcharges field.
     */
    public function refundSurcharges(?bool $value): self
    {
        $this->instance->setRefundSurcharges($value);
        return $this;
    }

    /**
     * Sets run as separate transaction field.
     */
    public function runAsSeparateTransaction(?bool $value): self
    {
        $this->instance->setRunAsSeparateTransaction($value);
        return $this;
    }

    /**
     * Sets apply to user type id field.
     */
    public function applyToUserTypeId(?string $value): self
    {
        $this->instance->setApplyToUserTypeId($value);
        return $this;
    }

    /**
     * Unsets apply to user type id field.
     */
    public function unsetApplyToUserTypeId(): self
    {
        $this->instance->unsetApplyToUserTypeId();
        return $this;
    }

    /**
     * Sets title field.
     */
    public function title(?string $value): self
    {
        $this->instance->setTitle($value);
        return $this;
    }

    /**
     * Unsets title field.
     */
    public function unsetTitle(): self
    {
        $this->instance->unsetTitle();
        return $this;
    }

    /**
     * Sets surcharge label field.
     */
    public function surchargeLabel(?string $value): self
    {
        $this->instance->setSurchargeLabel($value);
        return $this;
    }

    /**
     * Unsets surcharge label field.
     */
    public function unsetSurchargeLabel(): self
    {
        $this->instance->unsetSurchargeLabel();
        return $this;
    }

    /**
     * Sets surcharge transaction product id field.
     */
    public function surchargeTransactionProductId(?string $value): self
    {
        $this->instance->setSurchargeTransactionProductId($value);
        return $this;
    }

    /**
     * Unsets surcharge transaction product id field.
     */
    public function unsetSurchargeTransactionProductId(): self
    {
        $this->instance->unsetSurchargeTransactionProductId();
        return $this;
    }

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property
     * @param mixed $value Value of property
     */
    public function additionalProperty(string $name, $value): self
    {
        $this->instance->addAdditionalProperty($name, $value);
        return $this;
    }

    /**
     * Initializes a new surcharge object.
     */
    public function build(): Surcharge
    {
        return CoreHelper::clone($this->instance);
    }
}
