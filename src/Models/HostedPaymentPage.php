<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models;

use stdClass;

/**
 * Hosted Payment Page Information on `expand`
 */
class HostedPaymentPage implements \JsonSerializable
{
    /**
     * @var array
     */
    private $userId = [];

    /**
     * @var array
     */
    private $locationId = [];

    /**
     * @var array
     */
    private $locationApiId = [];

    /**
     * @var string
     */
    private $productTransactionId;

    /**
     * @var string
     */
    private $title;

    /**
     * @var array
     */
    private $redirectUrlDelay = ['value' => 15];

    /**
     * @var array
     */
    private $minPaymentAmount = [];

    /**
     * @var array
     */
    private $maxPaymentAmount = ['value' => 9999999999];

    /**
     * @var array
     */
    private $redirectUrlOnApprove = [];

    /**
     * @var array
     */
    private $redirectUrlOnDecline = [];

    /**
     * @var FieldConfiguration
     */
    private $fieldConfiguration;

    /**
     * @var array
     */
    private $encryptionKey = [];

    /**
     * @var array
     */
    private $stylesheetUrl = [];

    /**
     * @var bool|null
     */
    private $parentSendMessage;

    /**
     * @var bool|null
     */
    private $hideOptionalFields;

    /**
     * @var string
     */
    private $id;

    /**
     * @var int
     */
    private $createdTs;

    /**
     * @var int
     */
    private $modifiedTs;

    /**
     * @var array
     */
    private $createdUserId = [];

    /**
     * @var array
     */
    private $modifiedUserId = [];

    /**
     * @param string $productTransactionId
     * @param string $title
     * @param FieldConfiguration $fieldConfiguration
     * @param string $id
     * @param int $createdTs
     * @param int $modifiedTs
     */
    public function __construct(
        string $productTransactionId,
        string $title,
        FieldConfiguration $fieldConfiguration,
        string $id,
        int $createdTs,
        int $modifiedTs
    ) {
        $this->productTransactionId = $productTransactionId;
        $this->title = $title;
        $this->fieldConfiguration = $fieldConfiguration;
        $this->id = $id;
        $this->createdTs = $createdTs;
        $this->modifiedTs = $modifiedTs;
    }

    /**
     * Returns User Id.
     * User ID
     */
    public function getUserId(): ?string
    {
        if (count($this->userId) == 0) {
            return null;
        }
        return $this->userId['value'];
    }

    /**
     * Sets User Id.
     * User ID
     *
     * @maps user_id
     */
    public function setUserId(?string $userId): void
    {
        $this->userId['value'] = $userId;
    }

    /**
     * Unsets User Id.
     * User ID
     */
    public function unsetUserId(): void
    {
        $this->userId = [];
    }

    /**
     * Returns Location Id.
     * Location ID
     */
    public function getLocationId(): ?string
    {
        if (count($this->locationId) == 0) {
            return null;
        }
        return $this->locationId['value'];
    }

    /**
     * Sets Location Id.
     * Location ID
     *
     * @maps location_id
     */
    public function setLocationId(?string $locationId): void
    {
        $this->locationId['value'] = $locationId;
    }

    /**
     * Unsets Location Id.
     * Location ID
     */
    public function unsetLocationId(): void
    {
        $this->locationId = [];
    }

    /**
     * Returns Location Api Id.
     * Location Api Id
     */
    public function getLocationApiId(): ?string
    {
        if (count($this->locationApiId) == 0) {
            return null;
        }
        return $this->locationApiId['value'];
    }

    /**
     * Sets Location Api Id.
     * Location Api Id
     *
     * @maps location_api_id
     */
    public function setLocationApiId(?string $locationApiId): void
    {
        $this->locationApiId['value'] = $locationApiId;
    }

    /**
     * Unsets Location Api Id.
     * Location Api Id
     */
    public function unsetLocationApiId(): void
    {
        $this->locationApiId = [];
    }

    /**
     * Returns Product Transaction Id.
     * Product Transaction ID
     */
    public function getProductTransactionId(): string
    {
        return $this->productTransactionId;
    }

    /**
     * Sets Product Transaction Id.
     * Product Transaction ID
     *
     * @required
     * @maps product_transaction_id
     */
    public function setProductTransactionId(string $productTransactionId): void
    {
        $this->productTransactionId = $productTransactionId;
    }

    /**
     * Returns Title.
     * Title
     */
    public function getTitle(): string
    {
        return $this->title;
    }

    /**
     * Sets Title.
     * Title
     *
     * @required
     * @maps title
     */
    public function setTitle(string $title): void
    {
        $this->title = $title;
    }

    /**
     * Returns Redirect Url Delay.
     * Redirect Url Delay
     */
    public function getRedirectUrlDelay(): ?float
    {
        if (count($this->redirectUrlDelay) == 0) {
            return null;
        }
        return $this->redirectUrlDelay['value'];
    }

    /**
     * Sets Redirect Url Delay.
     * Redirect Url Delay
     *
     * @maps redirect_url_delay
     */
    public function setRedirectUrlDelay(?float $redirectUrlDelay): void
    {
        $this->redirectUrlDelay['value'] = $redirectUrlDelay;
    }

    /**
     * Unsets Redirect Url Delay.
     * Redirect Url Delay
     */
    public function unsetRedirectUrlDelay(): void
    {
        $this->redirectUrlDelay = [];
    }

    /**
     * Returns Min Payment Amount.
     * Min Payment Amount
     */
    public function getMinPaymentAmount(): ?int
    {
        if (count($this->minPaymentAmount) == 0) {
            return null;
        }
        return $this->minPaymentAmount['value'];
    }

    /**
     * Sets Min Payment Amount.
     * Min Payment Amount
     *
     * @maps min_payment_amount
     */
    public function setMinPaymentAmount(?int $minPaymentAmount): void
    {
        $this->minPaymentAmount['value'] = $minPaymentAmount;
    }

    /**
     * Unsets Min Payment Amount.
     * Min Payment Amount
     */
    public function unsetMinPaymentAmount(): void
    {
        $this->minPaymentAmount = [];
    }

    /**
     * Returns Max Payment Amount.
     * Max Payment Amount
     */
    public function getMaxPaymentAmount(): ?int
    {
        if (count($this->maxPaymentAmount) == 0) {
            return null;
        }
        return $this->maxPaymentAmount['value'];
    }

    /**
     * Sets Max Payment Amount.
     * Max Payment Amount
     *
     * @maps max_payment_amount
     */
    public function setMaxPaymentAmount(?int $maxPaymentAmount): void
    {
        $this->maxPaymentAmount['value'] = $maxPaymentAmount;
    }

    /**
     * Unsets Max Payment Amount.
     * Max Payment Amount
     */
    public function unsetMaxPaymentAmount(): void
    {
        $this->maxPaymentAmount = [];
    }

    /**
     * Returns Redirect Url on Approve.
     * Redirect Url On Approval
     */
    public function getRedirectUrlOnApprove(): ?string
    {
        if (count($this->redirectUrlOnApprove) == 0) {
            return null;
        }
        return $this->redirectUrlOnApprove['value'];
    }

    /**
     * Sets Redirect Url on Approve.
     * Redirect Url On Approval
     *
     * @maps redirect_url_on_approve
     */
    public function setRedirectUrlOnApprove(?string $redirectUrlOnApprove): void
    {
        $this->redirectUrlOnApprove['value'] = $redirectUrlOnApprove;
    }

    /**
     * Unsets Redirect Url on Approve.
     * Redirect Url On Approval
     */
    public function unsetRedirectUrlOnApprove(): void
    {
        $this->redirectUrlOnApprove = [];
    }

    /**
     * Returns Redirect Url on Decline.
     * Redirect Url On Decline
     */
    public function getRedirectUrlOnDecline(): ?string
    {
        if (count($this->redirectUrlOnDecline) == 0) {
            return null;
        }
        return $this->redirectUrlOnDecline['value'];
    }

    /**
     * Sets Redirect Url on Decline.
     * Redirect Url On Decline
     *
     * @maps redirect_url_on_decline
     */
    public function setRedirectUrlOnDecline(?string $redirectUrlOnDecline): void
    {
        $this->redirectUrlOnDecline['value'] = $redirectUrlOnDecline;
    }

    /**
     * Unsets Redirect Url on Decline.
     * Redirect Url On Decline
     */
    public function unsetRedirectUrlOnDecline(): void
    {
        $this->redirectUrlOnDecline = [];
    }

    /**
     * Returns Field Configuration.
     * field_configuration
     */
    public function getFieldConfiguration(): FieldConfiguration
    {
        return $this->fieldConfiguration;
    }

    /**
     * Sets Field Configuration.
     * field_configuration
     *
     * @required
     * @maps field_configuration
     */
    public function setFieldConfiguration(FieldConfiguration $fieldConfiguration): void
    {
        $this->fieldConfiguration = $fieldConfiguration;
    }

    /**
     * Returns Encryption Key.
     * Encryption Key
     */
    public function getEncryptionKey(): ?string
    {
        if (count($this->encryptionKey) == 0) {
            return null;
        }
        return $this->encryptionKey['value'];
    }

    /**
     * Sets Encryption Key.
     * Encryption Key
     *
     * @maps encryption_key
     */
    public function setEncryptionKey(?string $encryptionKey): void
    {
        $this->encryptionKey['value'] = $encryptionKey;
    }

    /**
     * Unsets Encryption Key.
     * Encryption Key
     */
    public function unsetEncryptionKey(): void
    {
        $this->encryptionKey = [];
    }

    /**
     * Returns Stylesheet Url.
     * Stylesheet Url
     */
    public function getStylesheetUrl(): ?string
    {
        if (count($this->stylesheetUrl) == 0) {
            return null;
        }
        return $this->stylesheetUrl['value'];
    }

    /**
     * Sets Stylesheet Url.
     * Stylesheet Url
     *
     * @maps stylesheet_url
     */
    public function setStylesheetUrl(?string $stylesheetUrl): void
    {
        $this->stylesheetUrl['value'] = $stylesheetUrl;
    }

    /**
     * Unsets Stylesheet Url.
     * Stylesheet Url
     */
    public function unsetStylesheetUrl(): void
    {
        $this->stylesheetUrl = [];
    }

    /**
     * Returns Parent Send Message.
     * Parent Send Message
     */
    public function getParentSendMessage(): ?bool
    {
        return $this->parentSendMessage;
    }

    /**
     * Sets Parent Send Message.
     * Parent Send Message
     *
     * @maps parent_send_message
     */
    public function setParentSendMessage(?bool $parentSendMessage): void
    {
        $this->parentSendMessage = $parentSendMessage;
    }

    /**
     * Returns Hide Optional Fields.
     * Hide Optional Fields
     */
    public function getHideOptionalFields(): ?bool
    {
        return $this->hideOptionalFields;
    }

    /**
     * Sets Hide Optional Fields.
     * Hide Optional Fields
     *
     * @maps hide_optional_fields
     */
    public function setHideOptionalFields(?bool $hideOptionalFields): void
    {
        $this->hideOptionalFields = $hideOptionalFields;
    }

    /**
     * Returns Id.
     * Hosted Payment Page Id
     */
    public function getId(): string
    {
        return $this->id;
    }

    /**
     * Sets Id.
     * Hosted Payment Page Id
     *
     * @required
     * @maps id
     */
    public function setId(string $id): void
    {
        $this->id = $id;
    }

    /**
     * Returns Created Ts.
     * Created Time Stamp
     */
    public function getCreatedTs(): int
    {
        return $this->createdTs;
    }

    /**
     * Sets Created Ts.
     * Created Time Stamp
     *
     * @required
     * @maps created_ts
     */
    public function setCreatedTs(int $createdTs): void
    {
        $this->createdTs = $createdTs;
    }

    /**
     * Returns Modified Ts.
     * Modified Time Stamp
     */
    public function getModifiedTs(): int
    {
        return $this->modifiedTs;
    }

    /**
     * Sets Modified Ts.
     * Modified Time Stamp
     *
     * @required
     * @maps modified_ts
     */
    public function setModifiedTs(int $modifiedTs): void
    {
        $this->modifiedTs = $modifiedTs;
    }

    /**
     * Returns Created User Id.
     * System generated id for user who created record
     */
    public function getCreatedUserId(): ?string
    {
        if (count($this->createdUserId) == 0) {
            return null;
        }
        return $this->createdUserId['value'];
    }

    /**
     * Sets Created User Id.
     * System generated id for user who created record
     *
     * @maps created_user_id
     */
    public function setCreatedUserId(?string $createdUserId): void
    {
        $this->createdUserId['value'] = $createdUserId;
    }

    /**
     * Unsets Created User Id.
     * System generated id for user who created record
     */
    public function unsetCreatedUserId(): void
    {
        $this->createdUserId = [];
    }

    /**
     * Returns Modified User Id.
     * System generated id for user who created record
     */
    public function getModifiedUserId(): ?string
    {
        if (count($this->modifiedUserId) == 0) {
            return null;
        }
        return $this->modifiedUserId['value'];
    }

    /**
     * Sets Modified User Id.
     * System generated id for user who created record
     *
     * @maps modified_user_id
     */
    public function setModifiedUserId(?string $modifiedUserId): void
    {
        $this->modifiedUserId['value'] = $modifiedUserId;
    }

    /**
     * Unsets Modified User Id.
     * System generated id for user who created record
     */
    public function unsetModifiedUserId(): void
    {
        $this->modifiedUserId = [];
    }

    private $additionalProperties = [];

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property
     * @param mixed $value Value of property
     */
    public function addAdditionalProperty(string $name, $value)
    {
        $this->additionalProperties[$name] = $value;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (!empty($this->userId)) {
            $json['user_id']                 = $this->userId['value'];
        }
        if (!empty($this->locationId)) {
            $json['location_id']             = $this->locationId['value'];
        }
        if (!empty($this->locationApiId)) {
            $json['location_api_id']         = $this->locationApiId['value'];
        }
        $json['product_transaction_id']      = $this->productTransactionId;
        $json['title']                       = $this->title;
        if (!empty($this->redirectUrlDelay)) {
            $json['redirect_url_delay']      = $this->redirectUrlDelay['value'];
        }
        if (!empty($this->minPaymentAmount)) {
            $json['min_payment_amount']      = $this->minPaymentAmount['value'];
        }
        if (!empty($this->maxPaymentAmount)) {
            $json['max_payment_amount']      = $this->maxPaymentAmount['value'];
        }
        if (!empty($this->redirectUrlOnApprove)) {
            $json['redirect_url_on_approve'] = $this->redirectUrlOnApprove['value'];
        }
        if (!empty($this->redirectUrlOnDecline)) {
            $json['redirect_url_on_decline'] = $this->redirectUrlOnDecline['value'];
        }
        $json['field_configuration']         = $this->fieldConfiguration;
        if (!empty($this->encryptionKey)) {
            $json['encryption_key']          = $this->encryptionKey['value'];
        }
        if (!empty($this->stylesheetUrl)) {
            $json['stylesheet_url']          = $this->stylesheetUrl['value'];
        }
        if (isset($this->parentSendMessage)) {
            $json['parent_send_message']     = $this->parentSendMessage;
        }
        if (isset($this->hideOptionalFields)) {
            $json['hide_optional_fields']    = $this->hideOptionalFields;
        }
        $json['id']                          = $this->id;
        $json['created_ts']                  = $this->createdTs;
        $json['modified_ts']                 = $this->modifiedTs;
        if (!empty($this->createdUserId)) {
            $json['created_user_id']         = $this->createdUserId['value'];
        }
        if (!empty($this->modifiedUserId)) {
            $json['modified_user_id']        = $this->modifiedUserId['value'];
        }
        $json = array_merge($json, $this->additionalProperties);

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
