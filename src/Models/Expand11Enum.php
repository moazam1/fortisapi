<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models;

use Core\Utils\CoreHelper;
use Exception;
use stdClass;

class Expand11Enum
{
    public const QUICK_INVOICE_SETTING = 'quick_invoice_setting';

    public const TAGS = 'tags';

    public const QUICK_INVOICE_VIEWS = 'quick_invoice_views';

    public const ALL_TAGS = 'all_tags';

    public const LOCATION = 'location';

    public const CREATED_USER = 'created_user';

    public const MODIFIED_USER = 'modified_user';

    public const CHANGELOGS = 'changelogs';

    public const CONTACT = 'contact';

    public const LOG_EMAILS = 'log_emails';

    public const LOG_SMS = 'log_sms';

    public const TRANSACTIONS = 'transactions';

    public const CC_PRODUCT_TRANSACTION = 'cc_product_transaction';

    public const ACH_PRODUCT_TRANSACTION = 'ach_product_transaction';

    public const EMAIL_BLACKLIST = 'email_blacklist';

    public const SMS_BLACKLIST = 'sms_blacklist';

    public const FILES = 'files';

    public const PAYMENT_URL = 'payment_url';

    private const _ALL_VALUES = [
        self::QUICK_INVOICE_SETTING,
        self::TAGS,
        self::QUICK_INVOICE_VIEWS,
        self::ALL_TAGS,
        self::LOCATION,
        self::CREATED_USER,
        self::MODIFIED_USER,
        self::CHANGELOGS,
        self::CONTACT,
        self::LOG_EMAILS,
        self::LOG_SMS,
        self::TRANSACTIONS,
        self::CC_PRODUCT_TRANSACTION,
        self::ACH_PRODUCT_TRANSACTION,
        self::EMAIL_BLACKLIST,
        self::SMS_BLACKLIST,
        self::FILES,
        self::PAYMENT_URL
    ];

    /**
     * Ensures that all the given values are present in this Enum.
     *
     * @param array|stdClass|null|string $value Value or a list/map of values to be checked
     *
     * @return array|null|string Input value(s), if all are a part of this Enum
     *
     * @throws Exception Throws exception if any given value is not in this Enum
     */
    public static function checkValue($value)
    {
        $value = json_decode(json_encode($value), true); // converts stdClass into array
        if (CoreHelper::checkValueOrValuesInList($value, self::_ALL_VALUES)) {
            return $value;
        }
        throw new Exception("$value is invalid for Expand11Enum.");
    }
}
