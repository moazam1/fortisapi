<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Tests\Controllers;

use Core\TestCase\BodyMatchers\KeysBodyMatcher;
use Core\TestCase\TestParam;
use FortisAPILib\Controllers\BatchesController;
use FortisAPILib\Exceptions;

class BatchesControllerTest extends BaseTestController
{
    /**
     * @var BatchesController BatchesController instance
     */
    protected static $controller;

    /**
     * Setup test class
     */
    public static function setUpBeforeClass(): void
    {
        self::$controller = parent::getClient()->getBatchesController();
    }

    public function testTestListAllBatches()
    {
        // Parameters for the API call
        $page = null;
        $sort = null;
        $filter = null;
        $expand = null;

        // Perform API call
        $result = null;
        try {
            $result = self::$controller->listAllBatches($page, $sort, $filter, $expand);
        } catch (Exceptions\ApiException $e) {
        }

        $headers = [];
        $headers['Content-Type'] = ['application/json', true];

        // Assert result with expected response
        $this->newTestCase($result)
            ->expectStatus(200)
            ->allowExtraHeaders()
            ->expectHeaders($headers)
            ->bodyMatcher(KeysBodyMatcher::init(TestParam::object(
                '{"type":"BatchsCollection","list":[{"id":"11e95f8ec39de8fbdb0a4f1a","created_t' .
                's":1422040992,"product_transaction_id":"11e95f8ec39de8fbdb0a4f1a","processing_s' .
                'tatus_id":2,"batch_num":4,"is_open":0,"settlement_file_name":"settement_file.tx' .
                't","batch_close_ts":1531423693,"batch_close_detail":"BATCH_MISMATCH","total_sal' .
                'e_amount":2342,"total_sale_count":21,"total_refund_amount":2342,"total_refund_c' .
                'ount":18,"total_void_amount":2342,"total_void_count":17,"changelogs":[{"id":"11' .
                'e95f8ec39de8fbdb0a4f1a","created_ts":1422040992,"action":"CREATE","model":"Tran' .
                'sactionRequest","model_id":"11ec829598f0d4008be9aba4","user_id":"11e95f8ec39de8' .
                'fbdb0a4f1a","changelog_details":[{"id":"11e95f8ec39de8fbdb0a4f1a","changelog_id' .
                '":"11e95f8ec39de8fbdb0a4f1a","field":"next_run_ts","old_value":"1643616000"}],"' .
                'user":{"id":"11e95f8ec39de8fbdb0a4f1a","username":"email@domain.com","first_nam' .
                'e":"Bob","last_name":"Fairview"}}],"postback_logs":[{"id":"11e95f8ec39de8fbdb0a' .
                '4f1a","postback_config_id":"11e95f8ec39de8fbdb0a4f1a","changelog_id":"11e95f8ec' .
                '39de8fbdb0a4f1a","next_run_ts":1422040992,"created_ts":1422040992,"model_id":"1' .
                '1e95f8ec39de8fbdb0a4f1a"}],"product_transaction":{"processor_version":"1_0_0","' .
                'title":"My terminal","payment_method":"cc","processor":"zgate","mcc":"1111","ta' .
                'x_surcharge_config":2,"partner":"standalone","location_id":"11e95f8ec39de8fbdb0' .
                'a4f1a","surcharge":{},"processor_data":{},"vt_clerk_number":true,"vt_billing_ph' .
                'one":true,"vt_enable_tip":true,"ach_allow_debit":true,"ach_allow_credit":true,"' .
                'ach_allow_refund":true,"vt_cvv":true,"vt_street":true,"vt_zip":true,"vt_order_n' .
                'um":true,"vt_enable":true,"receipt_show_contact_name":true,"display_avs":true,"' .
                'card_type_visa":true,"card_type_mc":true,"card_type_disc":true,"card_type_amex"' .
                ':true,"card_type_diners":true,"card_type_jcb":true,"invoice_location":true,"all' .
                'ow_partial_authorization":true,"allow_recurring_partial_authorization":true,"au' .
                'to_decline_cvv":true,"auto_decline_street":true,"auto_decline_zip":true,"split_' .
                'payments_allow":true,"vt_show_custom_fields":true,"receipt_show_custom_fields":' .
                'true,"vt_override_sales_tax_allowed":true,"vt_enable_sales_tax":true,"vt_requir' .
                'e_zip":true,"vt_require_street":true,"auto_decline_cavv":true,"current_batch":3' .
                '4,"dup_check_per_batch":null,"paylink_allow":false,"quick_invoice_allow":false,' .
                '"level3_allow":false,"payfac_enable":false,"sales_office_id":"11e95f8ec39de8fbd' .
                'b0a4f1a","hosted_payment_page_allow":false,"surcharge_id":"11e95f8ec39de8fbdb0a' .
                '4f1a","level3_default":{},"cau_subscribe_type_id":0,"location_billing_account_i' .
                'd":"11eb88b873980c64a21e5fd2","product_billing_group_id":"nofees","account_numb' .
                'er":"12345678","run_avs_on_accountvault_create":false,"accountvault_expire_noti' .
                'fication_email_enable":false,"debit_allow_void":false,"quick_invoice_text_to_pa' .
                'y":false,"sms_enable":false,"vt_show_currency":true,"receipt_show_currency":fal' .
                'se,"allow_blind_refund":false,"vt_show_company_name":false,"receipt_show_compan' .
                'y_name":false,"bank_funded_only":false,"id":"11e95f8ec39de8fbdb0a4f1a","active"' .
                ':true,"created_ts":1422040992,"modified_ts":1422040992,"created_user_id":"11e95' .
                'f8ec39de8fbdb0a4f1a","modified_user_id":"11e95f8ec39de8fbdb0a4f1a"}}],"links":{' .
                '"type":"Links","first":"/v1/endpoint?page[size]=10&page[number]=1","previous":"' .
                '/v1/endpoint?page[size]=10&page[number]=5","last":"/v1/endpoint?page[size]=10&p' .
                'age[number]=42"},"pagination":{"type":"Pagination","total_count":423,"page_coun' .
                't":42,"page_number":6,"page_size":10},"sort":{"type":"Sorting","fields":[{"fiel' .
                'd":"last_name","order":"asc"}]}}'
            )))
            ->assert();
    }

    public function testTestSettleABatch()
    {
        // Parameters for the API call
        $batchId = '11e95f8ec39de8fbdb0a4f1a';

        // Perform API call
        $result = null;
        try {
            $result = self::$controller->settleABatch($batchId);
        } catch (Exceptions\ApiException $e) {
        }

        $headers = [];
        $headers['Content-Type'] = ['application/json', true];

        // Assert result with expected response
        $this->newTestCase($result)
            ->expectStatus(202)
            ->allowExtraHeaders()
            ->expectHeaders($headers)
            ->bodyMatcher(KeysBodyMatcher::init(TestParam::object(
                '{"type":"AsyncProcessing","data":{"async":{"code":"406c66c3-21cb-47fb-80fc-843' .
                'bc42507fb","link":"/v1/async/status/406c66c3-21cb-47fb-80fc-843bc42507fb"}}}'
            )))
            ->assert();
    }
}
