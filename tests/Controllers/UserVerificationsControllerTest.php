<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Tests\Controllers;

use Core\TestCase\BodyMatchers\KeysBodyMatcher;
use Core\TestCase\TestParam;
use FortisAPILib\Controllers\UserVerificationsController;
use FortisAPILib\Exceptions;

class UserVerificationsControllerTest extends BaseTestController
{
    /**
     * @var UserVerificationsController UserVerificationsController instance
     */
    protected static $controller;

    /**
     * Setup test class
     */
    public static function setUpBeforeClass(): void
    {
        self::$controller = parent::getClient()->getUserVerificationsController();
    }

    public function testTestGetUserVerification()
    {
        // Parameters for the API call
        $userVerificationId =
            '11e95f8ec39de8fbdb0a4f1a';

        // Perform API call
        $result = null;
        try {
            $result = self::$controller->getUserVerification($userVerificationId);
        } catch (Exceptions\ApiException $e) {
        }

        $headers = [];
        $headers['Content-Type'] = ['application/json', true];

        // Assert result with expected response
        $this->newTestCase($result)
            ->expectStatus(200)
            ->allowExtraHeaders()
            ->expectHeaders($headers)
            ->bodyMatcher(KeysBodyMatcher::init(TestParam::object(
                '{"type":"UserVerification","data":{"id":"11e95f8ec39de8fbdb0a4f1a","user_id":"' .
                '11e95f8ec39de8fbdb0a4f1a","hash":"123456781234567812345678","created_ts":142204' .
                '0992}}'
            )))
            ->assert();
    }

    public function testTestListUserVerifications()
    {
        // Parameters for the API call
        $page = null;
        $sort = null;
        $filter = null;
        $expand = null;

        // Perform API call
        $result = null;
        try {
            $result = self::$controller->listUserVerifications($page, $sort, $filter, $expand);
        } catch (Exceptions\ApiException $e) {
        }

        $headers = [];
        $headers['Content-Type'] = ['application/json', true];

        // Assert result with expected response
        $this->newTestCase($result)
            ->expectStatus(200)
            ->allowExtraHeaders()
            ->expectHeaders($headers)
            ->bodyMatcher(KeysBodyMatcher::init(TestParam::object(
                '{"type":"UserVerificationsCollection","list":[{"id":"11e95f8ec39de8fbdb0a4f1a"' .
                ',"user_id":"11e95f8ec39de8fbdb0a4f1a","hash":"123456781234567812345678","create' .
                'd_ts":1422040992}],"links":{"type":"Links","first":"/v1/endpoint?page[size]=10&' .
                'page[number]=1","previous":"/v1/endpoint?page[size]=10&page[number]=5","last":"' .
                '/v1/endpoint?page[size]=10&page[number]=42"},"pagination":{"type":"Pagination",' .
                '"total_count":423,"page_count":42,"page_number":6,"page_size":10},"sort":{"type' .
                '":"Sorting","fields":[{"field":"last_name","order":"asc"}]}}'
            )))
            ->assert();
    }
}
